ARM GAS  /tmp/ccIMP9UY.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB37:
  26              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_it.c **** /**
   3:Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Src/stm32f0xx_it.c ****   *
   8:Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Src/stm32f0xx_it.c ****   *
  10:Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f0xx_it.c ****   *
  21:Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f0xx_it.c ****   *
  32:Src/stm32f0xx_it.c ****   ******************************************************************************
ARM GAS  /tmp/ccIMP9UY.s 			page 2


  33:Src/stm32f0xx_it.c ****   */
  34:Src/stm32f0xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f0xx_it.c **** 
  36:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f0xx_it.c **** #include "main.h"
  38:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  39:Src/stm32f0xx_it.c **** #include "cmsis_os.h"
  40:Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  41:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  42:Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  43:Src/stm32f0xx_it.c **** 
  44:Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  45:Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  46:Src/stm32f0xx_it.c **** 
  47:Src/stm32f0xx_it.c **** /* USER CODE END TD */
  48:Src/stm32f0xx_it.c **** 
  49:Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  50:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  51:Src/stm32f0xx_it.c ****  
  52:Src/stm32f0xx_it.c **** /* USER CODE END PD */
  53:Src/stm32f0xx_it.c **** 
  54:Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  55:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  56:Src/stm32f0xx_it.c **** 
  57:Src/stm32f0xx_it.c **** /* USER CODE END PM */
  58:Src/stm32f0xx_it.c **** 
  59:Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  60:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  61:Src/stm32f0xx_it.c **** 
  62:Src/stm32f0xx_it.c **** /* USER CODE END PV */
  63:Src/stm32f0xx_it.c **** 
  64:Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  65:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  66:Src/stm32f0xx_it.c **** 
  67:Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  68:Src/stm32f0xx_it.c **** 
  69:Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  70:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  71:Src/stm32f0xx_it.c **** 
  72:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  73:Src/stm32f0xx_it.c **** 
  74:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  75:Src/stm32f0xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  76:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_adc;
  77:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  78:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  79:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_i2c2_rx;
  80:Src/stm32f0xx_it.c **** extern DMA_HandleTypeDef hdma_i2c2_tx;
  81:Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  82:Src/stm32f0xx_it.c **** 
  83:Src/stm32f0xx_it.c **** /* USER CODE END EV */
  84:Src/stm32f0xx_it.c **** 
  85:Src/stm32f0xx_it.c **** /******************************************************************************/
  86:Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */ 
  87:Src/stm32f0xx_it.c **** /******************************************************************************/
  88:Src/stm32f0xx_it.c **** /**
  89:Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
ARM GAS  /tmp/ccIMP9UY.s 			page 3


  90:Src/stm32f0xx_it.c ****   */
  91:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  92:Src/stm32f0xx_it.c **** {
  27              		.loc 1 92 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  93:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  94:Src/stm32f0xx_it.c **** 
  95:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  96:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  97:Src/stm32f0xx_it.c **** 
  98:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  99:Src/stm32f0xx_it.c **** }
  32              		.loc 1 99 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE37:
  38              		.section	.text.HardFault_Handler,"ax",%progbits
  39              		.align	1
  40              		.global	HardFault_Handler
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HardFault_Handler:
  47              	.LFB38:
 100:Src/stm32f0xx_it.c **** 
 101:Src/stm32f0xx_it.c **** /**
 102:Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
 103:Src/stm32f0xx_it.c ****   */
 104:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
 105:Src/stm32f0xx_it.c **** {
  48              		.loc 1 105 1 view -0
  49              		.cfi_startproc
  50              		@ Volatile: function does not return.
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54              	.L3:
 106:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 107:Src/stm32f0xx_it.c **** 
 108:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 109:Src/stm32f0xx_it.c ****   while (1)
  55              		.loc 1 109 3 discriminator 1 view .LVU3
 110:Src/stm32f0xx_it.c ****   {
 111:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 112:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 113:Src/stm32f0xx_it.c ****   }
  56              		.loc 1 113 3 discriminator 1 view .LVU4
  57 0000 FEE7     		b	.L3
  58              		.cfi_endproc
  59              	.LFE38:
  61              		.section	.text.SysTick_Handler,"ax",%progbits
  62              		.align	1
ARM GAS  /tmp/ccIMP9UY.s 			page 4


  63              		.global	SysTick_Handler
  64              		.syntax unified
  65              		.code	16
  66              		.thumb_func
  67              		.fpu softvfp
  69              	SysTick_Handler:
  70              	.LFB39:
 114:Src/stm32f0xx_it.c **** }
 115:Src/stm32f0xx_it.c **** 
 116:Src/stm32f0xx_it.c **** /**
 117:Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 118:Src/stm32f0xx_it.c ****   */
 119:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 120:Src/stm32f0xx_it.c **** {
  71              		.loc 1 120 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 10B5     		push	{r4, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 4, -8
  79              		.cfi_offset 14, -4
 121:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 122:Src/stm32f0xx_it.c **** 
 123:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 124:Src/stm32f0xx_it.c ****   HAL_IncTick();
  80              		.loc 1 124 3 view .LVU6
  81 0002 FFF7FEFF 		bl	HAL_IncTick
  82              	.LVL0:
 125:Src/stm32f0xx_it.c ****   osSystickHandler();
  83              		.loc 1 125 3 view .LVU7
  84 0006 FFF7FEFF 		bl	osSystickHandler
  85              	.LVL1:
 126:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 127:Src/stm32f0xx_it.c **** 
 128:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 129:Src/stm32f0xx_it.c **** }
  86              		.loc 1 129 1 is_stmt 0 view .LVU8
  87              		@ sp needed
  88 000a 10BD     		pop	{r4, pc}
  89              		.cfi_endproc
  90              	.LFE39:
  92              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
  93              		.align	1
  94              		.global	DMA1_Channel1_IRQHandler
  95              		.syntax unified
  96              		.code	16
  97              		.thumb_func
  98              		.fpu softvfp
 100              	DMA1_Channel1_IRQHandler:
 101              	.LFB40:
 130:Src/stm32f0xx_it.c **** 
 131:Src/stm32f0xx_it.c **** /******************************************************************************/
 132:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 133:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 134:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
ARM GAS  /tmp/ccIMP9UY.s 			page 5


 135:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 136:Src/stm32f0xx_it.c **** /******************************************************************************/
 137:Src/stm32f0xx_it.c **** 
 138:Src/stm32f0xx_it.c **** /**
 139:Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 1 global interrupt.
 140:Src/stm32f0xx_it.c ****   */
 141:Src/stm32f0xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 142:Src/stm32f0xx_it.c **** {
 102              		.loc 1 142 1 is_stmt 1 view -0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 10B5     		push	{r4, lr}
 107              	.LCFI1:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 143:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 144:Src/stm32f0xx_it.c **** 
 145:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 146:Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc);
 111              		.loc 1 146 3 view .LVU10
 112 0002 0248     		ldr	r0, .L6
 113 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 114              	.LVL2:
 147:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 148:Src/stm32f0xx_it.c **** 
 149:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 150:Src/stm32f0xx_it.c **** }
 115              		.loc 1 150 1 is_stmt 0 view .LVU11
 116              		@ sp needed
 117 0008 10BD     		pop	{r4, pc}
 118              	.L7:
 119 000a C046     		.align	2
 120              	.L6:
 121 000c 00000000 		.word	hdma_adc
 122              		.cfi_endproc
 123              	.LFE40:
 125              		.section	.text.DMA1_Channel2_3_IRQHandler,"ax",%progbits
 126              		.align	1
 127              		.global	DMA1_Channel2_3_IRQHandler
 128              		.syntax unified
 129              		.code	16
 130              		.thumb_func
 131              		.fpu softvfp
 133              	DMA1_Channel2_3_IRQHandler:
 134              	.LFB41:
 151:Src/stm32f0xx_it.c **** 
 152:Src/stm32f0xx_it.c **** /**
 153:Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 2 and 3 interrupts.
 154:Src/stm32f0xx_it.c ****   */
 155:Src/stm32f0xx_it.c **** void DMA1_Channel2_3_IRQHandler(void)
 156:Src/stm32f0xx_it.c **** {
 135              		.loc 1 156 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccIMP9UY.s 			page 6


 139 0000 10B5     		push	{r4, lr}
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 4, -8
 143              		.cfi_offset 14, -4
 157:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 0 */
 158:Src/stm32f0xx_it.c **** 
 159:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 0 */
 160:Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 144              		.loc 1 160 3 view .LVU13
 145 0002 0348     		ldr	r0, .L9
 146 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 147              	.LVL3:
 161:Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 148              		.loc 1 161 3 view .LVU14
 149 0008 0248     		ldr	r0, .L9+4
 150 000a FFF7FEFF 		bl	HAL_DMA_IRQHandler
 151              	.LVL4:
 162:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel2_3_IRQn 1 */
 163:Src/stm32f0xx_it.c **** 
 164:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel2_3_IRQn 1 */
 165:Src/stm32f0xx_it.c **** }
 152              		.loc 1 165 1 is_stmt 0 view .LVU15
 153              		@ sp needed
 154 000e 10BD     		pop	{r4, pc}
 155              	.L10:
 156              		.align	2
 157              	.L9:
 158 0010 00000000 		.word	hdma_i2c1_tx
 159 0014 00000000 		.word	hdma_i2c1_rx
 160              		.cfi_endproc
 161              	.LFE41:
 163              		.section	.text.DMA1_Channel4_5_6_7_IRQHandler,"ax",%progbits
 164              		.align	1
 165              		.global	DMA1_Channel4_5_6_7_IRQHandler
 166              		.syntax unified
 167              		.code	16
 168              		.thumb_func
 169              		.fpu softvfp
 171              	DMA1_Channel4_5_6_7_IRQHandler:
 172              	.LFB42:
 166:Src/stm32f0xx_it.c **** 
 167:Src/stm32f0xx_it.c **** /**
 168:Src/stm32f0xx_it.c ****   * @brief This function handles DMA1 channel 4, 5, 6 and 7 interrupts.
 169:Src/stm32f0xx_it.c ****   */
 170:Src/stm32f0xx_it.c **** void DMA1_Channel4_5_6_7_IRQHandler(void)
 171:Src/stm32f0xx_it.c **** {
 173              		.loc 1 171 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177 0000 10B5     		push	{r4, lr}
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 4, -8
 181              		.cfi_offset 14, -4
 172:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_6_7_IRQn 0 */
ARM GAS  /tmp/ccIMP9UY.s 			page 7


 173:Src/stm32f0xx_it.c **** 
 174:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_6_7_IRQn 0 */
 175:Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c2_tx);
 182              		.loc 1 175 3 view .LVU17
 183 0002 0348     		ldr	r0, .L12
 184 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 185              	.LVL5:
 176:Src/stm32f0xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c2_rx);
 186              		.loc 1 176 3 view .LVU18
 187 0008 0248     		ldr	r0, .L12+4
 188 000a FFF7FEFF 		bl	HAL_DMA_IRQHandler
 189              	.LVL6:
 177:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_5_6_7_IRQn 1 */
 178:Src/stm32f0xx_it.c **** 
 179:Src/stm32f0xx_it.c ****   /* USER CODE END DMA1_Channel4_5_6_7_IRQn 1 */
 180:Src/stm32f0xx_it.c **** }
 190              		.loc 1 180 1 is_stmt 0 view .LVU19
 191              		@ sp needed
 192 000e 10BD     		pop	{r4, pc}
 193              	.L13:
 194              		.align	2
 195              	.L12:
 196 0010 00000000 		.word	hdma_i2c2_tx
 197 0014 00000000 		.word	hdma_i2c2_rx
 198              		.cfi_endproc
 199              	.LFE42:
 201              		.section	.text.USB_IRQHandler,"ax",%progbits
 202              		.align	1
 203              		.global	USB_IRQHandler
 204              		.syntax unified
 205              		.code	16
 206              		.thumb_func
 207              		.fpu softvfp
 209              	USB_IRQHandler:
 210              	.LFB43:
 181:Src/stm32f0xx_it.c **** 
 182:Src/stm32f0xx_it.c **** /**
 183:Src/stm32f0xx_it.c ****   * @brief This function handles USB global interrupt / USB wake-up interrupt through EXTI line 18.
 184:Src/stm32f0xx_it.c ****   */
 185:Src/stm32f0xx_it.c **** void USB_IRQHandler(void)
 186:Src/stm32f0xx_it.c **** {
 211              		.loc 1 186 1 is_stmt 1 view -0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215 0000 10B5     		push	{r4, lr}
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 4, -8
 219              		.cfi_offset 14, -4
 187:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 0 */
 188:Src/stm32f0xx_it.c **** 
 189:Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 0 */
 190:Src/stm32f0xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 220              		.loc 1 190 3 view .LVU21
 221 0002 0248     		ldr	r0, .L15
 222 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
ARM GAS  /tmp/ccIMP9UY.s 			page 8


 223              	.LVL7:
 191:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 1 */
 192:Src/stm32f0xx_it.c **** 
 193:Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 1 */
 194:Src/stm32f0xx_it.c **** }
 224              		.loc 1 194 1 is_stmt 0 view .LVU22
 225              		@ sp needed
 226 0008 10BD     		pop	{r4, pc}
 227              	.L16:
 228 000a C046     		.align	2
 229              	.L15:
 230 000c 00000000 		.word	hpcd_USB_FS
 231              		.cfi_endproc
 232              	.LFE43:
 234              		.text
 235              	.Letext0:
 236              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 237              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 238              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 239              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 240              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 241              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 242              		.file 8 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 243              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 244              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 245              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 246              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 247              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 248              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccIMP9UY.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
     /tmp/ccIMP9UY.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccIMP9UY.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccIMP9UY.s:39     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccIMP9UY.s:46     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccIMP9UY.s:62     .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccIMP9UY.s:69     .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccIMP9UY.s:93     .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
     /tmp/ccIMP9UY.s:100    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
     /tmp/ccIMP9UY.s:121    .text.DMA1_Channel1_IRQHandler:000000000000000c $d
     /tmp/ccIMP9UY.s:126    .text.DMA1_Channel2_3_IRQHandler:0000000000000000 $t
     /tmp/ccIMP9UY.s:133    .text.DMA1_Channel2_3_IRQHandler:0000000000000000 DMA1_Channel2_3_IRQHandler
     /tmp/ccIMP9UY.s:158    .text.DMA1_Channel2_3_IRQHandler:0000000000000010 $d
     /tmp/ccIMP9UY.s:164    .text.DMA1_Channel4_5_6_7_IRQHandler:0000000000000000 $t
     /tmp/ccIMP9UY.s:171    .text.DMA1_Channel4_5_6_7_IRQHandler:0000000000000000 DMA1_Channel4_5_6_7_IRQHandler
     /tmp/ccIMP9UY.s:196    .text.DMA1_Channel4_5_6_7_IRQHandler:0000000000000010 $d
     /tmp/ccIMP9UY.s:202    .text.USB_IRQHandler:0000000000000000 $t
     /tmp/ccIMP9UY.s:209    .text.USB_IRQHandler:0000000000000000 USB_IRQHandler
     /tmp/ccIMP9UY.s:230    .text.USB_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
osSystickHandler
HAL_DMA_IRQHandler
hdma_adc
hdma_i2c1_tx
hdma_i2c1_rx
hdma_i2c2_tx
hdma_i2c2_rx
HAL_PCD_IRQHandler
hpcd_USB_FS
