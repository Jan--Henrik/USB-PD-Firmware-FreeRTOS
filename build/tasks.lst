ARM GAS  /tmp/cctzmfqj.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"tasks.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	prvTaskIsTaskSuspended:
  24              	.LVL0:
  25              	.LFB9:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    Help yourself get started quickly while simultaneously helping     *
ARM GAS  /tmp/cctzmfqj.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "StackMacros.h"
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
ARM GAS  /tmp/cctzmfqj.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB. */
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE ( ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && (
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
ARM GAS  /tmp/cctzmfqj.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
ARM GAS  /tmp/cctzmfqj.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
ARM GAS  /tmp/cctzmfqj.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the end of the stack on architectures where the stack 
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
ARM GAS  /tmp/cctzmfqj.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void *pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static variables must be declared volatile. */
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
ARM GAS  /tmp/cctzmfqj.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) 0U;
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint +e956 */
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
ARM GAS  /tmp/cctzmfqj.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
ARM GAS  /tmp/cctzmfqj.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
ARM GAS  /tmp/cctzmfqj.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION; /*lint !e971 Unqualified char
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer ) /*lint !e971 Unqualified char types are allowed for st
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
ARM GAS  /tmp/cctzmfqj.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( portUSING_MPU_WRAPPERS == 1 )
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				this task had a statically allocated stack in case it is
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				later deleted.  The TCB was allocated dynamically. */
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
ARM GAS  /tmp/cctzmfqj.s 			page 13


 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const uint16_t usStackDepth,
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask ) /*lint !e971 Unqualified char types are allowed for str
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
ARM GAS  /tmp/cctzmfqj.s 			page 14


 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
ARM GAS  /tmp/cctzmfqj.s 			page 15


 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) /*lint !e971 Unqualified char types are allowed fo
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( INC
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 16


 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cctzmfqj.s 			page 17


 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the	top of stack variable is updated. */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
ARM GAS  /tmp/cctzmfqj.s 			page 18


 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cctzmfqj.s 			page 19


1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
ARM GAS  /tmp/cctzmfqj.s 			page 20


1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
ARM GAS  /tmp/cctzmfqj.s 			page 21


1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cctzmfqj.s 			page 22


1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
ARM GAS  /tmp/cctzmfqj.s 			page 23


1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/cctzmfqj.s 			page 24


1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
ARM GAS  /tmp/cctzmfqj.s 			page 25


1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
ARM GAS  /tmp/cctzmfqj.s 			page 26


1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cctzmfqj.s 			page 27


1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cctzmfqj.s 			page 28


1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change it's priority variable. However, if
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					can do this even if the scheduler is suspended. */
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cctzmfqj.s 			page 29


1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
ARM GAS  /tmp/cctzmfqj.s 			page 30


1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  27              		.loc 1 1657 2 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  32              		.loc 1 1658 2 view .LVU1
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  33              		.loc 1 1659 2 view .LVU2
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1665 3 view .LVU3
  35 0000 0028     		cmp	r0, #0
  36 0002 05D0     		beq	.L8
  37              		.loc 1 1665 24 discriminator 2 view .LVU4
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  38              		.loc 1 1668 3 discriminator 2 view .LVU5
  39              		.loc 1 1668 82 is_stmt 0 discriminator 2 view .LVU6
  40 0004 094B     		ldr	r3, .L10
  41 0006 4269     		ldr	r2, [r0, #20]
  42 0008 9A42     		cmp	r2, r3
  43 000a 03D0     		beq	.L9
ARM GAS  /tmp/cctzmfqj.s 			page 31


1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  44              		.loc 1 1658 13 view .LVU7
  45 000c 0020     		movs	r0, #0
  46              	.LVL1:
  47              	.L1:
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  48              		.loc 1 1695 2 view .LVU8
  49              		@ sp needed
  50 000e 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  53              		.loc 1 1665 3 is_stmt 1 discriminator 1 view .LVU9
  54              		.syntax divided
  55              	@ 1665 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
  56 0010 72B6     		 cpsid i 
  57              	@ 0 "" 2
  58              		.thumb
  59              		.syntax unified
  60              	.L3:
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  61              		.loc 1 1665 3 discriminator 1 view .LVU10
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  62              		.loc 1 1665 3 discriminator 1 view .LVU11
  63 0012 FEE7     		b	.L3
  64              	.L9:
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
  65              		.loc 1 1671 4 view .LVU12
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
  66              		.loc 1 1671 8 is_stmt 0 view .LVU13
  67 0014 836A     		ldr	r3, [r0, #40]
ARM GAS  /tmp/cctzmfqj.s 			page 32


1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
  68              		.loc 1 1671 6 view .LVU14
  69 0016 064A     		ldr	r2, .L10+4
  70 0018 9342     		cmp	r3, r2
  71 001a 03D0     		beq	.L6
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
  72              		.loc 1 1675 5 is_stmt 1 view .LVU15
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
  73              		.loc 1 1675 69 is_stmt 0 view .LVU16
  74 001c 002B     		cmp	r3, #0
  75 001e 03D0     		beq	.L7
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  76              		.loc 1 1658 13 view .LVU17
  77 0020 0020     		movs	r0, #0
  78              	.LVL3:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  79              		.loc 1 1658 13 view .LVU18
  80 0022 F4E7     		b	.L1
  81              	.LVL4:
  82              	.L6:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  83              		.loc 1 1658 13 view .LVU19
  84 0024 0020     		movs	r0, #0
  85              	.LVL5:
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  86              		.loc 1 1658 13 view .LVU20
  87 0026 F2E7     		b	.L1
  88              	.LVL6:
  89              	.L7:
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
  90              		.loc 1 1677 14 view .LVU21
  91 0028 0120     		movs	r0, #1
  92              	.LVL7:
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
  93              		.loc 1 1691 28 is_stmt 1 view .LVU22
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  94              		.loc 1 1694 3 view .LVU23
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  95              		.loc 1 1694 10 is_stmt 0 view .LVU24
  96 002a F0E7     		b	.L1
  97              	.L11:
  98              		.align	2
  99              	.L10:
 100 002c 00000000 		.word	.LANCHOR0
 101 0030 00000000 		.word	.LANCHOR1
 102              		.cfi_endproc
 103              	.LFE9:
 105              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 106              		.align	1
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
 112              	prvResetNextTaskUnblockTime:
 113              	.LFB33:
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
ARM GAS  /tmp/cctzmfqj.s 			page 33


1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* As we are in a critical section we can access the ready
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					lists even if the scheduler is suspended. */
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
ARM GAS  /tmp/cctzmfqj.s 			page 34


1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cctzmfqj.s 			page 35


1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												"IDLE",
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL,
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
ARM GAS  /tmp/cctzmfqj.s 			page 36


1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base. */
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cctzmfqj.s 			page 37


1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cctzmfqj.s 			page 38


1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
ARM GAS  /tmp/cctzmfqj.s 			page 39


2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cctzmfqj.s 			page 40


2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
ARM GAS  /tmp/cctzmfqj.s 			page 41


2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 42


2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
ARM GAS  /tmp/cctzmfqj.s 			page 43


2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 44


2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cctzmfqj.s 			page 45


2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
ARM GAS  /tmp/cctzmfqj.s 			page 46


2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTaskResumeAll();
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 47


2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + 1;
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U )
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
ARM GAS  /tmp/cctzmfqj.s 			page 48


2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 49


2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 50


2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
ARM GAS  /tmp/cctzmfqj.s 			page 51


2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
ARM GAS  /tmp/cctzmfqj.s 			page 52


2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
ARM GAS  /tmp/cctzmfqj.s 			page 53


2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
ARM GAS  /tmp/cctzmfqj.s 			page 54


2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
ARM GAS  /tmp/cctzmfqj.s 			page 55


2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemV
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a higher priority than the calling task.  This allows
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task to know if it should force a context
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch now. */
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
ARM GAS  /tmp/cctzmfqj.s 			page 56


3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/cctzmfqj.s 			page 57


3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
ARM GAS  /tmp/cctzmfqj.s 			page 58


3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
ARM GAS  /tmp/cctzmfqj.s 			page 59


3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cctzmfqj.s 			page 60


3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 61


3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
ARM GAS  /tmp/cctzmfqj.s 			page 62


3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xListIsEmpty;
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		too often in the idle task. */
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xTaskResumeAll();
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xListIsEmpty == pdFALSE )
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				TCB_t *pxTCB;
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cctzmfqj.s 			page 63


3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the suspended list then there is a chance it is
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			actually just blocked indefinitely - so really it should be reported as
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being in the Blocked state. */
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTaskStatus->eCurrentState == eSuspended )
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTaskStatus->eCurrentState = eBlocked;
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xTaskResumeAll();
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* INCLUDE_vTaskSuspend */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the value
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		of eState passed into this function is eInvalid - otherwise the state is
ARM GAS  /tmp/cctzmfqj.s 			page 64


3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		just set to whatever is passed in. */
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eState;
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile TCB_t *pxNextTCB, *pxFirstTCB;
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cctzmfqj.s 			page 65


3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 66


3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE == 1 )
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	)
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
ARM GAS  /tmp/cctzmfqj.s 			page 67


3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 114              		.loc 1 3636 1 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 119              		.loc 1 3637 1 view .LVU26
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 120              		.loc 1 3639 2 view .LVU27
 121              		.loc 1 3639 6 is_stmt 0 view .LVU28
 122 0000 084B     		ldr	r3, .L15
 123 0002 1B68     		ldr	r3, [r3]
 124 0004 1B68     		ldr	r3, [r3]
 125              		.loc 1 3639 45 view .LVU29
 126 0006 002B     		cmp	r3, #0
 127 0008 04D1     		bne	.L13
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 128              		.loc 1 3645 3 is_stmt 1 view .LVU30
 129              		.loc 1 3645 24 is_stmt 0 view .LVU31
 130 000a 074B     		ldr	r3, .L15+4
 131 000c 0122     		movs	r2, #1
 132 000e 5242     		rsbs	r2, r2, #0
 133 0010 1A60     		str	r2, [r3]
 134              	.L12:
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 135              		.loc 1 3656 1 view .LVU32
 136              		@ sp needed
 137 0012 7047     		bx	lr
 138              	.L13:
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 139              		.loc 1 3653 3 is_stmt 1 view .LVU33
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 140              		.loc 1 3653 27 is_stmt 0 view .LVU34
 141 0014 034B     		ldr	r3, .L15
 142 0016 1B68     		ldr	r3, [r3]
 143 0018 DB68     		ldr	r3, [r3, #12]
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 144              		.loc 1 3653 13 view .LVU35
 145 001a DB68     		ldr	r3, [r3, #12]
 146              	.LVL8:
ARM GAS  /tmp/cctzmfqj.s 			page 68


3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 147              		.loc 1 3654 3 is_stmt 1 view .LVU36
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 148              		.loc 1 3654 26 is_stmt 0 view .LVU37
 149 001c 5A68     		ldr	r2, [r3, #4]
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 150              		.loc 1 3654 24 view .LVU38
 151 001e 024B     		ldr	r3, .L15+4
 152              	.LVL9:
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 153              		.loc 1 3654 24 view .LVU39
 154 0020 1A60     		str	r2, [r3]
 155              		.loc 1 3656 1 view .LVU40
 156 0022 F6E7     		b	.L12
 157              	.L16:
 158              		.align	2
 159              	.L15:
 160 0024 00000000 		.word	.LANCHOR2
 161 0028 00000000 		.word	.LANCHOR3
 162              		.cfi_endproc
 163              	.LFE33:
 165              		.section	.text.prvDeleteTCB,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.code	16
 169              		.thumb_func
 170              		.fpu softvfp
 172              	prvDeleteTCB:
 173              	.LVL10:
 174              	.LFB32:
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 175              		.loc 1 3582 2 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 179              		.loc 1 3582 2 is_stmt 0 view .LVU42
 180 0000 10B5     		push	{r4, lr}
 181              	.LCFI0:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 4, -8
 184              		.cfi_offset 14, -4
 185 0002 0400     		movs	r4, r0
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 186              		.loc 1 3586 3 is_stmt 1 view .LVU43
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 187              		.loc 1 3600 4 view .LVU44
 188 0004 006B     		ldr	r0, [r0, #48]
 189              	.LVL11:
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 190              		.loc 1 3600 4 is_stmt 0 view .LVU45
 191 0006 FFF7FEFF 		bl	vPortFree
 192              	.LVL12:
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 193              		.loc 1 3601 4 is_stmt 1 view .LVU46
 194 000a 2000     		movs	r0, r4
 195 000c FFF7FEFF 		bl	vPortFree
ARM GAS  /tmp/cctzmfqj.s 			page 69


 196              	.LVL13:
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 197              		.loc 1 3630 2 is_stmt 0 view .LVU47
 198              		@ sp needed
 199              	.LVL14:
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 200              		.loc 1 3630 2 view .LVU48
 201 0010 10BD     		pop	{r4, pc}
 202              		.cfi_endproc
 203              	.LFE32:
 205              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 206              		.align	1
 207              		.syntax unified
 208              		.code	16
 209              		.thumb_func
 210              		.fpu softvfp
 212              	prvInitialiseNewTask:
 213              	.LVL15:
 214              	.LFB1:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 215              		.loc 1 775 1 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 16, pretend = 0, frame = 8
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 219              		.loc 1 775 1 is_stmt 0 view .LVU50
 220 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 221              	.LCFI1:
 222              		.cfi_def_cfa_offset 20
 223              		.cfi_offset 4, -20
 224              		.cfi_offset 5, -16
 225              		.cfi_offset 6, -12
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 83B0     		sub	sp, sp, #12
 229              	.LCFI2:
 230              		.cfi_def_cfa_offset 32
 231 0004 0090     		str	r0, [sp]
 232 0006 0193     		str	r3, [sp, #4]
 233 0008 089C     		ldr	r4, [sp, #32]
 234 000a 0A9E     		ldr	r6, [sp, #40]
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 235              		.loc 1 776 1 is_stmt 1 view .LVU51
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 236              		.loc 1 777 1 view .LVU52
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 237              		.loc 1 807 3 view .LVU53
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 238              		.loc 1 807 36 is_stmt 0 view .LVU54
 239 000c 1C4B     		ldr	r3, .L25
 240              	.LVL16:
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 241              		.loc 1 807 36 view .LVU55
 242 000e 9C46     		mov	ip, r3
 243 0010 6244     		add	r2, r2, ip
 244              	.LVL17:
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
ARM GAS  /tmp/cctzmfqj.s 			page 70


 245              		.loc 1 807 36 view .LVU56
 246 0012 9200     		lsls	r2, r2, #2
 247              	.LVL18:
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 248              		.loc 1 807 16 view .LVU57
 249 0014 336B     		ldr	r3, [r6, #48]
 250 0016 9C46     		mov	ip, r3
 251 0018 6244     		add	r2, r2, ip
 252              	.LVL19:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 253              		.loc 1 808 3 is_stmt 1 view .LVU58
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 254              		.loc 1 808 81 is_stmt 0 view .LVU59
 255 001a 0723     		movs	r3, #7
 256 001c 9A43     		bics	r2, r3
 257              	.LVL20:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 258              		.loc 1 808 81 view .LVU60
 259 001e 1700     		movs	r7, r2
 260              	.LVL21:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 261              		.loc 1 811 3 is_stmt 1 view .LVU61
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 262              		.loc 1 811 124 view .LVU62
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 263              		.loc 1 827 2 view .LVU63
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 264              		.loc 1 827 9 is_stmt 0 view .LVU64
 265 0020 0023     		movs	r3, #0
 266              	.LVL22:
 267              	.L19:
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 268              		.loc 1 827 2 discriminator 1 view .LVU65
 269 0022 0F2B     		cmp	r3, #15
 270 0024 07D8     		bhi	.L20
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 271              		.loc 1 829 3 is_stmt 1 view .LVU66
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 272              		.loc 1 829 37 is_stmt 0 view .LVU67
 273 0026 C85C     		ldrb	r0, [r1, r3]
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274              		.loc 1 829 29 view .LVU68
 275 0028 F218     		adds	r2, r6, r3
 276 002a 3432     		adds	r2, r2, #52
 277 002c 1070     		strb	r0, [r2]
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 278              		.loc 1 834 3 is_stmt 1 view .LVU69
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 279              		.loc 1 834 5 is_stmt 0 view .LVU70
 280 002e 0028     		cmp	r0, #0
 281 0030 01D0     		beq	.L20
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 282              		.loc 1 840 28 is_stmt 1 discriminator 2 view .LVU71
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 283              		.loc 1 827 76 is_stmt 0 discriminator 2 view .LVU72
 284 0032 0133     		adds	r3, r3, #1
 285              	.LVL23:
ARM GAS  /tmp/cctzmfqj.s 			page 71


 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 286              		.loc 1 827 76 discriminator 2 view .LVU73
 287 0034 F5E7     		b	.L19
 288              	.L20:
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 289              		.loc 1 846 2 is_stmt 1 view .LVU74
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 290              		.loc 1 846 54 is_stmt 0 view .LVU75
 291 0036 4323     		movs	r3, #67
 292              	.LVL24:
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 293              		.loc 1 846 54 view .LVU76
 294 0038 0022     		movs	r2, #0
 295 003a F254     		strb	r2, [r6, r3]
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 296              		.loc 1 850 2 is_stmt 1 view .LVU77
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 297              		.loc 1 850 4 is_stmt 0 view .LVU78
 298 003c 062C     		cmp	r4, #6
 299 003e 00D9     		bls	.L22
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 300              		.loc 1 852 14 view .LVU79
 301 0040 0624     		movs	r4, #6
 302              	.L22:
 303              	.LVL25:
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 304              		.loc 1 856 27 is_stmt 1 view .LVU80
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 305              		.loc 1 859 2 view .LVU81
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 306              		.loc 1 859 23 is_stmt 0 view .LVU82
 307 0042 F462     		str	r4, [r6, #44]
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 308              		.loc 1 862 3 is_stmt 1 view .LVU83
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 309              		.loc 1 862 28 is_stmt 0 view .LVU84
 310 0044 7464     		str	r4, [r6, #68]
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 311              		.loc 1 863 3 is_stmt 1 view .LVU85
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 312              		.loc 1 863 27 is_stmt 0 view .LVU86
 313 0046 0025     		movs	r5, #0
 314 0048 B564     		str	r5, [r6, #72]
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 315              		.loc 1 867 2 is_stmt 1 view .LVU87
 316 004a 301D     		adds	r0, r6, #4
 317 004c FFF7FEFF 		bl	vListInitialiseItem
 318              	.LVL26:
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 319              		.loc 1 868 2 view .LVU88
 320 0050 3000     		movs	r0, r6
 321 0052 1830     		adds	r0, r0, #24
 322 0054 FFF7FEFF 		bl	vListInitialiseItem
 323              	.LVL27:
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 324              		.loc 1 872 2 view .LVU89
 325 0058 3661     		str	r6, [r6, #16]
ARM GAS  /tmp/cctzmfqj.s 			page 72


 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 326              		.loc 1 875 2 view .LVU90
 327 005a 0723     		movs	r3, #7
 328 005c 1C1B     		subs	r4, r3, r4
 329              	.LVL28:
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 330              		.loc 1 875 2 is_stmt 0 view .LVU91
 331 005e B461     		str	r4, [r6, #24]
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 332              		.loc 1 876 2 is_stmt 1 view .LVU92
 333 0060 7662     		str	r6, [r6, #36]
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 334              		.loc 1 903 3 view .LVU93
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 335              		.loc 1 918 3 view .LVU94
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 336              		.loc 1 918 29 is_stmt 0 view .LVU95
 337 0062 F564     		str	r5, [r6, #76]
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 338              		.loc 1 919 3 is_stmt 1 view .LVU96
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 339              		.loc 1 919 27 is_stmt 0 view .LVU97
 340 0064 4933     		adds	r3, r3, #73
 341 0066 F554     		strb	r5, [r6, r3]
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 342              		.loc 1 946 3 is_stmt 1 view .LVU98
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 343              		.loc 1 946 28 is_stmt 0 view .LVU99
 344 0068 019A     		ldr	r2, [sp, #4]
 345 006a 0099     		ldr	r1, [sp]
 346 006c 3800     		movs	r0, r7
 347 006e FFF7FEFF 		bl	pxPortInitialiseStack
 348              	.LVL29:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 349              		.loc 1 946 26 view .LVU100
 350 0072 3060     		str	r0, [r6]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 351              		.loc 1 950 2 is_stmt 1 view .LVU101
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 352              		.loc 1 950 4 is_stmt 0 view .LVU102
 353 0074 099B     		ldr	r3, [sp, #36]
 354 0076 002B     		cmp	r3, #0
 355 0078 00D0     		beq	.L18
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 356              		.loc 1 954 3 is_stmt 1 view .LVU103
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 357              		.loc 1 954 18 is_stmt 0 view .LVU104
 358 007a 1E60     		str	r6, [r3]
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 359              		.loc 1 958 27 is_stmt 1 view .LVU105
 360              	.L18:
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 361              		.loc 1 960 1 is_stmt 0 view .LVU106
 362 007c 03B0     		add	sp, sp, #12
 363              	.LVL30:
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 364              		.loc 1 960 1 view .LVU107
ARM GAS  /tmp/cctzmfqj.s 			page 73


 365              		@ sp needed
 366              	.LVL31:
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 367              		.loc 1 960 1 view .LVU108
 368 007e F0BD     		pop	{r4, r5, r6, r7, pc}
 369              	.L26:
 370              		.align	2
 371              	.L25:
 372 0080 FFFFFF3F 		.word	1073741823
 373              		.cfi_endproc
 374              	.LFE1:
 376              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 377              		.align	1
 378              		.syntax unified
 379              		.code	16
 380              		.thumb_func
 381              		.fpu softvfp
 383              	prvInitialiseTaskLists:
 384              	.LFB30:
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 385              		.loc 1 3334 1 is_stmt 1 view -0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389 0000 70B5     		push	{r4, r5, r6, lr}
 390              	.LCFI3:
 391              		.cfi_def_cfa_offset 16
 392              		.cfi_offset 4, -16
 393              		.cfi_offset 5, -12
 394              		.cfi_offset 6, -8
 395              		.cfi_offset 14, -4
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 396              		.loc 1 3335 1 view .LVU110
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 397              		.loc 1 3337 2 view .LVU111
 398              	.LVL32:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 399              		.loc 1 3337 18 is_stmt 0 view .LVU112
 400 0002 0024     		movs	r4, #0
 401              	.LVL33:
 402              	.L28:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 403              		.loc 1 3337 2 discriminator 1 view .LVU113
 404 0004 062C     		cmp	r4, #6
 405 0006 08D8     		bhi	.L30
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 406              		.loc 1 3339 3 is_stmt 1 discriminator 3 view .LVU114
 407 0008 A300     		lsls	r3, r4, #2
 408 000a 1B19     		adds	r3, r3, r4
 409 000c 9800     		lsls	r0, r3, #2
 410 000e 0E4B     		ldr	r3, .L31
 411 0010 C018     		adds	r0, r0, r3
 412 0012 FFF7FEFF 		bl	vListInitialise
 413              	.LVL34:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 414              		.loc 1 3337 101 is_stmt 0 discriminator 3 view .LVU115
 415 0016 0134     		adds	r4, r4, #1
ARM GAS  /tmp/cctzmfqj.s 			page 74


 416              	.LVL35:
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 417              		.loc 1 3337 101 discriminator 3 view .LVU116
 418 0018 F4E7     		b	.L28
 419              	.L30:
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 420              		.loc 1 3342 2 is_stmt 1 view .LVU117
 421 001a 0C4D     		ldr	r5, .L31+4
 422 001c 2800     		movs	r0, r5
 423 001e FFF7FEFF 		bl	vListInitialise
 424              	.LVL36:
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 425              		.loc 1 3343 2 view .LVU118
 426 0022 0B4C     		ldr	r4, .L31+8
 427              	.LVL37:
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 428              		.loc 1 3343 2 is_stmt 0 view .LVU119
 429 0024 2000     		movs	r0, r4
 430 0026 FFF7FEFF 		bl	vListInitialise
 431              	.LVL38:
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 432              		.loc 1 3344 2 is_stmt 1 view .LVU120
 433 002a 0A48     		ldr	r0, .L31+12
 434 002c FFF7FEFF 		bl	vListInitialise
 435              	.LVL39:
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 436              		.loc 1 3348 3 view .LVU121
 437 0030 0948     		ldr	r0, .L31+16
 438 0032 FFF7FEFF 		bl	vListInitialise
 439              	.LVL40:
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 440              		.loc 1 3354 3 view .LVU122
 441 0036 0948     		ldr	r0, .L31+20
 442 0038 FFF7FEFF 		bl	vListInitialise
 443              	.LVL41:
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 444              		.loc 1 3360 2 view .LVU123
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 445              		.loc 1 3360 20 is_stmt 0 view .LVU124
 446 003c 084B     		ldr	r3, .L31+24
 447 003e 1D60     		str	r5, [r3]
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 448              		.loc 1 3361 2 is_stmt 1 view .LVU125
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 449              		.loc 1 3361 28 is_stmt 0 view .LVU126
 450 0040 084B     		ldr	r3, .L31+28
 451 0042 1C60     		str	r4, [r3]
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 452              		.loc 1 3362 1 view .LVU127
 453              		@ sp needed
 454 0044 70BD     		pop	{r4, r5, r6, pc}
 455              	.L32:
 456 0046 C046     		.align	2
 457              	.L31:
 458 0048 00000000 		.word	pxReadyTasksLists
 459 004c 00000000 		.word	.LANCHOR4
 460 0050 00000000 		.word	.LANCHOR5
ARM GAS  /tmp/cctzmfqj.s 			page 75


 461 0054 00000000 		.word	.LANCHOR1
 462 0058 00000000 		.word	.LANCHOR6
 463 005c 00000000 		.word	.LANCHOR0
 464 0060 00000000 		.word	.LANCHOR2
 465 0064 00000000 		.word	.LANCHOR7
 466              		.cfi_endproc
 467              	.LFE30:
 469              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 470              		.align	1
 471              		.syntax unified
 472              		.code	16
 473              		.thumb_func
 474              		.fpu softvfp
 476              	prvAddNewTaskToReadyList:
 477              	.LVL42:
 478              	.LFB2:
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 479              		.loc 1 964 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 483              		.loc 1 964 1 is_stmt 0 view .LVU129
 484 0000 10B5     		push	{r4, lr}
 485              	.LCFI4:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 4, -8
 488              		.cfi_offset 14, -4
 489 0002 0400     		movs	r4, r0
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 490              		.loc 1 967 2 is_stmt 1 view .LVU130
 491 0004 FFF7FEFF 		bl	vPortEnterCritical
 492              	.LVL43:
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 493              		.loc 1 969 3 view .LVU131
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 494              		.loc 1 969 25 is_stmt 0 view .LVU132
 495 0008 1F4A     		ldr	r2, .L41
 496 000a 1368     		ldr	r3, [r2]
 497 000c 0133     		adds	r3, r3, #1
 498 000e 1360     		str	r3, [r2]
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 499              		.loc 1 970 3 is_stmt 1 view .LVU133
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 500              		.loc 1 970 20 is_stmt 0 view .LVU134
 501 0010 1E4B     		ldr	r3, .L41+4
 502 0012 1B68     		ldr	r3, [r3]
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 503              		.loc 1 970 5 view .LVU135
 504 0014 002B     		cmp	r3, #0
 505 0016 0CD0     		beq	.L38
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 506              		.loc 1 993 4 is_stmt 1 view .LVU136
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 507              		.loc 1 993 26 is_stmt 0 view .LVU137
 508 0018 1D4B     		ldr	r3, .L41+8
 509 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cctzmfqj.s 			page 76


 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 510              		.loc 1 993 6 view .LVU138
 511 001c 002B     		cmp	r3, #0
 512 001e 0DD1     		bne	.L35
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 513              		.loc 1 995 5 is_stmt 1 view .LVU139
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 514              		.loc 1 995 21 is_stmt 0 view .LVU140
 515 0020 1A4B     		ldr	r3, .L41+4
 516 0022 1B68     		ldr	r3, [r3]
 517 0024 DB6A     		ldr	r3, [r3, #44]
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 518              		.loc 1 995 7 view .LVU141
 519 0026 E26A     		ldr	r2, [r4, #44]
 520 0028 9342     		cmp	r3, r2
 521 002a 07D8     		bhi	.L35
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 522              		.loc 1 997 6 is_stmt 1 view .LVU142
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 523              		.loc 1 997 19 is_stmt 0 view .LVU143
 524 002c 174B     		ldr	r3, .L41+4
 525 002e 1C60     		str	r4, [r3]
 526 0030 04E0     		b	.L35
 527              	.L38:
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 528              		.loc 1 974 4 is_stmt 1 view .LVU144
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529              		.loc 1 974 17 is_stmt 0 view .LVU145
 530 0032 164B     		ldr	r3, .L41+4
 531 0034 1C60     		str	r4, [r3]
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 532              		.loc 1 976 4 is_stmt 1 view .LVU146
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 533              		.loc 1 976 31 is_stmt 0 view .LVU147
 534 0036 1368     		ldr	r3, [r2]
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 535              		.loc 1 976 6 view .LVU148
 536 0038 012B     		cmp	r3, #1
 537 003a 1FD0     		beq	.L39
 538              	.L35:
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 539              		.loc 1 1006 29 is_stmt 1 view .LVU149
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 540              		.loc 1 1010 3 view .LVU150
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 541              		.loc 1 1010 15 is_stmt 0 view .LVU151
 542 003c 154A     		ldr	r2, .L41+12
 543 003e 1368     		ldr	r3, [r2]
 544 0040 0133     		adds	r3, r3, #1
 545 0042 1360     		str	r3, [r2]
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 546              		.loc 1 1018 31 is_stmt 1 view .LVU152
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547              		.loc 1 1020 3 view .LVU153
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 548              		.loc 1 1020 3 view .LVU154
 549 0044 E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/cctzmfqj.s 			page 77


 550 0046 144B     		ldr	r3, .L41+16
 551 0048 1B68     		ldr	r3, [r3]
 552 004a 9A42     		cmp	r2, r3
 553 004c 01D9     		bls	.L36
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 554              		.loc 1 1020 3 discriminator 1 view .LVU155
 555 004e 124B     		ldr	r3, .L41+16
 556 0050 1A60     		str	r2, [r3]
 557              	.L36:
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 558              		.loc 1 1020 3 discriminator 3 view .LVU156
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 559              		.loc 1 1020 3 discriminator 3 view .LVU157
 560 0052 211D     		adds	r1, r4, #4
 561 0054 9300     		lsls	r3, r2, #2
 562 0056 9B18     		adds	r3, r3, r2
 563 0058 9800     		lsls	r0, r3, #2
 564 005a 104B     		ldr	r3, .L41+20
 565 005c C018     		adds	r0, r0, r3
 566 005e FFF7FEFF 		bl	vListInsertEnd
 567              	.LVL44:
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 568              		.loc 1 1020 36 discriminator 3 view .LVU158
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 569              		.loc 1 1022 3 discriminator 3 view .LVU159
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 570              		.loc 1 1024 2 discriminator 3 view .LVU160
 571 0062 FFF7FEFF 		bl	vPortExitCritical
 572              	.LVL45:
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 573              		.loc 1 1026 2 discriminator 3 view .LVU161
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 574              		.loc 1 1026 24 is_stmt 0 discriminator 3 view .LVU162
 575 0066 0A4B     		ldr	r3, .L41+8
 576 0068 1B68     		ldr	r3, [r3]
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 577              		.loc 1 1026 4 discriminator 3 view .LVU163
 578 006a 002B     		cmp	r3, #0
 579 006c 05D0     		beq	.L33
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 580              		.loc 1 1030 3 is_stmt 1 view .LVU164
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 581              		.loc 1 1030 19 is_stmt 0 view .LVU165
 582 006e 074B     		ldr	r3, .L41+4
 583 0070 1B68     		ldr	r3, [r3]
 584 0072 DA6A     		ldr	r2, [r3, #44]
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 585              		.loc 1 1030 42 view .LVU166
 586 0074 E36A     		ldr	r3, [r4, #44]
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 587              		.loc 1 1030 5 view .LVU167
 588 0076 9A42     		cmp	r2, r3
 589 0078 03D3     		bcc	.L40
 590              	.L33:
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 591              		.loc 1 1043 1 view .LVU168
 592              		@ sp needed
ARM GAS  /tmp/cctzmfqj.s 			page 78


 593              	.LVL46:
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 594              		.loc 1 1043 1 view .LVU169
 595 007a 10BD     		pop	{r4, pc}
 596              	.LVL47:
 597              	.L39:
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 598              		.loc 1 981 5 is_stmt 1 view .LVU170
 599 007c FFF7FEFF 		bl	prvInitialiseTaskLists
 600              	.LVL48:
 601 0080 DCE7     		b	.L35
 602              	.L40:
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 603              		.loc 1 1032 4 view .LVU171
 604 0082 FFF7FEFF 		bl	vPortYield
 605              	.LVL49:
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 606              		.loc 1 1041 27 view .LVU172
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 607              		.loc 1 1043 1 is_stmt 0 view .LVU173
 608 0086 F8E7     		b	.L33
 609              	.L42:
 610              		.align	2
 611              	.L41:
 612 0088 00000000 		.word	.LANCHOR8
 613 008c 00000000 		.word	.LANCHOR9
 614 0090 00000000 		.word	.LANCHOR10
 615 0094 00000000 		.word	.LANCHOR11
 616 0098 00000000 		.word	.LANCHOR12
 617 009c 00000000 		.word	pxReadyTasksLists
 618              		.cfi_endproc
 619              	.LFE2:
 621              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 622              		.align	1
 623              		.syntax unified
 624              		.code	16
 625              		.thumb_func
 626              		.fpu softvfp
 628              	prvAddCurrentTaskToDelayedList:
 629              	.LVL50:
 630              	.LFB46:
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 79


3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL. */
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	being used for anything else. */
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cctzmfqj.s 			page 80


3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListI
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
ARM GAS  /tmp/cctzmfqj.s 			page 81


3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding	task then it must be the running state task.  Remove
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the	holding task from the ready	list. */
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cctzmfqj.s 			page 82


3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
ARM GAS  /tmp/cctzmfqj.s 			page 83


3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
ARM GAS  /tmp/cctzmfqj.s 			page 84


3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
ARM GAS  /tmp/cctzmfqj.s 			page 85


4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
ARM GAS  /tmp/cctzmfqj.s 			page 86


4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
ARM GAS  /tmp/cctzmfqj.s 			page 87


4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cctzmfqj.s 			page 88


4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cctzmfqj.s 			page 89


4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - 1;
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cctzmfqj.s 			page 90


4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState == taskWAITING_NOTIFICATION )
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
ARM GAS  /tmp/cctzmfqj.s 			page 91


4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
ARM GAS  /tmp/cctzmfqj.s 			page 92


4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
ARM GAS  /tmp/cctzmfqj.s 			page 93


4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
ARM GAS  /tmp/cctzmfqj.s 			page 94


4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
ARM GAS  /tmp/cctzmfqj.s 			page 95


4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
ARM GAS  /tmp/cctzmfqj.s 			page 96


4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 631              		.loc 1 4693 1 is_stmt 1 view -0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              		.loc 1 4693 1 is_stmt 0 view .LVU175
ARM GAS  /tmp/cctzmfqj.s 			page 97


 636 0000 70B5     		push	{r4, r5, r6, lr}
 637              	.LCFI5:
 638              		.cfi_def_cfa_offset 16
 639              		.cfi_offset 4, -16
 640              		.cfi_offset 5, -12
 641              		.cfi_offset 6, -8
 642              		.cfi_offset 14, -4
 643 0002 0400     		movs	r4, r0
 644 0004 0D00     		movs	r5, r1
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 645              		.loc 1 4694 1 is_stmt 1 view .LVU176
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 646              		.loc 1 4695 1 view .LVU177
 647              		.loc 1 4695 18 is_stmt 0 view .LVU178
 648 0006 174B     		ldr	r3, .L48
 649 0008 1E68     		ldr	r6, [r3]
 650              	.LVL51:
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 651              		.loc 1 4708 2 is_stmt 1 view .LVU179
 652              		.loc 1 4708 35 is_stmt 0 view .LVU180
 653 000a 174B     		ldr	r3, .L48+4
 654 000c 1868     		ldr	r0, [r3]
 655              	.LVL52:
 656              		.loc 1 4708 6 view .LVU181
 657 000e 0430     		adds	r0, r0, #4
 658 0010 FFF7FEFF 		bl	uxListRemove
 659              	.LVL53:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 660              		.loc 1 4716 27 is_stmt 1 view .LVU182
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 661              		.loc 1 4721 3 view .LVU183
 662              		.loc 1 4721 5 is_stmt 0 view .LVU184
 663 0014 631C     		adds	r3, r4, #1
 664 0016 0DD0     		beq	.L47
ARM GAS  /tmp/cctzmfqj.s 			page 98


 665              	.L44:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 666              		.loc 1 4733 4 is_stmt 1 view .LVU185
 667              		.loc 1 4733 16 is_stmt 0 view .LVU186
 668 0018 3419     		adds	r4, r6, r4
 669              	.LVL54:
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 670              		.loc 1 4736 4 is_stmt 1 view .LVU187
 671 001a 134B     		ldr	r3, .L48+4
 672 001c 1B68     		ldr	r3, [r3]
 673 001e 5C60     		str	r4, [r3, #4]
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 674              		.loc 1 4738 4 view .LVU188
 675              		.loc 1 4738 6 is_stmt 0 view .LVU189
 676 0020 A642     		cmp	r6, r4
 677 0022 10D9     		bls	.L46
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 678              		.loc 1 4742 5 is_stmt 1 view .LVU190
 679 0024 114B     		ldr	r3, .L48+8
 680 0026 1868     		ldr	r0, [r3]
 681              		.loc 1 4742 60 is_stmt 0 view .LVU191
 682 0028 0F4B     		ldr	r3, .L48+4
 683 002a 1968     		ldr	r1, [r3]
 684              		.loc 1 4742 5 view .LVU192
 685 002c 0431     		adds	r1, r1, #4
 686 002e FFF7FEFF 		bl	vListInsert
 687              	.LVL55:
 688              	.L43:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cctzmfqj.s 			page 99


4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 689              		.loc 1 4801 1 view .LVU193
 690              		@ sp needed
 691              	.LVL56:
 692              	.LVL57:
 693              		.loc 1 4801 1 view .LVU194
 694 0032 70BD     		pop	{r4, r5, r6, pc}
 695              	.LVL58:
 696              	.L47:
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 697              		.loc 1 4721 41 discriminator 1 view .LVU195
ARM GAS  /tmp/cctzmfqj.s 			page 100


 698 0034 002D     		cmp	r5, #0
 699 0036 EFD0     		beq	.L44
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 700              		.loc 1 4726 4 is_stmt 1 view .LVU196
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 701              		.loc 1 4726 56 is_stmt 0 view .LVU197
 702 0038 0B4B     		ldr	r3, .L48+4
 703 003a 1968     		ldr	r1, [r3]
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 704              		.loc 1 4726 4 view .LVU198
 705 003c 0431     		adds	r1, r1, #4
 706 003e 0C48     		ldr	r0, .L48+12
 707 0040 FFF7FEFF 		bl	vListInsertEnd
 708              	.LVL59:
 709 0044 F5E7     		b	.L43
 710              	.LVL60:
 711              	.L46:
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712              		.loc 1 4748 5 is_stmt 1 view .LVU199
 713 0046 0B4B     		ldr	r3, .L48+16
 714 0048 1868     		ldr	r0, [r3]
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 715              		.loc 1 4748 52 is_stmt 0 view .LVU200
 716 004a 074B     		ldr	r3, .L48+4
 717 004c 1968     		ldr	r1, [r3]
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 718              		.loc 1 4748 5 view .LVU201
 719 004e 0431     		adds	r1, r1, #4
 720 0050 FFF7FEFF 		bl	vListInsert
 721              	.LVL61:
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 722              		.loc 1 4753 5 is_stmt 1 view .LVU202
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 723              		.loc 1 4753 21 is_stmt 0 view .LVU203
 724 0054 084B     		ldr	r3, .L48+20
 725 0056 1B68     		ldr	r3, [r3]
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 726              		.loc 1 4753 7 view .LVU204
 727 0058 A342     		cmp	r3, r4
 728 005a EAD9     		bls	.L43
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 729              		.loc 1 4755 6 is_stmt 1 view .LVU205
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 730              		.loc 1 4755 27 is_stmt 0 view .LVU206
 731 005c 064B     		ldr	r3, .L48+20
 732 005e 1C60     		str	r4, [r3]
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 733              		.loc 1 4759 30 is_stmt 1 view .LVU207
 734              		.loc 1 4801 1 is_stmt 0 view .LVU208
 735 0060 E7E7     		b	.L43
 736              	.L49:
 737 0062 C046     		.align	2
 738              	.L48:
 739 0064 00000000 		.word	.LANCHOR13
 740 0068 00000000 		.word	.LANCHOR9
 741 006c 00000000 		.word	.LANCHOR7
 742 0070 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/cctzmfqj.s 			page 101


 743 0074 00000000 		.word	.LANCHOR2
 744 0078 00000000 		.word	.LANCHOR3
 745              		.cfi_endproc
 746              	.LFE46:
 748              		.section	.text.xTaskCreate,"ax",%progbits
 749              		.align	1
 750              		.global	xTaskCreate
 751              		.syntax unified
 752              		.code	16
 753              		.thumb_func
 754              		.fpu softvfp
 756              	xTaskCreate:
 757              	.LVL62:
 758              	.LFB0:
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 759              		.loc 1 682 2 is_stmt 1 view -0
 760              		.cfi_startproc
 761              		@ args = 8, pretend = 0, frame = 8
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 763              		.loc 1 682 2 is_stmt 0 view .LVU210
 764 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 765              	.LCFI6:
 766              		.cfi_def_cfa_offset 20
 767              		.cfi_offset 4, -20
 768              		.cfi_offset 5, -16
 769              		.cfi_offset 6, -12
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 87B0     		sub	sp, sp, #28
 773              	.LCFI7:
 774              		.cfi_def_cfa_offset 48
 775 0004 0490     		str	r0, [sp, #16]
 776 0006 0591     		str	r1, [sp, #20]
 777 0008 1500     		movs	r5, r2
 778 000a 1F00     		movs	r7, r3
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 779              		.loc 1 683 2 is_stmt 1 view .LVU211
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780              		.loc 1 684 2 view .LVU212
 781              	.LBB2:
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 782              		.loc 1 713 3 view .LVU213
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 783              		.loc 1 716 4 view .LVU214
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 784              		.loc 1 716 32 is_stmt 0 view .LVU215
 785 000c 9000     		lsls	r0, r2, #2
 786              	.LVL63:
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 787              		.loc 1 716 32 view .LVU216
 788 000e FFF7FEFF 		bl	pvPortMalloc
 789              	.LVL64:
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 790              		.loc 1 716 32 view .LVU217
 791 0012 061E     		subs	r6, r0, #0
 792              	.LVL65:
ARM GAS  /tmp/cctzmfqj.s 			page 102


 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 793              		.loc 1 718 4 is_stmt 1 view .LVU218
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794              		.loc 1 718 6 is_stmt 0 view .LVU219
 795 0014 1DD0     		beq	.L54
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 796              		.loc 1 721 5 is_stmt 1 view .LVU220
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 797              		.loc 1 721 28 is_stmt 0 view .LVU221
 798 0016 5420     		movs	r0, #84
 799              	.LVL66:
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 800              		.loc 1 721 28 view .LVU222
 801 0018 FFF7FEFF 		bl	pvPortMalloc
 802              	.LVL67:
 803 001c 041E     		subs	r4, r0, #0
 804              	.LVL68:
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 805              		.loc 1 723 5 is_stmt 1 view .LVU223
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 806              		.loc 1 723 7 is_stmt 0 view .LVU224
 807 001e 14D0     		beq	.L52
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 808              		.loc 1 726 6 is_stmt 1 view .LVU225
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 809              		.loc 1 726 24 is_stmt 0 view .LVU226
 810 0020 0663     		str	r6, [r0, #48]
 811              	.LVL69:
 812              	.L53:
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 813              		.loc 1 726 24 view .LVU227
 814              	.LBE2:
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815              		.loc 1 742 3 is_stmt 1 view .LVU228
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 816              		.loc 1 742 5 is_stmt 0 view .LVU229
 817 0022 002C     		cmp	r4, #0
 818 0024 19D0     		beq	.L55
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 819              		.loc 1 752 4 is_stmt 1 view .LVU230
 820 0026 0023     		movs	r3, #0
 821 0028 0393     		str	r3, [sp, #12]
 822 002a 0294     		str	r4, [sp, #8]
 823 002c 0D9B     		ldr	r3, [sp, #52]
 824 002e 0193     		str	r3, [sp, #4]
 825 0030 0C9B     		ldr	r3, [sp, #48]
 826 0032 0093     		str	r3, [sp]
 827 0034 3B00     		movs	r3, r7
 828 0036 2A00     		movs	r2, r5
 829 0038 0599     		ldr	r1, [sp, #20]
 830 003a 0498     		ldr	r0, [sp, #16]
 831 003c FFF7FEFF 		bl	prvInitialiseNewTask
 832              	.LVL70:
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 833              		.loc 1 753 4 view .LVU231
 834 0040 2000     		movs	r0, r4
 835 0042 FFF7FEFF 		bl	prvAddNewTaskToReadyList
ARM GAS  /tmp/cctzmfqj.s 			page 103


 836              	.LVL71:
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 837              		.loc 1 754 4 view .LVU232
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 838              		.loc 1 754 12 is_stmt 0 view .LVU233
 839 0046 0120     		movs	r0, #1
 840 0048 05E0     		b	.L50
 841              	.LVL72:
 842              	.L52:
 843              	.LBB3:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 844              		.loc 1 732 6 is_stmt 1 view .LVU234
 845 004a 3000     		movs	r0, r6
 846              	.LVL73:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 847              		.loc 1 732 6 is_stmt 0 view .LVU235
 848 004c FFF7FEFF 		bl	vPortFree
 849              	.LVL74:
 850 0050 E7E7     		b	.L53
 851              	.LVL75:
 852              	.L54:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 853              		.loc 1 732 6 view .LVU236
 854              	.LBE3:
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 855              		.loc 1 758 12 view .LVU237
 856 0052 0120     		movs	r0, #1
 857              	.LVL76:
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 858              		.loc 1 758 12 view .LVU238
 859 0054 4042     		rsbs	r0, r0, #0
 860              	.L50:
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 861              		.loc 1 762 2 view .LVU239
 862 0056 07B0     		add	sp, sp, #28
 863              		@ sp needed
 864              	.LVL77:
 865              	.LVL78:
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 866              		.loc 1 762 2 view .LVU240
 867 0058 F0BD     		pop	{r4, r5, r6, r7, pc}
 868              	.LVL79:
 869              	.L55:
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 870              		.loc 1 758 12 view .LVU241
 871 005a 0120     		movs	r0, #1
 872 005c 4042     		rsbs	r0, r0, #0
 873              	.LVL80:
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 874              		.loc 1 761 3 is_stmt 1 view .LVU242
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 875              		.loc 1 761 10 is_stmt 0 view .LVU243
 876 005e FAE7     		b	.L50
 877              		.cfi_endproc
 878              	.LFE0:
 880              		.section	.text.vTaskDelete,"ax",%progbits
 881              		.align	1
ARM GAS  /tmp/cctzmfqj.s 			page 104


 882              		.global	vTaskDelete
 883              		.syntax unified
 884              		.code	16
 885              		.thumb_func
 886              		.fpu softvfp
 888              	vTaskDelete:
 889              	.LVL81:
 890              	.LFB3:
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 891              		.loc 1 1049 2 is_stmt 1 view -0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 895              		.loc 1 1049 2 is_stmt 0 view .LVU245
 896 0000 70B5     		push	{r4, r5, r6, lr}
 897              	.LCFI8:
 898              		.cfi_def_cfa_offset 16
 899              		.cfi_offset 4, -16
 900              		.cfi_offset 5, -12
 901              		.cfi_offset 6, -8
 902              		.cfi_offset 14, -4
 903 0002 0400     		movs	r4, r0
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 904              		.loc 1 1050 2 is_stmt 1 view .LVU246
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 905              		.loc 1 1052 3 view .LVU247
 906 0004 FFF7FEFF 		bl	vPortEnterCritical
 907              	.LVL82:
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 908              		.loc 1 1056 4 view .LVU248
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 909              		.loc 1 1056 12 is_stmt 0 view .LVU249
 910 0008 002C     		cmp	r4, #0
 911 000a 26D0     		beq	.L64
 912              	.LVL83:
 913              	.L57:
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 914              		.loc 1 1059 4 is_stmt 1 discriminator 4 view .LVU250
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 915              		.loc 1 1059 8 is_stmt 0 discriminator 4 view .LVU251
 916 000c 251D     		adds	r5, r4, #4
 917 000e 2800     		movs	r0, r5
 918 0010 FFF7FEFF 		bl	uxListRemove
 919              	.LVL84:
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 920              		.loc 1 1065 29 is_stmt 1 discriminator 4 view .LVU252
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 921              		.loc 1 1069 4 discriminator 4 view .LVU253
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 922              		.loc 1 1069 6 is_stmt 0 discriminator 4 view .LVU254
 923 0014 A36A     		ldr	r3, [r4, #40]
 924 0016 002B     		cmp	r3, #0
 925 0018 03D0     		beq	.L58
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 926              		.loc 1 1071 5 is_stmt 1 view .LVU255
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cctzmfqj.s 			page 105


 927              		.loc 1 1071 14 is_stmt 0 view .LVU256
 928 001a 2000     		movs	r0, r4
 929 001c 1830     		adds	r0, r0, #24
 930 001e FFF7FEFF 		bl	uxListRemove
 931              	.LVL85:
 932              	.L58:
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 933              		.loc 1 1075 29 is_stmt 1 view .LVU257
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 934              		.loc 1 1082 4 view .LVU258
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 935              		.loc 1 1082 16 is_stmt 0 view .LVU259
 936 0022 184A     		ldr	r2, .L67
 937 0024 1368     		ldr	r3, [r2]
 938 0026 0133     		adds	r3, r3, #1
 939 0028 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 940              		.loc 1 1084 4 is_stmt 1 view .LVU260
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 941              		.loc 1 1084 14 is_stmt 0 view .LVU261
 942 002a 174B     		ldr	r3, .L67+4
 943 002c 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 944              		.loc 1 1084 6 view .LVU262
 945 002e A342     		cmp	r3, r4
 946 0030 16D0     		beq	.L65
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 947              		.loc 1 1107 5 is_stmt 1 view .LVU263
 948 0032 164A     		ldr	r2, .L67+8
 949 0034 1368     		ldr	r3, [r2]
 950 0036 013B     		subs	r3, r3, #1
 951 0038 1360     		str	r3, [r2]
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952              		.loc 1 1108 5 view .LVU264
 953 003a 2000     		movs	r0, r4
 954 003c FFF7FEFF 		bl	prvDeleteTCB
 955              	.LVL86:
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 956              		.loc 1 1112 5 view .LVU265
 957 0040 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 958              	.LVL87:
 959              	.L60:
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 960              		.loc 1 1115 29 view .LVU266
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 961              		.loc 1 1117 3 view .LVU267
 962 0044 FFF7FEFF 		bl	vPortExitCritical
 963              	.LVL88:
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 964              		.loc 1 1121 3 view .LVU268
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 965              		.loc 1 1121 25 is_stmt 0 view .LVU269
 966 0048 114B     		ldr	r3, .L67+12
 967 004a 1B68     		ldr	r3, [r3]
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 968              		.loc 1 1121 5 view .LVU270
 969 004c 002B     		cmp	r3, #0
ARM GAS  /tmp/cctzmfqj.s 			page 106


 970 004e 03D0     		beq	.L56
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 971              		.loc 1 1123 4 is_stmt 1 view .LVU271
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 972              		.loc 1 1123 14 is_stmt 0 view .LVU272
 973 0050 0D4B     		ldr	r3, .L67+4
 974 0052 1B68     		ldr	r3, [r3]
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 975              		.loc 1 1123 6 view .LVU273
 976 0054 A342     		cmp	r3, r4
 977 0056 0CD0     		beq	.L66
 978              	.L56:
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 979              		.loc 1 1133 2 view .LVU274
 980              		@ sp needed
 981              	.LVL89:
 982              	.LVL90:
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 983              		.loc 1 1133 2 view .LVU275
 984 0058 70BD     		pop	{r4, r5, r6, pc}
 985              	.LVL91:
 986              	.L64:
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 987              		.loc 1 1056 12 discriminator 1 view .LVU276
 988 005a 0B4B     		ldr	r3, .L67+4
 989 005c 1C68     		ldr	r4, [r3]
 990              	.LVL92:
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 991              		.loc 1 1056 12 discriminator 1 view .LVU277
 992 005e D5E7     		b	.L57
 993              	.LVL93:
 994              	.L65:
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 995              		.loc 1 1091 5 is_stmt 1 view .LVU278
 996 0060 2900     		movs	r1, r5
 997 0062 0C48     		ldr	r0, .L67+16
 998 0064 FFF7FEFF 		bl	vListInsertEnd
 999              	.LVL94:
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1000              		.loc 1 1096 5 view .LVU279
 1001 0068 0B4A     		ldr	r2, .L67+20
 1002 006a 1368     		ldr	r3, [r2]
 1003 006c 0133     		adds	r3, r3, #1
 1004 006e 1360     		str	r3, [r2]
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1005              		.loc 1 1103 54 view .LVU280
 1006 0070 E8E7     		b	.L60
 1007              	.L66:
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1008              		.loc 1 1125 5 view .LVU281
 1009 0072 0A4B     		ldr	r3, .L67+24
 1010 0074 1B68     		ldr	r3, [r3]
 1011 0076 002B     		cmp	r3, #0
 1012 0078 01D0     		beq	.L62
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1013              		.loc 1 1125 5 discriminator 1 view .LVU282
 1014              		.syntax divided
ARM GAS  /tmp/cctzmfqj.s 			page 107


 1015              	@ 1125 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1016 007a 72B6     		 cpsid i 
 1017              	@ 0 "" 2
 1018              		.thumb
 1019              		.syntax unified
 1020              	.L63:
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1021              		.loc 1 1125 5 discriminator 1 view .LVU283
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1022              		.loc 1 1125 5 discriminator 1 view .LVU284
 1023 007c FEE7     		b	.L63
 1024              	.L62:
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1025              		.loc 1 1125 46 discriminator 2 view .LVU285
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1026              		.loc 1 1126 5 discriminator 2 view .LVU286
 1027 007e FFF7FEFF 		bl	vPortYield
 1028              	.LVL95:
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1029              		.loc 1 1130 29 discriminator 2 view .LVU287
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1030              		.loc 1 1133 2 is_stmt 0 discriminator 2 view .LVU288
 1031 0082 E9E7     		b	.L56
 1032              	.L68:
 1033              		.align	2
 1034              	.L67:
 1035 0084 00000000 		.word	.LANCHOR11
 1036 0088 00000000 		.word	.LANCHOR9
 1037 008c 00000000 		.word	.LANCHOR8
 1038 0090 00000000 		.word	.LANCHOR10
 1039 0094 00000000 		.word	.LANCHOR6
 1040 0098 00000000 		.word	.LANCHOR14
 1041 009c 00000000 		.word	.LANCHOR15
 1042              		.cfi_endproc
 1043              	.LFE3:
 1045              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1046              		.align	1
 1047              		.global	uxTaskPriorityGet
 1048              		.syntax unified
 1049              		.code	16
 1050              		.thumb_func
 1051              		.fpu softvfp
 1053              	uxTaskPriorityGet:
 1054              	.LVL96:
 1055              	.LFB5:
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1056              		.loc 1 1341 2 is_stmt 1 view -0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 0
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1060              		.loc 1 1341 2 is_stmt 0 view .LVU290
 1061 0000 10B5     		push	{r4, lr}
 1062              	.LCFI9:
 1063              		.cfi_def_cfa_offset 8
 1064              		.cfi_offset 4, -8
 1065              		.cfi_offset 14, -4
ARM GAS  /tmp/cctzmfqj.s 			page 108


 1066 0002 0400     		movs	r4, r0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1067              		.loc 1 1342 2 is_stmt 1 view .LVU291
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1068              		.loc 1 1343 2 view .LVU292
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1069              		.loc 1 1345 3 view .LVU293
 1070 0004 FFF7FEFF 		bl	vPortEnterCritical
 1071              	.LVL97:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1072              		.loc 1 1349 4 view .LVU294
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1073              		.loc 1 1349 12 is_stmt 0 view .LVU295
 1074 0008 002C     		cmp	r4, #0
 1075 000a 04D0     		beq	.L71
 1076              	.LVL98:
 1077              	.L70:
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1078              		.loc 1 1350 4 is_stmt 1 discriminator 4 view .LVU296
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1079              		.loc 1 1350 13 is_stmt 0 discriminator 4 view .LVU297
 1080 000c E46A     		ldr	r4, [r4, #44]
 1081              	.LVL99:
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1082              		.loc 1 1352 3 is_stmt 1 discriminator 4 view .LVU298
 1083 000e FFF7FEFF 		bl	vPortExitCritical
 1084              	.LVL100:
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1085              		.loc 1 1354 3 discriminator 4 view .LVU299
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1086              		.loc 1 1355 2 is_stmt 0 discriminator 4 view .LVU300
 1087 0012 2000     		movs	r0, r4
 1088              		@ sp needed
 1089              	.LVL101:
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1090              		.loc 1 1355 2 discriminator 4 view .LVU301
 1091 0014 10BD     		pop	{r4, pc}
 1092              	.LVL102:
 1093              	.L71:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1094              		.loc 1 1349 12 discriminator 1 view .LVU302
 1095 0016 014B     		ldr	r3, .L72
 1096 0018 1C68     		ldr	r4, [r3]
 1097              	.LVL103:
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1098              		.loc 1 1349 12 discriminator 1 view .LVU303
 1099 001a F7E7     		b	.L70
 1100              	.L73:
 1101              		.align	2
 1102              	.L72:
 1103 001c 00000000 		.word	.LANCHOR9
 1104              		.cfi_endproc
 1105              	.LFE5:
 1107              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1108              		.align	1
 1109              		.global	uxTaskPriorityGetFromISR
 1110              		.syntax unified
ARM GAS  /tmp/cctzmfqj.s 			page 109


 1111              		.code	16
 1112              		.thumb_func
 1113              		.fpu softvfp
 1115              	uxTaskPriorityGetFromISR:
 1116              	.LVL104:
 1117              	.LFB6:
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1118              		.loc 1 1363 2 is_stmt 1 view -0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1122              		.loc 1 1363 2 is_stmt 0 view .LVU305
 1123 0000 10B5     		push	{r4, lr}
 1124              	.LCFI10:
 1125              		.cfi_def_cfa_offset 8
 1126              		.cfi_offset 4, -8
 1127              		.cfi_offset 14, -4
 1128 0002 0400     		movs	r4, r0
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1129              		.loc 1 1364 2 is_stmt 1 view .LVU306
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1130              		.loc 1 1365 2 view .LVU307
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1131              		.loc 1 1383 45 view .LVU308
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1132              		.loc 1 1385 3 view .LVU309
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1133              		.loc 1 1385 27 is_stmt 0 view .LVU310
 1134 0004 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1135              	.LVL105:
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1136              		.loc 1 1389 4 is_stmt 1 view .LVU311
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1137              		.loc 1 1389 12 is_stmt 0 view .LVU312
 1138 0008 002C     		cmp	r4, #0
 1139 000a 04D0     		beq	.L76
 1140              	.LVL106:
 1141              	.L75:
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1142              		.loc 1 1390 4 is_stmt 1 discriminator 4 view .LVU313
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1143              		.loc 1 1390 13 is_stmt 0 discriminator 4 view .LVU314
 1144 000c E46A     		ldr	r4, [r4, #44]
 1145              	.LVL107:
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1146              		.loc 1 1392 3 is_stmt 1 discriminator 4 view .LVU315
 1147 000e FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1148              	.LVL108:
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1149              		.loc 1 1394 3 discriminator 4 view .LVU316
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1150              		.loc 1 1395 2 is_stmt 0 discriminator 4 view .LVU317
 1151 0012 2000     		movs	r0, r4
 1152              		@ sp needed
 1153              	.LVL109:
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 110


 1154              		.loc 1 1395 2 discriminator 4 view .LVU318
 1155 0014 10BD     		pop	{r4, pc}
 1156              	.LVL110:
 1157              	.L76:
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1158              		.loc 1 1389 12 discriminator 1 view .LVU319
 1159 0016 014B     		ldr	r3, .L77
 1160 0018 1C68     		ldr	r4, [r3]
 1161              	.LVL111:
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1162              		.loc 1 1389 12 discriminator 1 view .LVU320
 1163 001a F7E7     		b	.L75
 1164              	.L78:
 1165              		.align	2
 1166              	.L77:
 1167 001c 00000000 		.word	.LANCHOR9
 1168              		.cfi_endproc
 1169              	.LFE6:
 1171              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1172              		.align	1
 1173              		.global	vTaskPrioritySet
 1174              		.syntax unified
 1175              		.code	16
 1176              		.thumb_func
 1177              		.fpu softvfp
 1179              	vTaskPrioritySet:
 1180              	.LVL112:
 1181              	.LFB7:
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1182              		.loc 1 1403 2 is_stmt 1 view -0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 0
 1185              		@ frame_needed = 0, uses_anonymous_args = 0
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1186              		.loc 1 1403 2 is_stmt 0 view .LVU322
 1187 0000 70B5     		push	{r4, r5, r6, lr}
 1188              	.LCFI11:
 1189              		.cfi_def_cfa_offset 16
 1190              		.cfi_offset 4, -16
 1191              		.cfi_offset 5, -12
 1192              		.cfi_offset 6, -8
 1193              		.cfi_offset 14, -4
 1194 0002 0400     		movs	r4, r0
 1195 0004 0D00     		movs	r5, r1
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1196              		.loc 1 1404 2 is_stmt 1 view .LVU323
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1197              		.loc 1 1405 2 view .LVU324
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1198              		.loc 1 1406 2 view .LVU325
 1199              	.LVL113:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1200              		.loc 1 1408 3 view .LVU326
 1201 0006 0629     		cmp	r1, #6
 1202 0008 01D9     		bls	.L80
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1203              		.loc 1 1408 3 discriminator 1 view .LVU327
ARM GAS  /tmp/cctzmfqj.s 			page 111


 1204              		.syntax divided
 1205              	@ 1408 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1206 000a 72B6     		 cpsid i 
 1207              	@ 0 "" 2
 1208              		.thumb
 1209              		.syntax unified
 1210              	.L81:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1211              		.loc 1 1408 3 discriminator 1 view .LVU328
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1212              		.loc 1 1408 3 discriminator 1 view .LVU329
 1213 000c FEE7     		b	.L81
 1214              	.L80:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1215              		.loc 1 1408 59 view .LVU330
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1216              		.loc 1 1411 3 view .LVU331
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1217              		.loc 1 1417 28 view .LVU332
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1218              		.loc 1 1420 3 view .LVU333
 1219 000e FFF7FEFF 		bl	vPortEnterCritical
 1220              	.LVL114:
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1221              		.loc 1 1424 4 view .LVU334
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1222              		.loc 1 1424 12 is_stmt 0 view .LVU335
 1223 0012 002C     		cmp	r4, #0
 1224 0014 0ED0     		beq	.L93
 1225              	.LVL115:
 1226              	.L82:
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1227              		.loc 1 1426 50 is_stmt 1 discriminator 4 view .LVU336
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1228              		.loc 1 1430 5 discriminator 4 view .LVU337
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1229              		.loc 1 1430 27 is_stmt 0 discriminator 4 view .LVU338
 1230 0016 626C     		ldr	r2, [r4, #68]
 1231              	.LVL116:
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1232              		.loc 1 1438 4 is_stmt 1 discriminator 4 view .LVU339
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1233              		.loc 1 1438 6 is_stmt 0 discriminator 4 view .LVU340
 1234 0018 9542     		cmp	r5, r2
 1235 001a 27D0     		beq	.L83
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1236              		.loc 1 1442 5 is_stmt 1 view .LVU341
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1237              		.loc 1 1442 7 is_stmt 0 view .LVU342
 1238 001c 0DD9     		bls	.L84
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1239              		.loc 1 1444 6 is_stmt 1 view .LVU343
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1240              		.loc 1 1444 16 is_stmt 0 view .LVU344
 1241 001e 244B     		ldr	r3, .L97
 1242 0020 1B68     		ldr	r3, [r3]
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cctzmfqj.s 			page 112


 1243              		.loc 1 1444 8 view .LVU345
 1244 0022 A342     		cmp	r3, r4
 1245 0024 25D0     		beq	.L90
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1246              		.loc 1 1449 7 is_stmt 1 view .LVU346
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1247              		.loc 1 1449 40 is_stmt 0 view .LVU347
 1248 0026 224B     		ldr	r3, .L97
 1249 0028 1B68     		ldr	r3, [r3]
 1250 002a DB6A     		ldr	r3, [r3, #44]
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1251              		.loc 1 1449 9 view .LVU348
 1252 002c AB42     		cmp	r3, r5
 1253 002e 22D9     		bls	.L91
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1254              		.loc 1 1406 13 view .LVU349
 1255 0030 0026     		movs	r6, #0
 1256 0032 07E0     		b	.L85
 1257              	.LVL117:
 1258              	.L93:
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1259              		.loc 1 1424 12 discriminator 1 view .LVU350
 1260 0034 1E4B     		ldr	r3, .L97
 1261 0036 1C68     		ldr	r4, [r3]
 1262              	.LVL118:
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1263              		.loc 1 1424 12 discriminator 1 view .LVU351
 1264 0038 EDE7     		b	.L82
 1265              	.LVL119:
 1266              	.L84:
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1267              		.loc 1 1465 10 is_stmt 1 view .LVU352
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1268              		.loc 1 1465 20 is_stmt 0 view .LVU353
 1269 003a 1D4B     		ldr	r3, .L97
 1270 003c 1B68     		ldr	r3, [r3]
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1271              		.loc 1 1465 12 view .LVU354
 1272 003e A342     		cmp	r3, r4
 1273 0040 1BD0     		beq	.L92
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1274              		.loc 1 1406 13 view .LVU355
 1275 0042 0026     		movs	r6, #0
 1276              	.L85:
 1277              	.LVL120:
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1278              		.loc 1 1477 5 is_stmt 1 view .LVU356
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1279              		.loc 1 1482 5 view .LVU357
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1280              		.loc 1 1482 27 is_stmt 0 view .LVU358
 1281 0044 E36A     		ldr	r3, [r4, #44]
 1282              	.LVL121:
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1283              		.loc 1 1488 6 is_stmt 1 view .LVU359
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1284              		.loc 1 1488 8 is_stmt 0 view .LVU360
ARM GAS  /tmp/cctzmfqj.s 			page 113


 1285 0046 9A42     		cmp	r2, r3
 1286 0048 19D0     		beq	.L94
 1287              	.L86:
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1288              		.loc 1 1494 31 is_stmt 1 view .LVU361
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1289              		.loc 1 1498 6 view .LVU362
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1290              		.loc 1 1498 28 is_stmt 0 view .LVU363
 1291 004a 6564     		str	r5, [r4, #68]
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1292              		.loc 1 1508 5 is_stmt 1 view .LVU364
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1293              		.loc 1 1508 7 is_stmt 0 view .LVU365
 1294 004c A269     		ldr	r2, [r4, #24]
 1295              	.LVL122:
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1296              		.loc 1 1508 7 view .LVU366
 1297 004e 002A     		cmp	r2, #0
 1298 0050 02DB     		blt	.L87
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1299              		.loc 1 1510 6 is_stmt 1 view .LVU367
 1300 0052 0722     		movs	r2, #7
 1301 0054 551B     		subs	r5, r2, r5
 1302              	.LVL123:
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1303              		.loc 1 1510 6 is_stmt 0 view .LVU368
 1304 0056 A561     		str	r5, [r4, #24]
 1305              	.L87:
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1306              		.loc 1 1514 30 is_stmt 1 view .LVU369
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1307              		.loc 1 1521 5 view .LVU370
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1308              		.loc 1 1521 9 is_stmt 0 view .LVU371
 1309 0058 9A00     		lsls	r2, r3, #2
 1310 005a D218     		adds	r2, r2, r3
 1311 005c 9300     		lsls	r3, r2, #2
 1312              	.LVL124:
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1313              		.loc 1 1521 9 view .LVU372
 1314 005e 154A     		ldr	r2, .L97+4
 1315 0060 9B18     		adds	r3, r3, r2
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1316              		.loc 1 1521 112 view .LVU373
 1317 0062 6269     		ldr	r2, [r4, #20]
 1318 0064 9A42     		cmp	r2, r3
 1319 0066 0CD0     		beq	.L95
 1320              	.LVL125:
 1321              	.L88:
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1322              		.loc 1 1541 30 is_stmt 1 view .LVU374
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1323              		.loc 1 1544 5 view .LVU375
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1324              		.loc 1 1544 7 is_stmt 0 view .LVU376
 1325 0068 002E     		cmp	r6, #0
ARM GAS  /tmp/cctzmfqj.s 			page 114


 1326 006a 1ED1     		bne	.L96
 1327              	.LVL126:
 1328              	.L83:
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1329              		.loc 1 1550 30 is_stmt 1 view .LVU377
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1330              		.loc 1 1555 5 view .LVU378
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1331              		.loc 1 1558 3 view .LVU379
 1332 006c FFF7FEFF 		bl	vPortExitCritical
 1333              	.LVL127:
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1334              		.loc 1 1559 2 is_stmt 0 view .LVU380
 1335              		@ sp needed
 1336              	.LVL128:
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1337              		.loc 1 1559 2 view .LVU381
 1338 0070 70BD     		pop	{r4, r5, r6, pc}
 1339              	.LVL129:
 1340              	.L90:
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1341              		.loc 1 1406 13 view .LVU382
 1342 0072 0026     		movs	r6, #0
 1343 0074 E6E7     		b	.L85
 1344              	.L91:
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1345              		.loc 1 1451 23 view .LVU383
 1346 0076 0126     		movs	r6, #1
 1347 0078 E4E7     		b	.L85
 1348              	.L92:
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1349              		.loc 1 1470 21 view .LVU384
 1350 007a 0126     		movs	r6, #1
 1351 007c E2E7     		b	.L85
 1352              	.LVL130:
 1353              	.L94:
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1354              		.loc 1 1490 7 is_stmt 1 view .LVU385
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1355              		.loc 1 1490 25 is_stmt 0 view .LVU386
 1356 007e E562     		str	r5, [r4, #44]
 1357 0080 E3E7     		b	.L86
 1358              	.LVL131:
 1359              	.L95:
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1360              		.loc 1 1526 6 is_stmt 1 view .LVU387
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1361              		.loc 1 1526 10 is_stmt 0 view .LVU388
 1362 0082 251D     		adds	r5, r4, #4
 1363 0084 2800     		movs	r0, r5
 1364 0086 FFF7FEFF 		bl	uxListRemove
 1365              	.LVL132:
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1366              		.loc 1 1535 31 is_stmt 1 view .LVU389
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1367              		.loc 1 1537 6 view .LVU390
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cctzmfqj.s 			page 115


 1368              		.loc 1 1537 6 view .LVU391
 1369 008a E26A     		ldr	r2, [r4, #44]
 1370 008c 0A4B     		ldr	r3, .L97+8
 1371 008e 1B68     		ldr	r3, [r3]
 1372 0090 9A42     		cmp	r2, r3
 1373 0092 01D9     		bls	.L89
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1374              		.loc 1 1537 6 discriminator 1 view .LVU392
 1375 0094 084B     		ldr	r3, .L97+8
 1376 0096 1A60     		str	r2, [r3]
 1377              	.L89:
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1378              		.loc 1 1537 6 discriminator 3 view .LVU393
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1379              		.loc 1 1537 6 discriminator 3 view .LVU394
 1380 0098 9300     		lsls	r3, r2, #2
 1381 009a 9B18     		adds	r3, r3, r2
 1382 009c 9800     		lsls	r0, r3, #2
 1383 009e 054B     		ldr	r3, .L97+4
 1384 00a0 C018     		adds	r0, r0, r3
 1385 00a2 2900     		movs	r1, r5
 1386 00a4 FFF7FEFF 		bl	vListInsertEnd
 1387              	.LVL133:
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1388              		.loc 1 1537 36 discriminator 3 view .LVU395
 1389 00a8 DEE7     		b	.L88
 1390              	.L96:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1391              		.loc 1 1546 6 view .LVU396
 1392 00aa FFF7FEFF 		bl	vPortYield
 1393              	.LVL134:
 1394 00ae DDE7     		b	.L83
 1395              	.L98:
 1396              		.align	2
 1397              	.L97:
 1398 00b0 00000000 		.word	.LANCHOR9
 1399 00b4 00000000 		.word	pxReadyTasksLists
 1400 00b8 00000000 		.word	.LANCHOR12
 1401              		.cfi_endproc
 1402              	.LFE7:
 1404              		.section	.text.vTaskResume,"ax",%progbits
 1405              		.align	1
 1406              		.global	vTaskResume
 1407              		.syntax unified
 1408              		.code	16
 1409              		.thumb_func
 1410              		.fpu softvfp
 1412              	vTaskResume:
 1413              	.LVL135:
 1414              	.LFB10:
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1415              		.loc 1 1703 2 view -0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1419              		.loc 1 1703 2 is_stmt 0 view .LVU398
ARM GAS  /tmp/cctzmfqj.s 			page 116


 1420 0000 70B5     		push	{r4, r5, r6, lr}
 1421              	.LCFI12:
 1422              		.cfi_def_cfa_offset 16
 1423              		.cfi_offset 4, -16
 1424              		.cfi_offset 5, -12
 1425              		.cfi_offset 6, -8
 1426              		.cfi_offset 14, -4
 1427 0002 041E     		subs	r4, r0, #0
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1428              		.loc 1 1704 2 is_stmt 1 view .LVU399
 1429              	.LVL136:
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1430              		.loc 1 1707 3 view .LVU400
 1431 0004 0DD0     		beq	.L105
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1432              		.loc 1 1707 32 discriminator 1 view .LVU401
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1433              		.loc 1 1711 3 discriminator 1 view .LVU402
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1434              		.loc 1 1711 36 is_stmt 0 discriminator 1 view .LVU403
 1435 0006 164B     		ldr	r3, .L107
 1436 0008 1B68     		ldr	r3, [r3]
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1437              		.loc 1 1711 25 discriminator 1 view .LVU404
 1438 000a 8342     		cmp	r3, r0
 1439 000c 08D0     		beq	.L99
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1440              		.loc 1 1713 4 is_stmt 1 view .LVU405
 1441 000e FFF7FEFF 		bl	vPortEnterCritical
 1442              	.LVL137:
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1443              		.loc 1 1715 5 view .LVU406
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1444              		.loc 1 1715 9 is_stmt 0 view .LVU407
 1445 0012 2000     		movs	r0, r4
 1446 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1447              	.LVL138:
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1448              		.loc 1 1715 7 view .LVU408
 1449 0018 0028     		cmp	r0, #0
 1450 001a 04D1     		bne	.L106
 1451              	.L103:
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1452              		.loc 1 1739 30 is_stmt 1 view .LVU409
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1453              		.loc 1 1742 4 view .LVU410
 1454 001c FFF7FEFF 		bl	vPortExitCritical
 1455              	.LVL139:
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1456              		.loc 1 1746 28 view .LVU411
 1457              	.L99:
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1458              		.loc 1 1748 2 is_stmt 0 view .LVU412
 1459              		@ sp needed
 1460              	.LVL140:
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1461              		.loc 1 1748 2 view .LVU413
ARM GAS  /tmp/cctzmfqj.s 			page 117


 1462 0020 70BD     		pop	{r4, r5, r6, pc}
 1463              	.LVL141:
 1464              	.L105:
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1465              		.loc 1 1707 3 is_stmt 1 discriminator 1 view .LVU414
 1466              		.syntax divided
 1467              	@ 1707 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1468 0022 72B6     		 cpsid i 
 1469              	@ 0 "" 2
 1470              		.thumb
 1471              		.syntax unified
 1472              	.L101:
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1473              		.loc 1 1707 3 discriminator 1 view .LVU415
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1474              		.loc 1 1707 3 discriminator 1 view .LVU416
 1475 0024 FEE7     		b	.L101
 1476              	.LVL142:
 1477              	.L106:
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1478              		.loc 1 1717 31 view .LVU417
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1479              		.loc 1 1721 6 view .LVU418
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1480              		.loc 1 1721 15 is_stmt 0 view .LVU419
 1481 0026 251D     		adds	r5, r4, #4
 1482 0028 2800     		movs	r0, r5
 1483 002a FFF7FEFF 		bl	uxListRemove
 1484              	.LVL143:
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1485              		.loc 1 1722 6 is_stmt 1 view .LVU420
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1486              		.loc 1 1722 6 view .LVU421
 1487 002e E26A     		ldr	r2, [r4, #44]
 1488 0030 0C4B     		ldr	r3, .L107+4
 1489 0032 1B68     		ldr	r3, [r3]
 1490 0034 9A42     		cmp	r2, r3
 1491 0036 01D9     		bls	.L104
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1492              		.loc 1 1722 6 discriminator 1 view .LVU422
 1493 0038 0A4B     		ldr	r3, .L107+4
 1494 003a 1A60     		str	r2, [r3]
 1495              	.L104:
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1496              		.loc 1 1722 6 discriminator 3 view .LVU423
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1497              		.loc 1 1722 6 discriminator 3 view .LVU424
 1498 003c 9300     		lsls	r3, r2, #2
 1499 003e 9B18     		adds	r3, r3, r2
 1500 0040 9800     		lsls	r0, r3, #2
 1501 0042 094B     		ldr	r3, .L107+8
 1502 0044 C018     		adds	r0, r0, r3
 1503 0046 2900     		movs	r1, r5
 1504 0048 FFF7FEFF 		bl	vListInsertEnd
 1505              	.LVL144:
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1506              		.loc 1 1722 36 discriminator 3 view .LVU425
ARM GAS  /tmp/cctzmfqj.s 			page 118


1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1507              		.loc 1 1725 6 discriminator 3 view .LVU426
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1508              		.loc 1 1725 15 is_stmt 0 discriminator 3 view .LVU427
 1509 004c E26A     		ldr	r2, [r4, #44]
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1510              		.loc 1 1725 43 discriminator 3 view .LVU428
 1511 004e 044B     		ldr	r3, .L107
 1512 0050 1B68     		ldr	r3, [r3]
 1513 0052 DB6A     		ldr	r3, [r3, #44]
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1514              		.loc 1 1725 8 discriminator 3 view .LVU429
 1515 0054 9A42     		cmp	r2, r3
 1516 0056 E1D3     		bcc	.L103
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1517              		.loc 1 1730 7 is_stmt 1 view .LVU430
 1518 0058 FFF7FEFF 		bl	vPortYield
 1519              	.LVL145:
 1520 005c DEE7     		b	.L103
 1521              	.L108:
 1522 005e C046     		.align	2
 1523              	.L107:
 1524 0060 00000000 		.word	.LANCHOR9
 1525 0064 00000000 		.word	.LANCHOR12
 1526 0068 00000000 		.word	pxReadyTasksLists
 1527              		.cfi_endproc
 1528              	.LFE10:
 1530              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1531              		.align	1
 1532              		.global	xTaskResumeFromISR
 1533              		.syntax unified
 1534              		.code	16
 1535              		.thumb_func
 1536              		.fpu softvfp
 1538              	xTaskResumeFromISR:
 1539              	.LVL146:
 1540              	.LFB11:
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1541              		.loc 1 1757 2 view -0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1545              		.loc 1 1757 2 is_stmt 0 view .LVU432
 1546 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1547              	.LCFI13:
 1548              		.cfi_def_cfa_offset 24
 1549              		.cfi_offset 3, -24
 1550              		.cfi_offset 4, -20
 1551              		.cfi_offset 5, -16
 1552              		.cfi_offset 6, -12
 1553              		.cfi_offset 7, -8
 1554              		.cfi_offset 14, -4
 1555 0002 041E     		subs	r4, r0, #0
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1556              		.loc 1 1758 2 is_stmt 1 view .LVU433
 1557              	.LVL147:
ARM GAS  /tmp/cctzmfqj.s 			page 119


1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1558              		.loc 1 1759 2 view .LVU434
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1559              		.loc 1 1760 2 view .LVU435
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1560              		.loc 1 1762 3 view .LVU436
 1561 0004 26D0     		beq	.L118
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1562              		.loc 1 1762 32 discriminator 2 view .LVU437
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1563              		.loc 1 1780 45 discriminator 2 view .LVU438
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1564              		.loc 1 1782 3 discriminator 2 view .LVU439
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1565              		.loc 1 1782 28 is_stmt 0 discriminator 2 view .LVU440
 1566 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1567              	.LVL148:
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1568              		.loc 1 1782 28 discriminator 2 view .LVU441
 1569 000a 0600     		movs	r6, r0
 1570              	.LVL149:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1571              		.loc 1 1784 4 is_stmt 1 discriminator 2 view .LVU442
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1572              		.loc 1 1784 8 is_stmt 0 discriminator 2 view .LVU443
 1573 000c 2000     		movs	r0, r4
 1574              	.LVL150:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1575              		.loc 1 1784 8 discriminator 2 view .LVU444
 1576 000e FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1577              	.LVL151:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1578              		.loc 1 1784 6 discriminator 2 view .LVU445
 1579 0012 0028     		cmp	r0, #0
 1580 0014 29D0     		beq	.L116
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1581              		.loc 1 1786 39 is_stmt 1 view .LVU446
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1582              		.loc 1 1789 5 view .LVU447
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1583              		.loc 1 1789 30 is_stmt 0 view .LVU448
 1584 0016 184B     		ldr	r3, .L119
 1585 0018 1B68     		ldr	r3, [r3]
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1586              		.loc 1 1789 7 view .LVU449
 1587 001a 002B     		cmp	r3, #0
 1588 001c 1ED1     		bne	.L113
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1589              		.loc 1 1793 6 is_stmt 1 view .LVU450
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1590              		.loc 1 1793 43 is_stmt 0 view .LVU451
 1591 001e 174B     		ldr	r3, .L119+4
 1592 0020 1B68     		ldr	r3, [r3]
 1593 0022 DB6A     		ldr	r3, [r3, #44]
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1594              		.loc 1 1793 8 view .LVU452
 1595 0024 E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/cctzmfqj.s 			page 120


 1596 0026 9A42     		cmp	r2, r3
 1597 0028 16D2     		bcs	.L117
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1598              		.loc 1 1758 13 view .LVU453
 1599 002a 0025     		movs	r5, #0
 1600              	.L114:
 1601              	.LVL152:
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1602              		.loc 1 1799 31 is_stmt 1 view .LVU454
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1603              		.loc 1 1802 6 view .LVU455
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1604              		.loc 1 1802 15 is_stmt 0 view .LVU456
 1605 002c 271D     		adds	r7, r4, #4
 1606 002e 3800     		movs	r0, r7
 1607 0030 FFF7FEFF 		bl	uxListRemove
 1608              	.LVL153:
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1609              		.loc 1 1803 6 is_stmt 1 view .LVU457
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1610              		.loc 1 1803 6 view .LVU458
 1611 0034 E26A     		ldr	r2, [r4, #44]
 1612 0036 124B     		ldr	r3, .L119+8
 1613 0038 1B68     		ldr	r3, [r3]
 1614 003a 9A42     		cmp	r2, r3
 1615 003c 01D9     		bls	.L115
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1616              		.loc 1 1803 6 discriminator 1 view .LVU459
 1617 003e 104B     		ldr	r3, .L119+8
 1618 0040 1A60     		str	r2, [r3]
 1619              	.L115:
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1620              		.loc 1 1803 6 discriminator 3 view .LVU460
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1621              		.loc 1 1803 6 discriminator 3 view .LVU461
 1622 0042 9300     		lsls	r3, r2, #2
 1623 0044 9B18     		adds	r3, r3, r2
 1624 0046 9800     		lsls	r0, r3, #2
 1625 0048 0E4B     		ldr	r3, .L119+12
 1626 004a C018     		adds	r0, r0, r3
 1627 004c 3900     		movs	r1, r7
 1628 004e FFF7FEFF 		bl	vListInsertEnd
 1629              	.LVL154:
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1630              		.loc 1 1803 36 discriminator 3 view .LVU462
 1631 0052 0BE0     		b	.L112
 1632              	.LVL155:
 1633              	.L118:
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1634              		.loc 1 1762 3 discriminator 1 view .LVU463
 1635              		.syntax divided
 1636              	@ 1762 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1637 0054 72B6     		 cpsid i 
 1638              	@ 0 "" 2
 1639              		.thumb
 1640              		.syntax unified
 1641              	.L111:
ARM GAS  /tmp/cctzmfqj.s 			page 121


1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1642              		.loc 1 1762 3 discriminator 1 view .LVU464
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1643              		.loc 1 1762 3 discriminator 1 view .LVU465
 1644 0056 FEE7     		b	.L111
 1645              	.LVL156:
 1646              	.L117:
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1647              		.loc 1 1795 22 is_stmt 0 view .LVU466
 1648 0058 0125     		movs	r5, #1
 1649 005a E7E7     		b	.L114
 1650              	.L113:
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1651              		.loc 1 1810 6 is_stmt 1 view .LVU467
 1652 005c 2100     		movs	r1, r4
 1653 005e 1831     		adds	r1, r1, #24
 1654 0060 0948     		ldr	r0, .L119+16
 1655 0062 FFF7FEFF 		bl	vListInsertEnd
 1656              	.LVL157:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1657              		.loc 1 1758 13 is_stmt 0 view .LVU468
 1658 0066 0025     		movs	r5, #0
 1659 0068 00E0     		b	.L112
 1660              	.L116:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1661              		.loc 1 1758 13 view .LVU469
 1662 006a 0025     		movs	r5, #0
 1663              	.LVL158:
 1664              	.L112:
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1665              		.loc 1 1815 29 is_stmt 1 view .LVU470
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1666              		.loc 1 1818 3 view .LVU471
 1667 006c 3000     		movs	r0, r6
 1668 006e FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1669              	.LVL159:
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1670              		.loc 1 1820 3 view .LVU472
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1671              		.loc 1 1821 2 is_stmt 0 view .LVU473
 1672 0072 2800     		movs	r0, r5
 1673              		@ sp needed
 1674              	.LVL160:
 1675              	.LVL161:
 1676              	.LVL162:
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1677              		.loc 1 1821 2 view .LVU474
 1678 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1679              	.L120:
 1680 0076 C046     		.align	2
 1681              	.L119:
 1682 0078 00000000 		.word	.LANCHOR15
 1683 007c 00000000 		.word	.LANCHOR9
 1684 0080 00000000 		.word	.LANCHOR12
 1685 0084 00000000 		.word	pxReadyTasksLists
 1686 0088 00000000 		.word	.LANCHOR1
 1687              		.cfi_endproc
ARM GAS  /tmp/cctzmfqj.s 			page 122


 1688              	.LFE11:
 1690              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1691              		.align	1
 1692              		.global	vTaskStartScheduler
 1693              		.syntax unified
 1694              		.code	16
 1695              		.thumb_func
 1696              		.fpu softvfp
 1698              	vTaskStartScheduler:
 1699              	.LFB12:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 1700              		.loc 1 1827 1 is_stmt 1 view -0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704 0000 00B5     		push	{lr}
 1705              	.LCFI14:
 1706              		.cfi_def_cfa_offset 4
 1707              		.cfi_offset 14, -4
 1708 0002 83B0     		sub	sp, sp, #12
 1709              	.LCFI15:
 1710              		.cfi_def_cfa_offset 16
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1711              		.loc 1 1828 1 view .LVU476
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1712              		.loc 1 1860 3 view .LVU477
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1713              		.loc 1 1860 13 is_stmt 0 view .LVU478
 1714 0004 0F4B     		ldr	r3, .L127
 1715 0006 0193     		str	r3, [sp, #4]
 1716 0008 0023     		movs	r3, #0
 1717 000a 0093     		str	r3, [sp]
 1718 000c 8022     		movs	r2, #128
 1719 000e 0E49     		ldr	r1, .L127+4
 1720 0010 0E48     		ldr	r0, .L127+8
 1721 0012 FFF7FEFF 		bl	xTaskCreate
 1722              	.LVL163:
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1723              		.loc 1 1881 2 is_stmt 1 view .LVU479
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1724              		.loc 1 1881 4 is_stmt 0 view .LVU480
 1725 0016 0128     		cmp	r0, #1
 1726 0018 03D0     		beq	.L125
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1727              		.loc 1 1924 3 is_stmt 1 view .LVU481
 1728 001a 431C     		adds	r3, r0, #1
 1729 001c 0FD0     		beq	.L126
 1730              	.LVL164:
 1731              	.L121:
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1732              		.loc 1 1930 1 is_stmt 0 view .LVU482
 1733 001e 03B0     		add	sp, sp, #12
 1734              		@ sp needed
 1735 0020 00BD     		pop	{pc}
 1736              	.LVL165:
 1737              	.L125:
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 123


 1738              		.loc 1 1888 3 is_stmt 1 view .LVU483
 1739              		.syntax divided
 1740              	@ 1888 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1741 0022 72B6     		 cpsid i 
 1742              	@ 0 "" 2
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1743              		.loc 1 1898 3 view .LVU484
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1744              		.loc 1 1898 24 is_stmt 0 view .LVU485
 1745              		.thumb
 1746              		.syntax unified
 1747 0024 0A4B     		ldr	r3, .L127+12
 1748 0026 0122     		movs	r2, #1
 1749 0028 5242     		rsbs	r2, r2, #0
 1750 002a 1A60     		str	r2, [r3]
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1751              		.loc 1 1899 3 is_stmt 1 view .LVU486
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1752              		.loc 1 1899 21 is_stmt 0 view .LVU487
 1753 002c 094B     		ldr	r3, .L127+16
 1754 002e 0232     		adds	r2, r2, #2
 1755 0030 1A60     		str	r2, [r3]
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1756              		.loc 1 1900 3 is_stmt 1 view .LVU488
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1757              		.loc 1 1900 14 is_stmt 0 view .LVU489
 1758 0032 094B     		ldr	r3, .L127+20
 1759 0034 0022     		movs	r2, #0
 1760 0036 1A60     		str	r2, [r3]
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1761              		.loc 1 1905 43 is_stmt 1 view .LVU490
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1762              		.loc 1 1909 3 view .LVU491
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1763              		.loc 1 1909 7 is_stmt 0 view .LVU492
 1764 0038 FFF7FEFF 		bl	xPortStartScheduler
 1765              	.LVL166:
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1766              		.loc 1 1909 7 view .LVU493
 1767 003c EFE7     		b	.L121
 1768              	.LVL167:
 1769              	.L126:
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1770              		.loc 1 1924 3 is_stmt 1 discriminator 1 view .LVU494
 1771              		.syntax divided
 1772              	@ 1924 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1773 003e 72B6     		 cpsid i 
 1774              	@ 0 "" 2
 1775              		.thumb
 1776              		.syntax unified
 1777              	.L124:
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1778              		.loc 1 1924 3 discriminator 2 view .LVU495
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1779              		.loc 1 1924 3 discriminator 2 view .LVU496
 1780 0040 FEE7     		b	.L124
 1781              	.L128:
ARM GAS  /tmp/cctzmfqj.s 			page 124


 1782 0042 C046     		.align	2
 1783              	.L127:
 1784 0044 00000000 		.word	.LANCHOR16
 1785 0048 00000000 		.word	.LC44
 1786 004c 00000000 		.word	prvIdleTask
 1787 0050 00000000 		.word	.LANCHOR3
 1788 0054 00000000 		.word	.LANCHOR10
 1789 0058 00000000 		.word	.LANCHOR13
 1790              		.cfi_endproc
 1791              	.LFE12:
 1793              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1794              		.align	1
 1795              		.global	vTaskEndScheduler
 1796              		.syntax unified
 1797              		.code	16
 1798              		.thumb_func
 1799              		.fpu softvfp
 1801              	vTaskEndScheduler:
 1802              	.LFB13:
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1803              		.loc 1 1934 1 view -0
 1804              		.cfi_startproc
 1805              		@ args = 0, pretend = 0, frame = 0
 1806              		@ frame_needed = 0, uses_anonymous_args = 0
 1807 0000 10B5     		push	{r4, lr}
 1808              	.LCFI16:
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 4, -8
 1811              		.cfi_offset 14, -4
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1812              		.loc 1 1938 2 view .LVU498
 1813              		.syntax divided
 1814              	@ 1938 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1815 0002 72B6     		 cpsid i 
 1816              	@ 0 "" 2
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1817              		.loc 1 1939 2 view .LVU499
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1818              		.loc 1 1939 20 is_stmt 0 view .LVU500
 1819              		.thumb
 1820              		.syntax unified
 1821 0004 024B     		ldr	r3, .L130
 1822 0006 0022     		movs	r2, #0
 1823 0008 1A60     		str	r2, [r3]
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1824              		.loc 1 1940 2 is_stmt 1 view .LVU501
 1825 000a FFF7FEFF 		bl	vPortEndScheduler
 1826              	.LVL168:
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 1827              		.loc 1 1941 1 is_stmt 0 view .LVU502
 1828              		@ sp needed
 1829 000e 10BD     		pop	{r4, pc}
 1830              	.L131:
 1831              		.align	2
 1832              	.L130:
 1833 0010 00000000 		.word	.LANCHOR10
 1834              		.cfi_endproc
ARM GAS  /tmp/cctzmfqj.s 			page 125


 1835              	.LFE13:
 1837              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1838              		.align	1
 1839              		.global	vTaskSuspendAll
 1840              		.syntax unified
 1841              		.code	16
 1842              		.thumb_func
 1843              		.fpu softvfp
 1845              	vTaskSuspendAll:
 1846              	.LFB14:
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1847              		.loc 1 1945 1 is_stmt 1 view -0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
 1851              		@ link register save eliminated.
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1852              		.loc 1 1950 2 view .LVU504
 1853 0000 024A     		ldr	r2, .L133
 1854 0002 1368     		ldr	r3, [r2]
 1855 0004 0133     		adds	r3, r3, #1
 1856 0006 1360     		str	r3, [r2]
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 1857              		.loc 1 1951 1 is_stmt 0 view .LVU505
 1858              		@ sp needed
 1859 0008 7047     		bx	lr
 1860              	.L134:
 1861 000a C046     		.align	2
 1862              	.L133:
 1863 000c 00000000 		.word	.LANCHOR15
 1864              		.cfi_endproc
 1865              	.LFE14:
 1867              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1868              		.align	1
 1869              		.global	xTaskGetTickCount
 1870              		.syntax unified
 1871              		.code	16
 1872              		.thumb_func
 1873              		.fpu softvfp
 1875              	xTaskGetTickCount:
 1876              	.LFB16:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 1877              		.loc 1 2128 1 is_stmt 1 view -0
 1878              		.cfi_startproc
 1879              		@ args = 0, pretend = 0, frame = 0
 1880              		@ frame_needed = 0, uses_anonymous_args = 0
 1881              		@ link register save eliminated.
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1882              		.loc 1 2129 1 view .LVU507
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1883              		.loc 1 2132 32 view .LVU508
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1884              		.loc 1 2134 3 view .LVU509
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1885              		.loc 1 2134 10 is_stmt 0 view .LVU510
 1886 0000 014B     		ldr	r3, .L136
 1887 0002 1868     		ldr	r0, [r3]
ARM GAS  /tmp/cctzmfqj.s 			page 126


 1888              	.LVL169:
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1889              		.loc 1 2136 31 is_stmt 1 view .LVU511
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1890              		.loc 1 2138 2 view .LVU512
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1891              		.loc 1 2139 1 is_stmt 0 view .LVU513
 1892              		@ sp needed
 1893 0004 7047     		bx	lr
 1894              	.L137:
 1895 0006 C046     		.align	2
 1896              	.L136:
 1897 0008 00000000 		.word	.LANCHOR13
 1898              		.cfi_endproc
 1899              	.LFE16:
 1901              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1902              		.align	1
 1903              		.global	xTaskGetTickCountFromISR
 1904              		.syntax unified
 1905              		.code	16
 1906              		.thumb_func
 1907              		.fpu softvfp
 1909              	xTaskGetTickCountFromISR:
 1910              	.LFB17:
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 1911              		.loc 1 2143 1 is_stmt 1 view -0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              		@ link register save eliminated.
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 1916              		.loc 1 2144 1 view .LVU515
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1917              		.loc 1 2145 1 view .LVU516
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1918              		.loc 1 2161 44 view .LVU517
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1919              		.loc 1 2163 2 view .LVU518
 1920              	.LVL170:
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1921              		.loc 1 2165 3 view .LVU519
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1922              		.loc 1 2165 11 is_stmt 0 view .LVU520
 1923 0000 014B     		ldr	r3, .L139
 1924 0002 1868     		ldr	r0, [r3]
 1925              	.LVL171:
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1926              		.loc 1 2167 2 is_stmt 1 view .LVU521
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1927              		.loc 1 2169 2 view .LVU522
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1928              		.loc 1 2170 1 is_stmt 0 view .LVU523
 1929              		@ sp needed
 1930 0004 7047     		bx	lr
 1931              	.L140:
 1932 0006 C046     		.align	2
 1933              	.L139:
ARM GAS  /tmp/cctzmfqj.s 			page 127


 1934 0008 00000000 		.word	.LANCHOR13
 1935              		.cfi_endproc
 1936              	.LFE17:
 1938              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1939              		.align	1
 1940              		.global	uxTaskGetNumberOfTasks
 1941              		.syntax unified
 1942              		.code	16
 1943              		.thumb_func
 1944              		.fpu softvfp
 1946              	uxTaskGetNumberOfTasks:
 1947              	.LFB18:
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1948              		.loc 1 2174 1 is_stmt 1 view -0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              		@ link register save eliminated.
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1953              		.loc 1 2177 2 view .LVU525
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1954              		.loc 1 2177 9 is_stmt 0 view .LVU526
 1955 0000 014B     		ldr	r3, .L142
 1956 0002 1868     		ldr	r0, [r3]
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1957              		.loc 1 2178 1 view .LVU527
 1958              		@ sp needed
 1959 0004 7047     		bx	lr
 1960              	.L143:
 1961 0006 C046     		.align	2
 1962              	.L142:
 1963 0008 00000000 		.word	.LANCHOR8
 1964              		.cfi_endproc
 1965              	.LFE18:
 1967              		.section	.text.pcTaskGetName,"ax",%progbits
 1968              		.align	1
 1969              		.global	pcTaskGetName
 1970              		.syntax unified
 1971              		.code	16
 1972              		.thumb_func
 1973              		.fpu softvfp
 1975              	pcTaskGetName:
 1976              	.LVL172:
 1977              	.LFB19:
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 1978              		.loc 1 2182 1 is_stmt 1 view -0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
 1982              		@ link register save eliminated.
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1983              		.loc 1 2183 1 view .LVU529
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 1984              		.loc 1 2187 2 view .LVU530
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 1985              		.loc 1 2187 10 is_stmt 0 view .LVU531
 1986 0000 0028     		cmp	r0, #0
ARM GAS  /tmp/cctzmfqj.s 			page 128


 1987 0002 03D0     		beq	.L148
 1988              	.LVL173:
 1989              	.L145:
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1990              		.loc 1 2188 2 is_stmt 1 discriminator 4 view .LVU532
 1991 0004 0028     		cmp	r0, #0
 1992 0006 04D0     		beq	.L149
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1993              		.loc 1 2188 23 discriminator 2 view .LVU533
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1994              		.loc 1 2189 2 discriminator 2 view .LVU534
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1995              		.loc 1 2189 9 is_stmt 0 discriminator 2 view .LVU535
 1996 0008 3430     		adds	r0, r0, #52
 1997              	.LVL174:
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1998              		.loc 1 2190 1 discriminator 2 view .LVU536
 1999              		@ sp needed
 2000 000a 7047     		bx	lr
 2001              	.LVL175:
 2002              	.L148:
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2003              		.loc 1 2187 10 discriminator 1 view .LVU537
 2004 000c 024B     		ldr	r3, .L150
 2005 000e 1868     		ldr	r0, [r3]
 2006              	.LVL176:
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2007              		.loc 1 2187 10 discriminator 1 view .LVU538
 2008 0010 F8E7     		b	.L145
 2009              	.LVL177:
 2010              	.L149:
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2011              		.loc 1 2188 2 is_stmt 1 discriminator 1 view .LVU539
 2012              		.syntax divided
 2013              	@ 2188 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2014 0012 72B6     		 cpsid i 
 2015              	@ 0 "" 2
 2016              		.thumb
 2017              		.syntax unified
 2018              	.L147:
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2019              		.loc 1 2188 2 discriminator 1 view .LVU540
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2020              		.loc 1 2188 2 discriminator 1 view .LVU541
 2021 0014 FEE7     		b	.L147
 2022              	.L151:
 2023 0016 C046     		.align	2
 2024              	.L150:
 2025 0018 00000000 		.word	.LANCHOR9
 2026              		.cfi_endproc
 2027              	.LFE19:
 2029              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2030              		.align	1
 2031              		.global	xTaskIncrementTick
 2032              		.syntax unified
 2033              		.code	16
 2034              		.thumb_func
ARM GAS  /tmp/cctzmfqj.s 			page 129


 2035              		.fpu softvfp
 2037              	xTaskIncrementTick:
 2038              	.LFB20:
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2039              		.loc 1 2500 1 view -0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 0, uses_anonymous_args = 0
 2043 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2044              	.LCFI17:
 2045              		.cfi_def_cfa_offset 24
 2046              		.cfi_offset 3, -24
 2047              		.cfi_offset 4, -20
 2048              		.cfi_offset 5, -16
 2049              		.cfi_offset 6, -12
 2050              		.cfi_offset 7, -8
 2051              		.cfi_offset 14, -4
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2052              		.loc 1 2501 1 view .LVU543
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2053              		.loc 1 2502 1 view .LVU544
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2054              		.loc 1 2503 1 view .LVU545
 2055              	.LVL178:
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2056              		.loc 1 2508 40 view .LVU546
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2057              		.loc 1 2509 2 view .LVU547
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2058              		.loc 1 2509 27 is_stmt 0 view .LVU548
 2059 0002 394B     		ldr	r3, .L173
 2060 0004 1B68     		ldr	r3, [r3]
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2061              		.loc 1 2509 4 view .LVU549
 2062 0006 002B     		cmp	r3, #0
 2063 0008 61D1     		bne	.L153
 2064              	.LBB4:
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2065              		.loc 1 2513 3 is_stmt 1 view .LVU550
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2066              		.loc 1 2513 49 is_stmt 0 view .LVU551
 2067 000a 384B     		ldr	r3, .L173+4
 2068 000c 1D68     		ldr	r5, [r3]
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2069              		.loc 1 2513 20 view .LVU552
 2070 000e 0135     		adds	r5, r5, #1
 2071              	.LVL179:
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2072              		.loc 1 2517 3 is_stmt 1 view .LVU553
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2073              		.loc 1 2517 14 is_stmt 0 view .LVU554
 2074 0010 1D60     		str	r5, [r3]
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2075              		.loc 1 2519 3 is_stmt 1 view .LVU555
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2076              		.loc 1 2519 5 is_stmt 0 view .LVU556
 2077 0012 002D     		cmp	r5, #0
ARM GAS  /tmp/cctzmfqj.s 			page 130


 2078 0014 12D1     		bne	.L154
 2079              	.LBB5:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2080              		.loc 1 2521 4 is_stmt 1 view .LVU557
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2081              		.loc 1 2521 4 view .LVU558
 2082 0016 364B     		ldr	r3, .L173+8
 2083 0018 1B68     		ldr	r3, [r3]
 2084 001a 1B68     		ldr	r3, [r3]
 2085 001c 002B     		cmp	r3, #0
 2086 001e 01D0     		beq	.L155
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2087              		.loc 1 2521 4 discriminator 1 view .LVU559
 2088              		.syntax divided
 2089              	@ 2521 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2090 0020 72B6     		 cpsid i 
 2091              	@ 0 "" 2
 2092              		.thumb
 2093              		.syntax unified
 2094              	.L156:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2095              		.loc 1 2521 4 discriminator 1 view .LVU560
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2096              		.loc 1 2521 4 discriminator 1 view .LVU561
 2097 0022 FEE7     		b	.L156
 2098              	.L155:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2099              		.loc 1 2521 4 discriminator 2 view .LVU562
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2100              		.loc 1 2521 4 discriminator 2 view .LVU563
 2101 0024 324A     		ldr	r2, .L173+8
 2102 0026 1168     		ldr	r1, [r2]
 2103              	.LVL180:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2104              		.loc 1 2521 4 discriminator 2 view .LVU564
 2105 0028 324B     		ldr	r3, .L173+12
 2106 002a 1868     		ldr	r0, [r3]
 2107 002c 1060     		str	r0, [r2]
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2108              		.loc 1 2521 4 discriminator 2 view .LVU565
 2109 002e 1960     		str	r1, [r3]
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2110              		.loc 1 2521 4 discriminator 2 view .LVU566
 2111 0030 314A     		ldr	r2, .L173+16
 2112 0032 1368     		ldr	r3, [r2]
 2113 0034 0133     		adds	r3, r3, #1
 2114 0036 1360     		str	r3, [r2]
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2115              		.loc 1 2521 4 discriminator 2 view .LVU567
 2116 0038 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2117              	.LVL181:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2118              		.loc 1 2521 4 is_stmt 0 discriminator 2 view .LVU568
 2119              	.LBE5:
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2120              		.loc 1 2521 30 is_stmt 1 discriminator 2 view .LVU569
 2121              	.L154:
ARM GAS  /tmp/cctzmfqj.s 			page 131


2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2122              		.loc 1 2525 28 view .LVU570
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2123              		.loc 1 2532 3 view .LVU571
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2124              		.loc 1 2532 23 is_stmt 0 view .LVU572
 2125 003c 2F4B     		ldr	r3, .L173+20
 2126 003e 1B68     		ldr	r3, [r3]
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2127              		.loc 1 2532 5 view .LVU573
 2128 0040 AB42     		cmp	r3, r5
 2129 0042 0CD9     		bls	.L167
 2130              	.LBE4:
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2131              		.loc 1 2503 12 view .LVU574
 2132 0044 0024     		movs	r4, #0
 2133              	.LVL182:
 2134              	.L158:
 2135              	.LBB6:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2136              		.loc 1 2615 4 is_stmt 1 view .LVU575
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2137              		.loc 1 2615 8 is_stmt 0 view .LVU576
 2138 0046 2E4B     		ldr	r3, .L173+24
 2139 0048 1B68     		ldr	r3, [r3]
 2140 004a DA6A     		ldr	r2, [r3, #44]
 2141 004c 9300     		lsls	r3, r2, #2
 2142 004e 9B18     		adds	r3, r3, r2
 2143 0050 9A00     		lsls	r2, r3, #2
 2144 0052 2C4B     		ldr	r3, .L173+28
 2145 0054 D358     		ldr	r3, [r2, r3]
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2146              		.loc 1 2615 6 view .LVU577
 2147 0056 012B     		cmp	r3, #1
 2148 0058 3ED9     		bls	.L165
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2149              		.loc 1 2617 21 view .LVU578
 2150 005a 0124     		movs	r4, #1
 2151              	.LVL183:
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2152              		.loc 1 2617 21 view .LVU579
 2153 005c 3CE0     		b	.L165
 2154              	.LVL184:
 2155              	.L167:
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2156              		.loc 1 2617 21 view .LVU580
 2157              	.LBE6:
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2158              		.loc 1 2503 12 view .LVU581
 2159 005e 0024     		movs	r4, #0
 2160 0060 16E0     		b	.L157
 2161              	.LVL185:
 2162              	.L171:
 2163              	.LBB7:
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2164              		.loc 1 2543 6 is_stmt 1 view .LVU582
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
ARM GAS  /tmp/cctzmfqj.s 			page 132


 2165              		.loc 1 2543 27 is_stmt 0 view .LVU583
 2166 0062 264B     		ldr	r3, .L173+20
 2167 0064 0122     		movs	r2, #1
 2168 0066 5242     		rsbs	r2, r2, #0
 2169 0068 1A60     		str	r2, [r3]
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2170              		.loc 1 2544 6 is_stmt 1 view .LVU584
 2171 006a ECE7     		b	.L158
 2172              	.LVL186:
 2173              	.L172:
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2174              		.loc 1 2562 7 view .LVU585
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2175              		.loc 1 2562 28 is_stmt 0 view .LVU586
 2176 006c 234A     		ldr	r2, .L173+20
 2177 006e 1360     		str	r3, [r2]
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2178              		.loc 1 2563 7 is_stmt 1 view .LVU587
 2179 0070 E9E7     		b	.L158
 2180              	.LVL187:
 2181              	.L162:
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2182              		.loc 1 2586 6 discriminator 3 view .LVU588
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2183              		.loc 1 2586 6 discriminator 3 view .LVU589
 2184 0072 9300     		lsls	r3, r2, #2
 2185 0074 9B18     		adds	r3, r3, r2
 2186 0076 9800     		lsls	r0, r3, #2
 2187 0078 224B     		ldr	r3, .L173+28
 2188 007a C018     		adds	r0, r0, r3
 2189 007c 3900     		movs	r1, r7
 2190 007e FFF7FEFF 		bl	vListInsertEnd
 2191              	.LVL188:
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2192              		.loc 1 2586 36 discriminator 3 view .LVU590
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2193              		.loc 1 2596 7 discriminator 3 view .LVU591
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2194              		.loc 1 2596 16 is_stmt 0 discriminator 3 view .LVU592
 2195 0082 F26A     		ldr	r2, [r6, #44]
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2196              		.loc 1 2596 44 discriminator 3 view .LVU593
 2197 0084 1E4B     		ldr	r3, .L173+24
 2198 0086 1B68     		ldr	r3, [r3]
 2199 0088 DB6A     		ldr	r3, [r3, #44]
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2200              		.loc 1 2596 9 discriminator 3 view .LVU594
 2201 008a 9A42     		cmp	r2, r3
 2202 008c 00D3     		bcc	.L157
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2203              		.loc 1 2598 24 view .LVU595
 2204 008e 0124     		movs	r4, #1
 2205              	.LVL189:
 2206              	.L157:
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2207              		.loc 1 2534 4 is_stmt 1 view .LVU596
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cctzmfqj.s 			page 133


 2208              		.loc 1 2536 5 view .LVU597
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2209              		.loc 1 2536 9 is_stmt 0 view .LVU598
 2210 0090 174B     		ldr	r3, .L173+8
 2211 0092 1B68     		ldr	r3, [r3]
 2212 0094 1B68     		ldr	r3, [r3]
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2213              		.loc 1 2536 48 view .LVU599
 2214 0096 002B     		cmp	r3, #0
 2215 0098 E3D0     		beq	.L171
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2216              		.loc 1 2552 6 is_stmt 1 view .LVU600
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2217              		.loc 1 2552 26 is_stmt 0 view .LVU601
 2218 009a 154B     		ldr	r3, .L173+8
 2219 009c 1B68     		ldr	r3, [r3]
 2220 009e DB68     		ldr	r3, [r3, #12]
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2221              		.loc 1 2552 12 view .LVU602
 2222 00a0 DE68     		ldr	r6, [r3, #12]
 2223              	.LVL190:
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2224              		.loc 1 2553 6 is_stmt 1 view .LVU603
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2225              		.loc 1 2553 17 is_stmt 0 view .LVU604
 2226 00a2 7368     		ldr	r3, [r6, #4]
 2227              	.LVL191:
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2228              		.loc 1 2555 6 is_stmt 1 view .LVU605
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2229              		.loc 1 2555 8 is_stmt 0 view .LVU606
 2230 00a4 9D42     		cmp	r5, r3
 2231 00a6 E1D3     		bcc	.L172
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2232              		.loc 1 2567 31 is_stmt 1 view .LVU607
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2233              		.loc 1 2571 6 view .LVU608
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2234              		.loc 1 2571 15 is_stmt 0 view .LVU609
 2235 00a8 371D     		adds	r7, r6, #4
 2236 00aa 3800     		movs	r0, r7
 2237 00ac FFF7FEFF 		bl	uxListRemove
 2238              	.LVL192:
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2239              		.loc 1 2575 6 is_stmt 1 view .LVU610
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2240              		.loc 1 2575 8 is_stmt 0 view .LVU611
 2241 00b0 B36A     		ldr	r3, [r6, #40]
 2242 00b2 002B     		cmp	r3, #0
 2243 00b4 03D0     		beq	.L161
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2244              		.loc 1 2577 7 is_stmt 1 view .LVU612
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2245              		.loc 1 2577 16 is_stmt 0 view .LVU613
 2246 00b6 3000     		movs	r0, r6
 2247 00b8 1830     		adds	r0, r0, #24
 2248 00ba FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/cctzmfqj.s 			page 134


 2249              	.LVL193:
 2250              	.L161:
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2251              		.loc 1 2581 31 is_stmt 1 view .LVU614
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2252              		.loc 1 2586 6 view .LVU615
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2253              		.loc 1 2586 6 view .LVU616
 2254 00be F26A     		ldr	r2, [r6, #44]
 2255 00c0 114B     		ldr	r3, .L173+32
 2256 00c2 1B68     		ldr	r3, [r3]
 2257 00c4 9A42     		cmp	r2, r3
 2258 00c6 D4D9     		bls	.L162
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2259              		.loc 1 2586 6 discriminator 1 view .LVU617
 2260 00c8 0F4B     		ldr	r3, .L173+32
 2261 00ca 1A60     		str	r2, [r3]
 2262 00cc D1E7     		b	.L162
 2263              	.LVL194:
 2264              	.L153:
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2265              		.loc 1 2586 6 is_stmt 0 discriminator 1 view .LVU618
 2266              	.LBE7:
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2267              		.loc 1 2643 3 is_stmt 1 view .LVU619
 2268 00ce 0F4A     		ldr	r2, .L173+36
 2269 00d0 1368     		ldr	r3, [r2]
 2270 00d2 0133     		adds	r3, r3, #1
 2271 00d4 1360     		str	r3, [r2]
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2272              		.loc 1 2503 12 is_stmt 0 view .LVU620
 2273 00d6 0024     		movs	r4, #0
 2274              	.LVL195:
 2275              	.L165:
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2276              		.loc 1 2656 3 is_stmt 1 view .LVU621
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2277              		.loc 1 2656 21 is_stmt 0 view .LVU622
 2278 00d8 0D4B     		ldr	r3, .L173+40
 2279 00da 1B68     		ldr	r3, [r3]
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2280              		.loc 1 2656 5 view .LVU623
 2281 00dc 002B     		cmp	r3, #0
 2282 00de 00D0     		beq	.L152
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2283              		.loc 1 2658 20 view .LVU624
 2284 00e0 0124     		movs	r4, #1
 2285              	.LVL196:
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2286              		.loc 1 2662 28 is_stmt 1 view .LVU625
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2287              		.loc 1 2667 2 view .LVU626
 2288              	.L152:
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2289              		.loc 1 2668 1 is_stmt 0 view .LVU627
 2290 00e2 2000     		movs	r0, r4
 2291              		@ sp needed
ARM GAS  /tmp/cctzmfqj.s 			page 135


 2292 00e4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2293              	.L174:
 2294 00e6 C046     		.align	2
 2295              	.L173:
 2296 00e8 00000000 		.word	.LANCHOR15
 2297 00ec 00000000 		.word	.LANCHOR13
 2298 00f0 00000000 		.word	.LANCHOR2
 2299 00f4 00000000 		.word	.LANCHOR7
 2300 00f8 00000000 		.word	.LANCHOR17
 2301 00fc 00000000 		.word	.LANCHOR3
 2302 0100 00000000 		.word	.LANCHOR9
 2303 0104 00000000 		.word	pxReadyTasksLists
 2304 0108 00000000 		.word	.LANCHOR12
 2305 010c 00000000 		.word	.LANCHOR18
 2306 0110 00000000 		.word	.LANCHOR19
 2307              		.cfi_endproc
 2308              	.LFE20:
 2310              		.section	.text.xTaskResumeAll,"ax",%progbits
 2311              		.align	1
 2312              		.global	xTaskResumeAll
 2313              		.syntax unified
 2314              		.code	16
 2315              		.thumb_func
 2316              		.fpu softvfp
 2318              	xTaskResumeAll:
 2319              	.LFB15:
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2320              		.loc 1 2018 1 is_stmt 1 view -0
 2321              		.cfi_startproc
 2322              		@ args = 0, pretend = 0, frame = 0
 2323              		@ frame_needed = 0, uses_anonymous_args = 0
 2324 0000 70B5     		push	{r4, r5, r6, lr}
 2325              	.LCFI18:
 2326              		.cfi_def_cfa_offset 16
 2327              		.cfi_offset 4, -16
 2328              		.cfi_offset 5, -12
 2329              		.cfi_offset 6, -8
 2330              		.cfi_offset 14, -4
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2331              		.loc 1 2019 1 view .LVU629
 2332              	.LVL197:
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2333              		.loc 1 2020 1 view .LVU630
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2334              		.loc 1 2024 2 view .LVU631
 2335 0002 324B     		ldr	r3, .L193
 2336 0004 1B68     		ldr	r3, [r3]
 2337 0006 002B     		cmp	r3, #0
 2338 0008 01D1     		bne	.L176
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2339              		.loc 1 2024 2 discriminator 1 view .LVU632
 2340              		.syntax divided
 2341              	@ 2024 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2342 000a 72B6     		 cpsid i 
 2343              	@ 0 "" 2
 2344              		.thumb
 2345              		.syntax unified
ARM GAS  /tmp/cctzmfqj.s 			page 136


 2346              	.L177:
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2347              		.loc 1 2024 2 discriminator 1 view .LVU633
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2348              		.loc 1 2024 2 discriminator 1 view .LVU634
 2349 000c FEE7     		b	.L177
 2350              	.L176:
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2351              		.loc 1 2024 38 discriminator 2 view .LVU635
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2352              		.loc 1 2031 2 discriminator 2 view .LVU636
 2353 000e FFF7FEFF 		bl	vPortEnterCritical
 2354              	.LVL198:
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2355              		.loc 1 2033 3 discriminator 2 view .LVU637
 2356 0012 2E4B     		ldr	r3, .L193
 2357 0014 1A68     		ldr	r2, [r3]
 2358 0016 013A     		subs	r2, r2, #1
 2359 0018 1A60     		str	r2, [r3]
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2360              		.loc 1 2035 3 discriminator 2 view .LVU638
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2361              		.loc 1 2035 28 is_stmt 0 discriminator 2 view .LVU639
 2362 001a 1B68     		ldr	r3, [r3]
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2363              		.loc 1 2035 5 discriminator 2 view .LVU640
 2364 001c 002B     		cmp	r3, #0
 2365 001e 4FD1     		bne	.L187
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2366              		.loc 1 2037 4 is_stmt 1 view .LVU641
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2367              		.loc 1 2037 31 is_stmt 0 view .LVU642
 2368 0020 2B4B     		ldr	r3, .L193+4
 2369 0022 1B68     		ldr	r3, [r3]
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2370              		.loc 1 2037 6 view .LVU643
 2371 0024 002B     		cmp	r3, #0
 2372 0026 01D1     		bne	.L188
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2373              		.loc 1 2020 12 view .LVU644
 2374 0028 0024     		movs	r4, #0
 2375 002a 4AE0     		b	.L178
 2376              	.L188:
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2377              		.loc 1 2019 8 view .LVU645
 2378 002c 0024     		movs	r4, #0
 2379              	.LVL199:
 2380              	.L179:
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2381              		.loc 1 2056 31 is_stmt 1 view .LVU646
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2382              		.loc 1 2041 12 is_stmt 0 view .LVU647
 2383 002e 294B     		ldr	r3, .L193+8
 2384 0030 1B68     		ldr	r3, [r3]
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2385              		.loc 1 2041 10 view .LVU648
 2386 0032 002B     		cmp	r3, #0
ARM GAS  /tmp/cctzmfqj.s 			page 137


 2387 0034 23D0     		beq	.L190
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2388              		.loc 1 2043 6 is_stmt 1 view .LVU649
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2389              		.loc 1 2043 26 is_stmt 0 view .LVU650
 2390 0036 274B     		ldr	r3, .L193+8
 2391 0038 DB68     		ldr	r3, [r3, #12]
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2392              		.loc 1 2043 12 view .LVU651
 2393 003a DC68     		ldr	r4, [r3, #12]
 2394              	.LVL200:
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2395              		.loc 1 2044 6 is_stmt 1 view .LVU652
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2396              		.loc 1 2044 15 is_stmt 0 view .LVU653
 2397 003c 2000     		movs	r0, r4
 2398 003e 1830     		adds	r0, r0, #24
 2399 0040 FFF7FEFF 		bl	uxListRemove
 2400              	.LVL201:
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2401              		.loc 1 2045 6 is_stmt 1 view .LVU654
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2402              		.loc 1 2045 15 is_stmt 0 view .LVU655
 2403 0044 251D     		adds	r5, r4, #4
 2404 0046 2800     		movs	r0, r5
 2405 0048 FFF7FEFF 		bl	uxListRemove
 2406              	.LVL202:
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2407              		.loc 1 2046 6 is_stmt 1 view .LVU656
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2408              		.loc 1 2046 6 view .LVU657
 2409 004c E26A     		ldr	r2, [r4, #44]
 2410 004e 224B     		ldr	r3, .L193+12
 2411 0050 1B68     		ldr	r3, [r3]
 2412 0052 9A42     		cmp	r2, r3
 2413 0054 01D9     		bls	.L180
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2414              		.loc 1 2046 6 discriminator 1 view .LVU658
 2415 0056 204B     		ldr	r3, .L193+12
 2416 0058 1A60     		str	r2, [r3]
 2417              	.L180:
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2418              		.loc 1 2046 6 discriminator 3 view .LVU659
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2419              		.loc 1 2046 6 discriminator 3 view .LVU660
 2420 005a 9300     		lsls	r3, r2, #2
 2421 005c 9B18     		adds	r3, r3, r2
 2422 005e 9800     		lsls	r0, r3, #2
 2423 0060 1E4B     		ldr	r3, .L193+16
 2424 0062 C018     		adds	r0, r0, r3
 2425 0064 2900     		movs	r1, r5
 2426 0066 FFF7FEFF 		bl	vListInsertEnd
 2427              	.LVL203:
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2428              		.loc 1 2046 36 discriminator 3 view .LVU661
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2429              		.loc 1 2050 6 discriminator 3 view .LVU662
ARM GAS  /tmp/cctzmfqj.s 			page 138


2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2430              		.loc 1 2050 43 is_stmt 0 discriminator 3 view .LVU663
 2431 006a 1D4B     		ldr	r3, .L193+20
 2432 006c 1B68     		ldr	r3, [r3]
 2433 006e DB6A     		ldr	r3, [r3, #44]
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2434              		.loc 1 2050 8 discriminator 3 view .LVU664
 2435 0070 E26A     		ldr	r2, [r4, #44]
 2436 0072 9A42     		cmp	r2, r3
 2437 0074 DBD3     		bcc	.L179
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2438              		.loc 1 2052 7 is_stmt 1 view .LVU665
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2439              		.loc 1 2052 21 is_stmt 0 view .LVU666
 2440 0076 1B4B     		ldr	r3, .L193+24
 2441 0078 0122     		movs	r2, #1
 2442 007a 1A60     		str	r2, [r3]
 2443 007c D7E7     		b	.L179
 2444              	.L190:
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2445              		.loc 1 2060 5 is_stmt 1 view .LVU667
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2446              		.loc 1 2060 7 is_stmt 0 view .LVU668
 2447 007e 002C     		cmp	r4, #0
 2448 0080 01D0     		beq	.L183
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2449              		.loc 1 2068 6 is_stmt 1 view .LVU669
 2450 0082 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2451              	.LVL204:
 2452              	.L183:
 2453              	.LBB8:
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2454              		.loc 1 2076 6 view .LVU670
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2455              		.loc 1 2076 18 is_stmt 0 view .LVU671
 2456 0086 184B     		ldr	r3, .L193+28
 2457 0088 1C68     		ldr	r4, [r3]
 2458              	.LVL205:
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2459              		.loc 1 2078 6 is_stmt 1 view .LVU672
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2460              		.loc 1 2078 8 is_stmt 0 view .LVU673
 2461 008a 002C     		cmp	r4, #0
 2462 008c 08D1     		bne	.L186
 2463              	.L184:
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2464              		.loc 1 2097 31 is_stmt 1 view .LVU674
 2465              	.LBE8:
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2466              		.loc 1 2101 5 view .LVU675
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2467              		.loc 1 2101 23 is_stmt 0 view .LVU676
 2468 008e 154B     		ldr	r3, .L193+24
 2469 0090 1B68     		ldr	r3, [r3]
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2470              		.loc 1 2101 7 view .LVU677
 2471 0092 002B     		cmp	r3, #0
ARM GAS  /tmp/cctzmfqj.s 			page 139


 2472 0094 10D1     		bne	.L191
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2473              		.loc 1 2020 12 view .LVU678
 2474 0096 0024     		movs	r4, #0
 2475              	.LVL206:
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2476              		.loc 1 2020 12 view .LVU679
 2477 0098 13E0     		b	.L178
 2478              	.LVL207:
 2479              	.L185:
 2480              	.LBB9:
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2481              		.loc 1 2088 33 is_stmt 1 view .LVU680
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2482              		.loc 1 2090 8 view .LVU681
 2483 009a 013C     		subs	r4, r4, #1
 2484              	.LVL208:
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2485              		.loc 1 2091 7 is_stmt 0 view .LVU682
 2486 009c 002C     		cmp	r4, #0
 2487 009e 07D0     		beq	.L192
 2488              	.L186:
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2489              		.loc 1 2080 7 is_stmt 1 view .LVU683
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2490              		.loc 1 2082 8 view .LVU684
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2491              		.loc 1 2082 12 is_stmt 0 view .LVU685
 2492 00a0 FFF7FEFF 		bl	xTaskIncrementTick
 2493              	.LVL209:
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2494              		.loc 1 2082 10 view .LVU686
 2495 00a4 0028     		cmp	r0, #0
 2496 00a6 F8D0     		beq	.L185
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2497              		.loc 1 2084 9 is_stmt 1 view .LVU687
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2498              		.loc 1 2084 23 is_stmt 0 view .LVU688
 2499 00a8 0E4B     		ldr	r3, .L193+24
 2500 00aa 0122     		movs	r2, #1
 2501 00ac 1A60     		str	r2, [r3]
 2502 00ae F4E7     		b	.L185
 2503              	.L192:
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2504              		.loc 1 2093 7 is_stmt 1 view .LVU689
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2505              		.loc 1 2093 21 is_stmt 0 view .LVU690
 2506 00b0 0D4B     		ldr	r3, .L193+28
 2507 00b2 0022     		movs	r2, #0
 2508 00b4 1A60     		str	r2, [r3]
 2509 00b6 EAE7     		b	.L184
 2510              	.L191:
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2511              		.loc 1 2093 21 view .LVU691
 2512              	.LBE9:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2513              		.loc 1 2105 7 is_stmt 1 view .LVU692
ARM GAS  /tmp/cctzmfqj.s 			page 140


 2514              	.LVL210:
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2515              		.loc 1 2108 6 view .LVU693
 2516 00b8 FFF7FEFF 		bl	vPortYield
 2517              	.LVL211:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2518              		.loc 1 2105 23 is_stmt 0 view .LVU694
 2519 00bc 0124     		movs	r4, #1
 2520              	.LVL212:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2521              		.loc 1 2105 23 view .LVU695
 2522 00be 00E0     		b	.L178
 2523              	.LVL213:
 2524              	.L187:
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2525              		.loc 1 2020 12 view .LVU696
 2526 00c0 0024     		movs	r4, #0
 2527              	.LVL214:
 2528              	.L178:
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2529              		.loc 1 2118 28 is_stmt 1 view .LVU697
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2530              		.loc 1 2121 2 view .LVU698
 2531 00c2 FFF7FEFF 		bl	vPortExitCritical
 2532              	.LVL215:
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2533              		.loc 1 2123 2 view .LVU699
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2534              		.loc 1 2124 1 is_stmt 0 view .LVU700
 2535 00c6 2000     		movs	r0, r4
 2536              		@ sp needed
 2537              	.LVL216:
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2538              		.loc 1 2124 1 view .LVU701
 2539 00c8 70BD     		pop	{r4, r5, r6, pc}
 2540              	.L194:
 2541 00ca C046     		.align	2
 2542              	.L193:
 2543 00cc 00000000 		.word	.LANCHOR15
 2544 00d0 00000000 		.word	.LANCHOR8
 2545 00d4 00000000 		.word	.LANCHOR1
 2546 00d8 00000000 		.word	.LANCHOR12
 2547 00dc 00000000 		.word	pxReadyTasksLists
 2548 00e0 00000000 		.word	.LANCHOR9
 2549 00e4 00000000 		.word	.LANCHOR19
 2550 00e8 00000000 		.word	.LANCHOR18
 2551              		.cfi_endproc
 2552              	.LFE15:
 2554              		.section	.text.vTaskDelay,"ax",%progbits
 2555              		.align	1
 2556              		.global	vTaskDelay
 2557              		.syntax unified
 2558              		.code	16
 2559              		.thumb_func
 2560              		.fpu softvfp
 2562              	vTaskDelay:
 2563              	.LVL217:
ARM GAS  /tmp/cctzmfqj.s 			page 141


 2564              	.LFB4:
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2565              		.loc 1 1225 2 is_stmt 1 view -0
 2566              		.cfi_startproc
 2567              		@ args = 0, pretend = 0, frame = 0
 2568              		@ frame_needed = 0, uses_anonymous_args = 0
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2569              		.loc 1 1225 2 is_stmt 0 view .LVU703
 2570 0000 10B5     		push	{r4, lr}
 2571              	.LCFI19:
 2572              		.cfi_def_cfa_offset 8
 2573              		.cfi_offset 4, -8
 2574              		.cfi_offset 14, -4
 2575 0002 041E     		subs	r4, r0, #0
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2576              		.loc 1 1226 2 is_stmt 1 view .LVU704
 2577              	.LVL218:
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2578              		.loc 1 1229 3 view .LVU705
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2579              		.loc 1 1229 5 is_stmt 0 view .LVU706
 2580 0004 0FD0     		beq	.L196
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2581              		.loc 1 1231 4 is_stmt 1 view .LVU707
 2582 0006 094B     		ldr	r3, .L200
 2583 0008 1B68     		ldr	r3, [r3]
 2584 000a 002B     		cmp	r3, #0
 2585 000c 01D0     		beq	.L197
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2586              		.loc 1 1231 4 discriminator 1 view .LVU708
 2587              		.syntax divided
 2588              	@ 1231 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2589 000e 72B6     		 cpsid i 
 2590              	@ 0 "" 2
 2591              		.thumb
 2592              		.syntax unified
 2593              	.L198:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2594              		.loc 1 1231 4 discriminator 1 view .LVU709
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2595              		.loc 1 1231 4 discriminator 1 view .LVU710
 2596 0010 FEE7     		b	.L198
 2597              	.L197:
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2598              		.loc 1 1231 45 discriminator 2 view .LVU711
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2599              		.loc 1 1232 4 discriminator 2 view .LVU712
 2600 0012 FFF7FEFF 		bl	vTaskSuspendAll
 2601              	.LVL219:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2602              		.loc 1 1234 22 discriminator 2 view .LVU713
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2603              		.loc 1 1243 5 discriminator 2 view .LVU714
 2604 0016 0021     		movs	r1, #0
 2605 0018 2000     		movs	r0, r4
 2606 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2607              	.LVL220:
ARM GAS  /tmp/cctzmfqj.s 			page 142


1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2608              		.loc 1 1245 4 discriminator 2 view .LVU715
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2609              		.loc 1 1245 22 is_stmt 0 discriminator 2 view .LVU716
 2610 001e FFF7FEFF 		bl	xTaskResumeAll
 2611              	.LVL221:
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2612              		.loc 1 1249 28 is_stmt 1 discriminator 2 view .LVU717
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2613              		.loc 1 1254 3 discriminator 2 view .LVU718
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2614              		.loc 1 1254 5 is_stmt 0 discriminator 2 view .LVU719
 2615 0022 0028     		cmp	r0, #0
 2616 0024 01D1     		bne	.L195
 2617              	.LVL222:
 2618              	.L196:
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2619              		.loc 1 1256 4 is_stmt 1 view .LVU720
 2620 0026 FFF7FEFF 		bl	vPortYield
 2621              	.LVL223:
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2622              		.loc 1 1260 28 view .LVU721
 2623              	.L195:
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2624              		.loc 1 1262 2 is_stmt 0 view .LVU722
 2625              		@ sp needed
 2626              	.LVL224:
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2627              		.loc 1 1262 2 view .LVU723
 2628 002a 10BD     		pop	{r4, pc}
 2629              	.L201:
 2630              		.align	2
 2631              	.L200:
 2632 002c 00000000 		.word	.LANCHOR15
 2633              		.cfi_endproc
 2634              	.LFE4:
 2636              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 2637              		.align	1
 2638              		.syntax unified
 2639              		.code	16
 2640              		.thumb_func
 2641              		.fpu softvfp
 2643              	prvCheckTasksWaitingTermination:
 2644              	.LFB31:
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2645              		.loc 1 3366 1 is_stmt 1 view -0
 2646              		.cfi_startproc
 2647              		@ args = 0, pretend = 0, frame = 0
 2648              		@ frame_needed = 0, uses_anonymous_args = 0
 2649 0000 10B5     		push	{r4, lr}
 2650              	.LCFI20:
 2651              		.cfi_def_cfa_offset 8
 2652              		.cfi_offset 4, -8
 2653              		.cfi_offset 14, -4
 2654              	.LBB10:
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2655              		.loc 1 3372 3 view .LVU725
ARM GAS  /tmp/cctzmfqj.s 			page 143


3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2656              		.loc 1 3376 3 view .LVU726
 2657              	.L204:
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2658              		.loc 1 3401 29 view .LVU727
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2659              		.loc 1 3376 39 is_stmt 0 view .LVU728
 2660 0002 114B     		ldr	r3, .L207
 2661 0004 1B68     		ldr	r3, [r3]
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2662              		.loc 1 3376 8 view .LVU729
 2663 0006 002B     		cmp	r3, #0
 2664 0008 1DD0     		beq	.L206
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2665              		.loc 1 3378 4 is_stmt 1 view .LVU730
 2666 000a FFF7FEFF 		bl	vTaskSuspendAll
 2667              	.LVL225:
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2668              		.loc 1 3380 5 view .LVU731
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2669              		.loc 1 3380 20 is_stmt 0 view .LVU732
 2670 000e 0F4B     		ldr	r3, .L207+4
 2671 0010 1C68     		ldr	r4, [r3]
 2672              	.LVL226:
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2673              		.loc 1 3382 4 is_stmt 1 view .LVU733
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2674              		.loc 1 3382 13 is_stmt 0 view .LVU734
 2675 0012 FFF7FEFF 		bl	xTaskResumeAll
 2676              	.LVL227:
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2677              		.loc 1 3384 4 is_stmt 1 view .LVU735
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2678              		.loc 1 3384 6 is_stmt 0 view .LVU736
 2679 0016 002C     		cmp	r4, #0
 2680 0018 F3D0     		beq	.L204
 2681              	.LBB11:
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2682              		.loc 1 3386 5 is_stmt 1 view .LVU737
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2683              		.loc 1 3388 5 view .LVU738
 2684 001a FFF7FEFF 		bl	vPortEnterCritical
 2685              	.LVL228:
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2686              		.loc 1 3390 6 view .LVU739
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2687              		.loc 1 3390 26 is_stmt 0 view .LVU740
 2688 001e 0B4B     		ldr	r3, .L207+4
 2689 0020 DB68     		ldr	r3, [r3, #12]
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2690              		.loc 1 3390 12 view .LVU741
 2691 0022 DC68     		ldr	r4, [r3, #12]
 2692              	.LVL229:
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2693              		.loc 1 3391 6 is_stmt 1 view .LVU742
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2694              		.loc 1 3391 15 is_stmt 0 view .LVU743
ARM GAS  /tmp/cctzmfqj.s 			page 144


 2695 0024 201D     		adds	r0, r4, #4
 2696 0026 FFF7FEFF 		bl	uxListRemove
 2697              	.LVL230:
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
 2698              		.loc 1 3392 6 is_stmt 1 view .LVU744
 2699 002a 094A     		ldr	r2, .L207+8
 2700 002c 1368     		ldr	r3, [r2]
 2701 002e 013B     		subs	r3, r3, #1
 2702 0030 1360     		str	r3, [r2]
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2703              		.loc 1 3393 6 view .LVU745
 2704 0032 054A     		ldr	r2, .L207
 2705 0034 1368     		ldr	r3, [r2]
 2706 0036 013B     		subs	r3, r3, #1
 2707 0038 1360     		str	r3, [r2]
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2708              		.loc 1 3395 5 view .LVU746
 2709 003a FFF7FEFF 		bl	vPortExitCritical
 2710              	.LVL231:
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2711              		.loc 1 3397 5 view .LVU747
 2712 003e 2000     		movs	r0, r4
 2713 0040 FFF7FEFF 		bl	prvDeleteTCB
 2714              	.LVL232:
 2715              	.LBE11:
 2716 0044 DDE7     		b	.L204
 2717              	.LVL233:
 2718              	.L206:
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2719              		.loc 1 3397 5 is_stmt 0 view .LVU748
 2720              	.LBE10:
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2721              		.loc 1 3406 1 view .LVU749
 2722              		@ sp needed
 2723 0046 10BD     		pop	{r4, pc}
 2724              	.L208:
 2725              		.align	2
 2726              	.L207:
 2727 0048 00000000 		.word	.LANCHOR14
 2728 004c 00000000 		.word	.LANCHOR6
 2729 0050 00000000 		.word	.LANCHOR8
 2730              		.cfi_endproc
 2731              	.LFE31:
 2733              		.section	.text.prvIdleTask,"ax",%progbits
 2734              		.align	1
 2735              		.syntax unified
 2736              		.code	16
 2737              		.thumb_func
 2738              		.fpu softvfp
 2740              	prvIdleTask:
 2741              	.LFB29:
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 2742              		.loc 1 3132 1 is_stmt 1 view -0
 2743              		.cfi_startproc
 2744              		@ Volatile: function does not return.
 2745              		@ args = 0, pretend = 0, frame = 0
 2746              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctzmfqj.s 			page 145


 2747              	.LVL234:
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 2748              		.loc 1 3132 1 is_stmt 0 view .LVU751
 2749 0000 10B5     		push	{r4, lr}
 2750              	.LCFI21:
 2751              		.cfi_def_cfa_offset 8
 2752              		.cfi_offset 4, -8
 2753              		.cfi_offset 14, -4
 2754              	.LVL235:
 2755              	.L210:
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2756              		.loc 1 3134 2 is_stmt 1 view .LVU752
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2757              		.loc 1 3139 2 view .LVU753
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2758              		.loc 1 3143 3 view .LVU754
 2759 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 2760              	.LVL236:
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2761              		.loc 1 3166 4 view .LVU755
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2762              		.loc 1 3166 8 is_stmt 0 view .LVU756
 2763 0006 034B     		ldr	r3, .L212
 2764 0008 1B68     		ldr	r3, [r3]
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2765              		.loc 1 3166 6 view .LVU757
 2766 000a 012B     		cmp	r3, #1
 2767 000c F9D9     		bls	.L210
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2768              		.loc 1 3168 5 is_stmt 1 view .LVU758
 2769 000e FFF7FEFF 		bl	vPortYield
 2770              	.LVL237:
 2771 0012 F6E7     		b	.L210
 2772              	.L213:
 2773              		.align	2
 2774              	.L212:
 2775 0014 00000000 		.word	pxReadyTasksLists
 2776              		.cfi_endproc
 2777              	.LFE29:
 2779              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2780              		.align	1
 2781              		.global	vTaskSwitchContext
 2782              		.syntax unified
 2783              		.code	16
 2784              		.thumb_func
 2785              		.fpu softvfp
 2787              	vTaskSwitchContext:
 2788              	.LFB21:
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2789              		.loc 1 2762 1 view -0
 2790              		.cfi_startproc
 2791              		@ args = 0, pretend = 0, frame = 0
 2792              		@ frame_needed = 0, uses_anonymous_args = 0
 2793 0000 30B5     		push	{r4, r5, lr}
 2794              	.LCFI22:
 2795              		.cfi_def_cfa_offset 12
 2796              		.cfi_offset 4, -12
ARM GAS  /tmp/cctzmfqj.s 			page 146


 2797              		.cfi_offset 5, -8
 2798              		.cfi_offset 14, -4
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2799              		.loc 1 2763 2 view .LVU760
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2800              		.loc 1 2763 27 is_stmt 0 view .LVU761
 2801 0002 1C4B     		ldr	r3, .L225
 2802 0004 1B68     		ldr	r3, [r3]
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2803              		.loc 1 2763 4 view .LVU762
 2804 0006 002B     		cmp	r3, #0
 2805 0008 03D0     		beq	.L215
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2806              		.loc 1 2767 3 is_stmt 1 view .LVU763
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2807              		.loc 1 2767 17 is_stmt 0 view .LVU764
 2808 000a 1B4B     		ldr	r3, .L225+4
 2809 000c 0122     		movs	r2, #1
 2810 000e 1A60     		str	r2, [r3]
 2811              	.L214:
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2812              		.loc 1 2817 1 view .LVU765
 2813              		@ sp needed
 2814 0010 30BD     		pop	{r4, r5, pc}
 2815              	.L215:
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2816              		.loc 1 2771 3 is_stmt 1 view .LVU766
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2817              		.loc 1 2771 17 is_stmt 0 view .LVU767
 2818 0012 194B     		ldr	r3, .L225+4
 2819 0014 0022     		movs	r2, #0
 2820 0016 1A60     		str	r2, [r3]
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2821              		.loc 1 2772 27 is_stmt 1 view .LVU768
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2822              		.loc 1 2802 33 view .LVU769
 2823              	.LBB12:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2824              		.loc 1 2806 3 view .LVU770
 2825 0018 184B     		ldr	r3, .L225+8
 2826 001a 1B68     		ldr	r3, [r3]
 2827              	.LVL238:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2828              		.loc 1 2806 3 view .LVU771
 2829              	.L217:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2830              		.loc 1 2806 3 is_stmt 0 discriminator 5 view .LVU772
 2831 001c 9A00     		lsls	r2, r3, #2
 2832 001e D218     		adds	r2, r2, r3
 2833 0020 9100     		lsls	r1, r2, #2
 2834 0022 174A     		ldr	r2, .L225+12
 2835 0024 8A58     		ldr	r2, [r1, r2]
 2836 0026 002A     		cmp	r2, #0
 2837 0028 05D1     		bne	.L222
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2838              		.loc 1 2806 3 is_stmt 1 discriminator 6 view .LVU773
 2839 002a 002B     		cmp	r3, #0
ARM GAS  /tmp/cctzmfqj.s 			page 147


 2840 002c 01D0     		beq	.L223
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2841              		.loc 1 2806 3 discriminator 3 view .LVU774
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2842              		.loc 1 2806 3 discriminator 3 view .LVU775
 2843 002e 013B     		subs	r3, r3, #1
 2844              	.LVL239:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2845              		.loc 1 2806 3 is_stmt 0 discriminator 3 view .LVU776
 2846 0030 F4E7     		b	.L217
 2847              	.L223:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2848              		.loc 1 2806 3 is_stmt 1 discriminator 2 view .LVU777
 2849              		.syntax divided
 2850              	@ 2806 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2851 0032 72B6     		 cpsid i 
 2852              	@ 0 "" 2
 2853              		.thumb
 2854              		.syntax unified
 2855              	.L219:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2856              		.loc 1 2806 3 discriminator 1 view .LVU778
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2857              		.loc 1 2806 3 discriminator 1 view .LVU779
 2858 0034 FEE7     		b	.L219
 2859              	.L222:
 2860              	.LBB13:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2861              		.loc 1 2806 3 discriminator 7 view .LVU780
 2862              	.LVL240:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2863              		.loc 1 2806 3 discriminator 7 view .LVU781
 2864 0036 124D     		ldr	r5, .L225+12
 2865 0038 9900     		lsls	r1, r3, #2
 2866 003a CA18     		adds	r2, r1, r3
 2867 003c 9000     		lsls	r0, r2, #2
 2868 003e 2818     		adds	r0, r5, r0
 2869 0040 4268     		ldr	r2, [r0, #4]
 2870 0042 5468     		ldr	r4, [r2, #4]
 2871 0044 4460     		str	r4, [r0, #4]
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2872              		.loc 1 2806 3 discriminator 7 view .LVU782
 2873 0046 C918     		adds	r1, r1, r3
 2874 0048 8A00     		lsls	r2, r1, #2
 2875 004a 1100     		movs	r1, r2
 2876 004c 0832     		adds	r2, r2, #8
 2877 004e 5219     		adds	r2, r2, r5
 2878 0050 9442     		cmp	r4, r2
 2879 0052 0BD0     		beq	.L224
 2880              	.L221:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2881              		.loc 1 2806 3 discriminator 10 view .LVU783
 2882 0054 9A00     		lsls	r2, r3, #2
 2883 0056 D218     		adds	r2, r2, r3
 2884 0058 9100     		lsls	r1, r2, #2
 2885 005a 094A     		ldr	r2, .L225+12
 2886 005c 5218     		adds	r2, r2, r1
ARM GAS  /tmp/cctzmfqj.s 			page 148


 2887 005e 5268     		ldr	r2, [r2, #4]
 2888 0060 D168     		ldr	r1, [r2, #12]
 2889 0062 084A     		ldr	r2, .L225+16
 2890 0064 1160     		str	r1, [r2]
 2891              	.LBE13:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2892              		.loc 1 2806 3 discriminator 10 view .LVU784
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2893              		.loc 1 2806 3 discriminator 10 view .LVU785
 2894 0066 054A     		ldr	r2, .L225+8
 2895 0068 1360     		str	r3, [r2]
 2896              	.LBE12:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2897              		.loc 1 2806 37 discriminator 10 view .LVU786
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2898              		.loc 1 2807 26 discriminator 10 view .LVU787
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2899              		.loc 1 2817 1 is_stmt 0 discriminator 10 view .LVU788
 2900 006a D1E7     		b	.L214
 2901              	.L224:
 2902              	.LBB15:
 2903              	.LBB14:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2904              		.loc 1 2806 3 is_stmt 1 discriminator 8 view .LVU789
 2905 006c 6068     		ldr	r0, [r4, #4]
 2906 006e 6A18     		adds	r2, r5, r1
 2907 0070 5060     		str	r0, [r2, #4]
 2908 0072 EFE7     		b	.L221
 2909              	.L226:
 2910              		.align	2
 2911              	.L225:
 2912 0074 00000000 		.word	.LANCHOR15
 2913 0078 00000000 		.word	.LANCHOR19
 2914 007c 00000000 		.word	.LANCHOR12
 2915 0080 00000000 		.word	pxReadyTasksLists
 2916 0084 00000000 		.word	.LANCHOR9
 2917              	.LBE14:
 2918              	.LBE15:
 2919              		.cfi_endproc
 2920              	.LFE21:
 2922              		.section	.text.vTaskSuspend,"ax",%progbits
 2923              		.align	1
 2924              		.global	vTaskSuspend
 2925              		.syntax unified
 2926              		.code	16
 2927              		.thumb_func
 2928              		.fpu softvfp
 2930              	vTaskSuspend:
 2931              	.LVL241:
 2932              	.LFB8:
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 2933              		.loc 1 1567 2 view -0
 2934              		.cfi_startproc
 2935              		@ args = 0, pretend = 0, frame = 0
 2936              		@ frame_needed = 0, uses_anonymous_args = 0
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 2937              		.loc 1 1567 2 is_stmt 0 view .LVU791
ARM GAS  /tmp/cctzmfqj.s 			page 149


 2938 0000 70B5     		push	{r4, r5, r6, lr}
 2939              	.LCFI23:
 2940              		.cfi_def_cfa_offset 16
 2941              		.cfi_offset 4, -16
 2942              		.cfi_offset 5, -12
 2943              		.cfi_offset 6, -8
 2944              		.cfi_offset 14, -4
 2945 0002 0400     		movs	r4, r0
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2946              		.loc 1 1568 2 is_stmt 1 view .LVU792
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2947              		.loc 1 1570 3 view .LVU793
 2948 0004 FFF7FEFF 		bl	vPortEnterCritical
 2949              	.LVL242:
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2950              		.loc 1 1574 4 view .LVU794
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2951              		.loc 1 1574 12 is_stmt 0 view .LVU795
 2952 0008 002C     		cmp	r4, #0
 2953 000a 19D0     		beq	.L236
 2954              	.LVL243:
 2955              	.L228:
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2956              		.loc 1 1576 30 is_stmt 1 discriminator 4 view .LVU796
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2957              		.loc 1 1580 4 discriminator 4 view .LVU797
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2958              		.loc 1 1580 8 is_stmt 0 discriminator 4 view .LVU798
 2959 000c 251D     		adds	r5, r4, #4
 2960 000e 2800     		movs	r0, r5
 2961 0010 FFF7FEFF 		bl	uxListRemove
 2962              	.LVL244:
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2963              		.loc 1 1586 29 is_stmt 1 discriminator 4 view .LVU799
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2964              		.loc 1 1590 4 discriminator 4 view .LVU800
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2965              		.loc 1 1590 6 is_stmt 0 discriminator 4 view .LVU801
 2966 0014 A36A     		ldr	r3, [r4, #40]
 2967 0016 002B     		cmp	r3, #0
 2968 0018 03D0     		beq	.L229
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2969              		.loc 1 1592 5 is_stmt 1 view .LVU802
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2970              		.loc 1 1592 14 is_stmt 0 view .LVU803
 2971 001a 2000     		movs	r0, r4
 2972 001c 1830     		adds	r0, r0, #24
 2973 001e FFF7FEFF 		bl	uxListRemove
 2974              	.LVL245:
 2975              	.L229:
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2976              		.loc 1 1596 29 is_stmt 1 view .LVU804
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2977              		.loc 1 1599 4 view .LVU805
 2978 0022 2900     		movs	r1, r5
 2979 0024 1848     		ldr	r0, .L239
 2980 0026 FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/cctzmfqj.s 			page 150


 2981              	.LVL246:
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2982              		.loc 1 1601 3 view .LVU806
 2983 002a FFF7FEFF 		bl	vPortExitCritical
 2984              	.LVL247:
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2985              		.loc 1 1603 3 view .LVU807
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2986              		.loc 1 1603 25 is_stmt 0 view .LVU808
 2987 002e 174B     		ldr	r3, .L239+4
 2988 0030 1B68     		ldr	r3, [r3]
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2989              		.loc 1 1603 5 view .LVU809
 2990 0032 002B     		cmp	r3, #0
 2991 0034 07D1     		bne	.L237
 2992              	.L230:
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2993              		.loc 1 1615 28 is_stmt 1 view .LVU810
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2994              		.loc 1 1618 3 view .LVU811
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2995              		.loc 1 1618 13 is_stmt 0 view .LVU812
 2996 0036 164B     		ldr	r3, .L239+8
 2997 0038 1B68     		ldr	r3, [r3]
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2998              		.loc 1 1618 5 view .LVU813
 2999 003a A342     		cmp	r3, r4
 3000 003c 0AD0     		beq	.L238
 3001              	.L227:
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3002              		.loc 1 1649 2 view .LVU814
 3003              		@ sp needed
 3004              	.LVL248:
 3005              	.LVL249:
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3006              		.loc 1 1649 2 view .LVU815
 3007 003e 70BD     		pop	{r4, r5, r6, pc}
 3008              	.LVL250:
 3009              	.L236:
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3010              		.loc 1 1574 12 discriminator 1 view .LVU816
 3011 0040 134B     		ldr	r3, .L239+8
 3012 0042 1C68     		ldr	r4, [r3]
 3013              	.LVL251:
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3014              		.loc 1 1574 12 discriminator 1 view .LVU817
 3015 0044 E2E7     		b	.L228
 3016              	.LVL252:
 3017              	.L237:
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3018              		.loc 1 1607 4 is_stmt 1 view .LVU818
 3019 0046 FFF7FEFF 		bl	vPortEnterCritical
 3020              	.LVL253:
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3021              		.loc 1 1609 5 view .LVU819
 3022 004a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3023              	.LVL254:
ARM GAS  /tmp/cctzmfqj.s 			page 151


1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3024              		.loc 1 1611 4 view .LVU820
 3025 004e FFF7FEFF 		bl	vPortExitCritical
 3026              	.LVL255:
 3027 0052 F0E7     		b	.L230
 3028              	.L238:
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3029              		.loc 1 1620 4 view .LVU821
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3030              		.loc 1 1620 26 is_stmt 0 view .LVU822
 3031 0054 0D4B     		ldr	r3, .L239+4
 3032 0056 1B68     		ldr	r3, [r3]
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3033              		.loc 1 1620 6 view .LVU823
 3034 0058 002B     		cmp	r3, #0
 3035 005a 08D0     		beq	.L232
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3036              		.loc 1 1623 5 is_stmt 1 view .LVU824
 3037 005c 0D4B     		ldr	r3, .L239+12
 3038 005e 1B68     		ldr	r3, [r3]
 3039 0060 002B     		cmp	r3, #0
 3040 0062 01D0     		beq	.L233
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3041              		.loc 1 1623 5 discriminator 1 view .LVU825
 3042              		.syntax divided
 3043              	@ 1623 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3044 0064 72B6     		 cpsid i 
 3045              	@ 0 "" 2
 3046              		.thumb
 3047              		.syntax unified
 3048              	.L234:
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3049              		.loc 1 1623 5 discriminator 1 view .LVU826
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3050              		.loc 1 1623 5 discriminator 1 view .LVU827
 3051 0066 FEE7     		b	.L234
 3052              	.L233:
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3053              		.loc 1 1623 46 discriminator 2 view .LVU828
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3054              		.loc 1 1624 5 discriminator 2 view .LVU829
 3055 0068 FFF7FEFF 		bl	vPortYield
 3056              	.LVL256:
 3057 006c E7E7     		b	.L227
 3058              	.L232:
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3059              		.loc 1 1631 5 view .LVU830
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3060              		.loc 1 1631 9 is_stmt 0 view .LVU831
 3061 006e 064B     		ldr	r3, .L239
 3062 0070 1A68     		ldr	r2, [r3]
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3063              		.loc 1 1631 56 view .LVU832
 3064 0072 094B     		ldr	r3, .L239+16
 3065 0074 1B68     		ldr	r3, [r3]
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3066              		.loc 1 1631 7 view .LVU833
ARM GAS  /tmp/cctzmfqj.s 			page 152


 3067 0076 9A42     		cmp	r2, r3
 3068 0078 03D1     		bne	.L235
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3069              		.loc 1 1637 6 is_stmt 1 view .LVU834
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3070              		.loc 1 1637 19 is_stmt 0 view .LVU835
 3071 007a 054B     		ldr	r3, .L239+8
 3072 007c 0022     		movs	r2, #0
 3073 007e 1A60     		str	r2, [r3]
 3074 0080 DDE7     		b	.L227
 3075              	.L235:
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3076              		.loc 1 1641 6 is_stmt 1 view .LVU836
 3077 0082 FFF7FEFF 		bl	vTaskSwitchContext
 3078              	.LVL257:
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3079              		.loc 1 1647 28 view .LVU837
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3080              		.loc 1 1649 2 is_stmt 0 view .LVU838
 3081 0086 DAE7     		b	.L227
 3082              	.L240:
 3083              		.align	2
 3084              	.L239:
 3085 0088 00000000 		.word	.LANCHOR0
 3086 008c 00000000 		.word	.LANCHOR10
 3087 0090 00000000 		.word	.LANCHOR9
 3088 0094 00000000 		.word	.LANCHOR15
 3089 0098 00000000 		.word	.LANCHOR8
 3090              		.cfi_endproc
 3091              	.LFE8:
 3093              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3094              		.align	1
 3095              		.global	vTaskPlaceOnEventList
 3096              		.syntax unified
 3097              		.code	16
 3098              		.thumb_func
 3099              		.fpu softvfp
 3101              	vTaskPlaceOnEventList:
 3102              	.LVL258:
 3103              	.LFB22:
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3104              		.loc 1 2821 1 is_stmt 1 view -0
 3105              		.cfi_startproc
 3106              		@ args = 0, pretend = 0, frame = 0
 3107              		@ frame_needed = 0, uses_anonymous_args = 0
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3108              		.loc 1 2821 1 is_stmt 0 view .LVU840
 3109 0000 10B5     		push	{r4, lr}
 3110              	.LCFI24:
 3111              		.cfi_def_cfa_offset 8
 3112              		.cfi_offset 4, -8
 3113              		.cfi_offset 14, -4
 3114 0002 0C00     		movs	r4, r1
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3115              		.loc 1 2822 2 is_stmt 1 view .LVU841
 3116 0004 0028     		cmp	r0, #0
 3117 0006 09D0     		beq	.L244
ARM GAS  /tmp/cctzmfqj.s 			page 153


2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3118              		.loc 1 2822 29 discriminator 2 view .LVU842
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3119              		.loc 1 2831 2 discriminator 2 view .LVU843
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3120              		.loc 1 2831 43 is_stmt 0 discriminator 2 view .LVU844
 3121 0008 054B     		ldr	r3, .L245
 3122 000a 1968     		ldr	r1, [r3]
 3123              	.LVL259:
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3124              		.loc 1 2831 2 discriminator 2 view .LVU845
 3125 000c 1831     		adds	r1, r1, #24
 3126 000e FFF7FEFF 		bl	vListInsert
 3127              	.LVL260:
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3128              		.loc 1 2833 2 is_stmt 1 discriminator 2 view .LVU846
 3129 0012 0121     		movs	r1, #1
 3130 0014 2000     		movs	r0, r4
 3131 0016 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3132              	.LVL261:
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3133              		.loc 1 2834 1 is_stmt 0 discriminator 2 view .LVU847
 3134              		@ sp needed
 3135              	.LVL262:
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3136              		.loc 1 2834 1 discriminator 2 view .LVU848
 3137 001a 10BD     		pop	{r4, pc}
 3138              	.LVL263:
 3139              	.L244:
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3140              		.loc 1 2822 2 is_stmt 1 discriminator 1 view .LVU849
 3141              		.syntax divided
 3142              	@ 2822 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3143 001c 72B6     		 cpsid i 
 3144              	@ 0 "" 2
 3145              		.thumb
 3146              		.syntax unified
 3147              	.L243:
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3148              		.loc 1 2822 2 discriminator 1 view .LVU850
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3149              		.loc 1 2822 2 discriminator 1 view .LVU851
 3150 001e FEE7     		b	.L243
 3151              	.L246:
 3152              		.align	2
 3153              	.L245:
 3154 0020 00000000 		.word	.LANCHOR9
 3155              		.cfi_endproc
 3156              	.LFE22:
 3158              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3159              		.align	1
 3160              		.global	vTaskPlaceOnUnorderedEventList
 3161              		.syntax unified
 3162              		.code	16
 3163              		.thumb_func
 3164              		.fpu softvfp
 3166              	vTaskPlaceOnUnorderedEventList:
ARM GAS  /tmp/cctzmfqj.s 			page 154


 3167              	.LVL264:
 3168              	.LFB23:
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3169              		.loc 1 2838 1 view -0
 3170              		.cfi_startproc
 3171              		@ args = 0, pretend = 0, frame = 0
 3172              		@ frame_needed = 0, uses_anonymous_args = 0
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3173              		.loc 1 2838 1 is_stmt 0 view .LVU853
 3174 0000 70B5     		push	{r4, r5, r6, lr}
 3175              	.LCFI25:
 3176              		.cfi_def_cfa_offset 16
 3177              		.cfi_offset 4, -16
 3178              		.cfi_offset 5, -12
 3179              		.cfi_offset 6, -8
 3180              		.cfi_offset 14, -4
 3181 0002 1400     		movs	r4, r2
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3182              		.loc 1 2839 2 is_stmt 1 view .LVU854
 3183 0004 0028     		cmp	r0, #0
 3184 0006 05D0     		beq	.L252
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3185              		.loc 1 2839 29 discriminator 2 view .LVU855
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3186              		.loc 1 2843 2 discriminator 2 view .LVU856
 3187 0008 0B4B     		ldr	r3, .L253
 3188 000a 1B68     		ldr	r3, [r3]
 3189 000c 002B     		cmp	r3, #0
 3190 000e 03D1     		bne	.L250
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3191              		.loc 1 2843 2 discriminator 1 view .LVU857
 3192              		.syntax divided
 3193              	@ 2843 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3194 0010 72B6     		 cpsid i 
 3195              	@ 0 "" 2
 3196              		.thumb
 3197              		.syntax unified
 3198              	.L251:
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3199              		.loc 1 2843 2 discriminator 2 view .LVU858
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3200              		.loc 1 2843 2 discriminator 2 view .LVU859
 3201 0012 FEE7     		b	.L251
 3202              	.L252:
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3203              		.loc 1 2839 2 discriminator 1 view .LVU860
 3204              		.syntax divided
 3205              	@ 2839 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3206 0014 72B6     		 cpsid i 
 3207              	@ 0 "" 2
 3208              		.thumb
 3209              		.syntax unified
 3210              	.L249:
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3211              		.loc 1 2839 2 discriminator 1 view .LVU861
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3212              		.loc 1 2839 2 discriminator 1 view .LVU862
ARM GAS  /tmp/cctzmfqj.s 			page 155


 3213 0016 FEE7     		b	.L249
 3214              	.L250:
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3215              		.loc 1 2843 43 discriminator 2 view .LVU863
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3216              		.loc 1 2848 2 discriminator 2 view .LVU864
 3217 0018 084A     		ldr	r2, .L253+4
 3218              	.LVL265:
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3219              		.loc 1 2848 2 is_stmt 0 discriminator 2 view .LVU865
 3220 001a 1568     		ldr	r5, [r2]
 3221 001c 8023     		movs	r3, #128
 3222 001e 1B06     		lsls	r3, r3, #24
 3223 0020 0B43     		orrs	r3, r1
 3224 0022 AB61     		str	r3, [r5, #24]
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3225              		.loc 1 2855 2 is_stmt 1 discriminator 2 view .LVU866
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3226              		.loc 1 2855 46 is_stmt 0 discriminator 2 view .LVU867
 3227 0024 1168     		ldr	r1, [r2]
 3228              	.LVL266:
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3229              		.loc 1 2855 2 discriminator 2 view .LVU868
 3230 0026 1831     		adds	r1, r1, #24
 3231 0028 FFF7FEFF 		bl	vListInsertEnd
 3232              	.LVL267:
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3233              		.loc 1 2857 2 is_stmt 1 discriminator 2 view .LVU869
 3234 002c 0121     		movs	r1, #1
 3235 002e 2000     		movs	r0, r4
 3236 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3237              	.LVL268:
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3238              		.loc 1 2858 1 is_stmt 0 discriminator 2 view .LVU870
 3239              		@ sp needed
 3240              	.LVL269:
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3241              		.loc 1 2858 1 discriminator 2 view .LVU871
 3242 0034 70BD     		pop	{r4, r5, r6, pc}
 3243              	.L254:
 3244 0036 C046     		.align	2
 3245              	.L253:
 3246 0038 00000000 		.word	.LANCHOR15
 3247 003c 00000000 		.word	.LANCHOR9
 3248              		.cfi_endproc
 3249              	.LFE23:
 3251              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3252              		.align	1
 3253              		.global	xTaskRemoveFromEventList
 3254              		.syntax unified
 3255              		.code	16
 3256              		.thumb_func
 3257              		.fpu softvfp
 3259              	xTaskRemoveFromEventList:
 3260              	.LVL270:
 3261              	.LFB24:
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
ARM GAS  /tmp/cctzmfqj.s 			page 156


 3262              		.loc 1 2895 1 is_stmt 1 view -0
 3263              		.cfi_startproc
 3264              		@ args = 0, pretend = 0, frame = 0
 3265              		@ frame_needed = 0, uses_anonymous_args = 0
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3266              		.loc 1 2895 1 is_stmt 0 view .LVU873
 3267 0000 70B5     		push	{r4, r5, r6, lr}
 3268              	.LCFI26:
 3269              		.cfi_def_cfa_offset 16
 3270              		.cfi_offset 4, -16
 3271              		.cfi_offset 5, -12
 3272              		.cfi_offset 6, -8
 3273              		.cfi_offset 14, -4
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3274              		.loc 1 2896 1 is_stmt 1 view .LVU874
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3275              		.loc 1 2897 1 view .LVU875
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3276              		.loc 1 2912 2 view .LVU876
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3277              		.loc 1 2912 31 is_stmt 0 view .LVU877
 3278 0002 C368     		ldr	r3, [r0, #12]
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3279              		.loc 1 2912 17 view .LVU878
 3280 0004 DC68     		ldr	r4, [r3, #12]
 3281              	.LVL271:
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3282              		.loc 1 2913 2 is_stmt 1 view .LVU879
 3283 0006 002C     		cmp	r4, #0
 3284 0008 26D0     		beq	.L263
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3285              		.loc 1 2913 32 discriminator 2 view .LVU880
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3286              		.loc 1 2914 2 discriminator 2 view .LVU881
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3287              		.loc 1 2914 11 is_stmt 0 discriminator 2 view .LVU882
 3288 000a 2500     		movs	r5, r4
 3289 000c 1835     		adds	r5, r5, #24
 3290 000e 2800     		movs	r0, r5
 3291              	.LVL272:
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3292              		.loc 1 2914 11 discriminator 2 view .LVU883
 3293 0010 FFF7FEFF 		bl	uxListRemove
 3294              	.LVL273:
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3295              		.loc 1 2916 2 is_stmt 1 discriminator 2 view .LVU884
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3296              		.loc 1 2916 27 is_stmt 0 discriminator 2 view .LVU885
 3297 0014 154B     		ldr	r3, .L264
 3298 0016 1B68     		ldr	r3, [r3]
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3299              		.loc 1 2916 4 discriminator 2 view .LVU886
 3300 0018 002B     		cmp	r3, #0
 3301 001a 1FD1     		bne	.L258
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3302              		.loc 1 2918 3 is_stmt 1 view .LVU887
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
ARM GAS  /tmp/cctzmfqj.s 			page 157


 3303              		.loc 1 2918 12 is_stmt 0 view .LVU888
 3304 001c 251D     		adds	r5, r4, #4
 3305 001e 2800     		movs	r0, r5
 3306 0020 FFF7FEFF 		bl	uxListRemove
 3307              	.LVL274:
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3308              		.loc 1 2919 3 is_stmt 1 view .LVU889
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3309              		.loc 1 2919 3 view .LVU890
 3310 0024 E26A     		ldr	r2, [r4, #44]
 3311 0026 124B     		ldr	r3, .L264+4
 3312 0028 1B68     		ldr	r3, [r3]
 3313 002a 9A42     		cmp	r2, r3
 3314 002c 01D9     		bls	.L259
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3315              		.loc 1 2919 3 discriminator 1 view .LVU891
 3316 002e 104B     		ldr	r3, .L264+4
 3317 0030 1A60     		str	r2, [r3]
 3318              	.L259:
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3319              		.loc 1 2919 3 discriminator 3 view .LVU892
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3320              		.loc 1 2919 3 discriminator 3 view .LVU893
 3321 0032 9300     		lsls	r3, r2, #2
 3322 0034 9B18     		adds	r3, r3, r2
 3323 0036 9800     		lsls	r0, r3, #2
 3324 0038 0E4B     		ldr	r3, .L264+8
 3325 003a C018     		adds	r0, r0, r3
 3326 003c 2900     		movs	r1, r5
 3327 003e FFF7FEFF 		bl	vListInsertEnd
 3328              	.LVL275:
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3329              		.loc 1 2919 42 discriminator 3 view .LVU894
 3330              	.L260:
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3331              		.loc 1 2928 2 view .LVU895
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3332              		.loc 1 2928 20 is_stmt 0 view .LVU896
 3333 0042 E26A     		ldr	r2, [r4, #44]
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3334              		.loc 1 2928 47 view .LVU897
 3335 0044 0C4B     		ldr	r3, .L264+12
 3336 0046 1B68     		ldr	r3, [r3]
 3337 0048 DB6A     		ldr	r3, [r3, #44]
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3338              		.loc 1 2928 4 view .LVU898
 3339 004a 9A42     		cmp	r2, r3
 3340 004c 0BD9     		bls	.L262
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3341              		.loc 1 2933 3 is_stmt 1 view .LVU899
 3342              	.LVL276:
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3343              		.loc 1 2937 3 view .LVU900
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3344              		.loc 1 2937 17 is_stmt 0 view .LVU901
 3345 004e 0B4B     		ldr	r3, .L264+16
 3346 0050 0122     		movs	r2, #1
ARM GAS  /tmp/cctzmfqj.s 			page 158


 3347 0052 1A60     		str	r2, [r3]
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3348              		.loc 1 2933 11 view .LVU902
 3349 0054 0120     		movs	r0, #1
 3350 0056 07E0     		b	.L255
 3351              	.LVL277:
 3352              	.L263:
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3353              		.loc 1 2913 2 is_stmt 1 discriminator 1 view .LVU903
 3354              		.syntax divided
 3355              	@ 2913 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3356 0058 72B6     		 cpsid i 
 3357              	@ 0 "" 2
 3358              		.thumb
 3359              		.syntax unified
 3360              	.L257:
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3361              		.loc 1 2913 2 discriminator 1 view .LVU904
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3362              		.loc 1 2913 2 discriminator 1 view .LVU905
 3363 005a FEE7     		b	.L257
 3364              	.LVL278:
 3365              	.L258:
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3366              		.loc 1 2925 3 view .LVU906
 3367 005c 2900     		movs	r1, r5
 3368 005e 0848     		ldr	r0, .L264+20
 3369 0060 FFF7FEFF 		bl	vListInsertEnd
 3370              	.LVL279:
 3371 0064 EDE7     		b	.L260
 3372              	.L262:
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3373              		.loc 1 2941 11 is_stmt 0 view .LVU907
 3374 0066 0020     		movs	r0, #0
 3375              	.LVL280:
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3376              		.loc 1 2958 2 is_stmt 1 view .LVU908
 3377              	.L255:
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3378              		.loc 1 2959 1 is_stmt 0 view .LVU909
 3379              		@ sp needed
 3380              	.LVL281:
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3381              		.loc 1 2959 1 view .LVU910
 3382 0068 70BD     		pop	{r4, r5, r6, pc}
 3383              	.L265:
 3384 006a C046     		.align	2
 3385              	.L264:
 3386 006c 00000000 		.word	.LANCHOR15
 3387 0070 00000000 		.word	.LANCHOR12
 3388 0074 00000000 		.word	pxReadyTasksLists
 3389 0078 00000000 		.word	.LANCHOR9
 3390 007c 00000000 		.word	.LANCHOR19
 3391 0080 00000000 		.word	.LANCHOR1
 3392              		.cfi_endproc
 3393              	.LFE24:
 3395              		.section	.text.xTaskRemoveFromUnorderedEventList,"ax",%progbits
ARM GAS  /tmp/cctzmfqj.s 			page 159


 3396              		.align	1
 3397              		.global	xTaskRemoveFromUnorderedEventList
 3398              		.syntax unified
 3399              		.code	16
 3400              		.thumb_func
 3401              		.fpu softvfp
 3403              	xTaskRemoveFromUnorderedEventList:
 3404              	.LVL282:
 3405              	.LFB25:
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3406              		.loc 1 2963 1 is_stmt 1 view -0
 3407              		.cfi_startproc
 3408              		@ args = 0, pretend = 0, frame = 0
 3409              		@ frame_needed = 0, uses_anonymous_args = 0
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3410              		.loc 1 2963 1 is_stmt 0 view .LVU912
 3411 0000 70B5     		push	{r4, r5, r6, lr}
 3412              	.LCFI27:
 3413              		.cfi_def_cfa_offset 16
 3414              		.cfi_offset 4, -16
 3415              		.cfi_offset 5, -12
 3416              		.cfi_offset 6, -8
 3417              		.cfi_offset 14, -4
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3418              		.loc 1 2964 1 is_stmt 1 view .LVU913
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3419              		.loc 1 2965 1 view .LVU914
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3420              		.loc 1 2969 2 view .LVU915
 3421 0002 184B     		ldr	r3, .L275
 3422 0004 1B68     		ldr	r3, [r3]
 3423 0006 002B     		cmp	r3, #0
 3424 0008 01D1     		bne	.L267
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3425              		.loc 1 2969 2 discriminator 1 view .LVU916
 3426              		.syntax divided
 3427              	@ 2969 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3428 000a 72B6     		 cpsid i 
 3429              	@ 0 "" 2
 3430              		.thumb
 3431              		.syntax unified
 3432              	.L268:
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3433              		.loc 1 2969 2 discriminator 1 view .LVU917
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3434              		.loc 1 2969 2 discriminator 1 view .LVU918
 3435 000c FEE7     		b	.L268
 3436              	.L267:
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3437              		.loc 1 2969 49 discriminator 2 view .LVU919
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3438              		.loc 1 2972 2 discriminator 2 view .LVU920
 3439 000e 8023     		movs	r3, #128
 3440 0010 1B06     		lsls	r3, r3, #24
 3441 0012 0B43     		orrs	r3, r1
 3442 0014 0360     		str	r3, [r0]
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
ARM GAS  /tmp/cctzmfqj.s 			page 160


 3443              		.loc 1 2976 2 discriminator 2 view .LVU921
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3444              		.loc 1 2976 17 is_stmt 0 discriminator 2 view .LVU922
 3445 0016 C468     		ldr	r4, [r0, #12]
 3446              	.LVL283:
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3447              		.loc 1 2977 2 is_stmt 1 discriminator 2 view .LVU923
 3448 0018 002C     		cmp	r4, #0
 3449 001a 1FD0     		beq	.L274
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3450              		.loc 1 2977 32 discriminator 2 view .LVU924
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3451              		.loc 1 2978 2 discriminator 2 view .LVU925
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3452              		.loc 1 2978 11 is_stmt 0 discriminator 2 view .LVU926
 3453 001c FFF7FEFF 		bl	uxListRemove
 3454              	.LVL284:
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3455              		.loc 1 2983 2 is_stmt 1 discriminator 2 view .LVU927
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3456              		.loc 1 2983 11 is_stmt 0 discriminator 2 view .LVU928
 3457 0020 251D     		adds	r5, r4, #4
 3458 0022 2800     		movs	r0, r5
 3459 0024 FFF7FEFF 		bl	uxListRemove
 3460              	.LVL285:
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3461              		.loc 1 2984 2 is_stmt 1 discriminator 2 view .LVU929
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3462              		.loc 1 2984 2 discriminator 2 view .LVU930
 3463 0028 E26A     		ldr	r2, [r4, #44]
 3464 002a 0F4B     		ldr	r3, .L275+4
 3465 002c 1B68     		ldr	r3, [r3]
 3466 002e 9A42     		cmp	r2, r3
 3467 0030 01D9     		bls	.L271
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3468              		.loc 1 2984 2 discriminator 1 view .LVU931
 3469 0032 0D4B     		ldr	r3, .L275+4
 3470 0034 1A60     		str	r2, [r3]
 3471              	.L271:
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3472              		.loc 1 2984 2 discriminator 3 view .LVU932
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3473              		.loc 1 2984 2 discriminator 3 view .LVU933
 3474 0036 9300     		lsls	r3, r2, #2
 3475 0038 9B18     		adds	r3, r3, r2
 3476 003a 9800     		lsls	r0, r3, #2
 3477 003c 0B4B     		ldr	r3, .L275+8
 3478 003e C018     		adds	r0, r0, r3
 3479 0040 2900     		movs	r1, r5
 3480 0042 FFF7FEFF 		bl	vListInsertEnd
 3481              	.LVL286:
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3482              		.loc 1 2984 41 discriminator 3 view .LVU934
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3483              		.loc 1 2986 2 discriminator 3 view .LVU935
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3484              		.loc 1 2986 20 is_stmt 0 discriminator 3 view .LVU936
ARM GAS  /tmp/cctzmfqj.s 			page 161


 3485 0046 E26A     		ldr	r2, [r4, #44]
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3486              		.loc 1 2986 47 discriminator 3 view .LVU937
 3487 0048 094B     		ldr	r3, .L275+12
 3488 004a 1B68     		ldr	r3, [r3]
 3489 004c DB6A     		ldr	r3, [r3, #44]
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3490              		.loc 1 2986 4 discriminator 3 view .LVU938
 3491 004e 9A42     		cmp	r2, r3
 3492 0050 06D9     		bls	.L273
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3493              		.loc 1 2992 3 is_stmt 1 view .LVU939
 3494              	.LVL287:
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3495              		.loc 1 2996 3 view .LVU940
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3496              		.loc 1 2996 17 is_stmt 0 view .LVU941
 3497 0052 084B     		ldr	r3, .L275+16
 3498 0054 0122     		movs	r2, #1
 3499 0056 1A60     		str	r2, [r3]
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3500              		.loc 1 2992 11 view .LVU942
 3501 0058 0120     		movs	r0, #1
 3502 005a 02E0     		b	.L266
 3503              	.LVL288:
 3504              	.L274:
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3505              		.loc 1 2977 2 is_stmt 1 discriminator 1 view .LVU943
 3506              		.syntax divided
 3507              	@ 2977 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3508 005c 72B6     		 cpsid i 
 3509              	@ 0 "" 2
 3510              		.thumb
 3511              		.syntax unified
 3512              	.L270:
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3513              		.loc 1 2977 2 discriminator 2 view .LVU944
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3514              		.loc 1 2977 2 discriminator 2 view .LVU945
 3515 005e FEE7     		b	.L270
 3516              	.LVL289:
 3517              	.L273:
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3518              		.loc 1 3000 11 is_stmt 0 view .LVU946
 3519 0060 0020     		movs	r0, #0
 3520              	.LVL290:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3521              		.loc 1 3003 2 is_stmt 1 view .LVU947
 3522              	.L266:
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3523              		.loc 1 3004 1 is_stmt 0 view .LVU948
 3524              		@ sp needed
 3525              	.LVL291:
 3526              	.LVL292:
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3527              		.loc 1 3004 1 view .LVU949
 3528 0062 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cctzmfqj.s 			page 162


 3529              	.L276:
 3530              		.align	2
 3531              	.L275:
 3532 0064 00000000 		.word	.LANCHOR15
 3533 0068 00000000 		.word	.LANCHOR12
 3534 006c 00000000 		.word	pxReadyTasksLists
 3535 0070 00000000 		.word	.LANCHOR9
 3536 0074 00000000 		.word	.LANCHOR19
 3537              		.cfi_endproc
 3538              	.LFE25:
 3540              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3541              		.align	1
 3542              		.global	vTaskSetTimeOutState
 3543              		.syntax unified
 3544              		.code	16
 3545              		.thumb_func
 3546              		.fpu softvfp
 3548              	vTaskSetTimeOutState:
 3549              	.LVL293:
 3550              	.LFB26:
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3551              		.loc 1 3008 1 is_stmt 1 view -0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
 3555              		@ link register save eliminated.
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3556              		.loc 1 3009 2 view .LVU951
 3557 0000 0028     		cmp	r0, #0
 3558 0002 06D0     		beq	.L280
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3559              		.loc 1 3009 27 discriminator 2 view .LVU952
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3560              		.loc 1 3010 2 discriminator 2 view .LVU953
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3561              		.loc 1 3010 28 is_stmt 0 discriminator 2 view .LVU954
 3562 0004 044B     		ldr	r3, .L281
 3563 0006 1B68     		ldr	r3, [r3]
 3564 0008 0360     		str	r3, [r0]
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3565              		.loc 1 3011 2 is_stmt 1 discriminator 2 view .LVU955
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3566              		.loc 1 3011 29 is_stmt 0 discriminator 2 view .LVU956
 3567 000a 044B     		ldr	r3, .L281+4
 3568 000c 1B68     		ldr	r3, [r3]
 3569 000e 4360     		str	r3, [r0, #4]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3570              		.loc 1 3012 1 discriminator 2 view .LVU957
 3571              		@ sp needed
 3572 0010 7047     		bx	lr
 3573              	.L280:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3574              		.loc 1 3009 2 is_stmt 1 discriminator 1 view .LVU958
 3575              		.syntax divided
 3576              	@ 3009 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3577 0012 72B6     		 cpsid i 
 3578              	@ 0 "" 2
ARM GAS  /tmp/cctzmfqj.s 			page 163


 3579              		.thumb
 3580              		.syntax unified
 3581              	.L279:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3582              		.loc 1 3009 2 discriminator 1 view .LVU959
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3583              		.loc 1 3009 2 discriminator 1 view .LVU960
 3584 0014 FEE7     		b	.L279
 3585              	.L282:
 3586 0016 C046     		.align	2
 3587              	.L281:
 3588 0018 00000000 		.word	.LANCHOR17
 3589 001c 00000000 		.word	.LANCHOR13
 3590              		.cfi_endproc
 3591              	.LFE26:
 3593              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3594              		.align	1
 3595              		.global	xTaskCheckForTimeOut
 3596              		.syntax unified
 3597              		.code	16
 3598              		.thumb_func
 3599              		.fpu softvfp
 3601              	xTaskCheckForTimeOut:
 3602              	.LVL294:
 3603              	.LFB27:
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3604              		.loc 1 3016 1 view -0
 3605              		.cfi_startproc
 3606              		@ args = 0, pretend = 0, frame = 0
 3607              		@ frame_needed = 0, uses_anonymous_args = 0
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3608              		.loc 1 3016 1 is_stmt 0 view .LVU962
 3609 0000 70B5     		push	{r4, r5, r6, lr}
 3610              	.LCFI28:
 3611              		.cfi_def_cfa_offset 16
 3612              		.cfi_offset 4, -16
 3613              		.cfi_offset 5, -12
 3614              		.cfi_offset 6, -8
 3615              		.cfi_offset 14, -4
 3616 0002 0400     		movs	r4, r0
 3617 0004 0D00     		movs	r5, r1
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3618              		.loc 1 3017 1 is_stmt 1 view .LVU963
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3619              		.loc 1 3019 2 view .LVU964
 3620 0006 0028     		cmp	r0, #0
 3621 0008 16D0     		beq	.L293
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3622              		.loc 1 3019 27 discriminator 2 view .LVU965
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3623              		.loc 1 3020 2 discriminator 2 view .LVU966
 3624 000a 0029     		cmp	r1, #0
 3625 000c 16D0     		beq	.L294
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3626              		.loc 1 3020 31 discriminator 2 view .LVU967
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3627              		.loc 1 3022 2 discriminator 2 view .LVU968
ARM GAS  /tmp/cctzmfqj.s 			page 164


 3628 000e FFF7FEFF 		bl	vPortEnterCritical
 3629              	.LVL295:
 3630              	.LBB16:
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3631              		.loc 1 3025 3 discriminator 2 view .LVU969
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3632              		.loc 1 3025 20 is_stmt 0 discriminator 2 view .LVU970
 3633 0012 134B     		ldr	r3, .L296
 3634 0014 1968     		ldr	r1, [r3]
 3635              	.LVL296:
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3636              		.loc 1 3039 4 is_stmt 1 discriminator 2 view .LVU971
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3637              		.loc 1 3039 8 is_stmt 0 discriminator 2 view .LVU972
 3638 0016 2A68     		ldr	r2, [r5]
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3639              		.loc 1 3039 6 discriminator 2 view .LVU973
 3640 0018 531C     		adds	r3, r2, #1
 3641 001a 19D0     		beq	.L290
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3642              		.loc 1 3049 3 is_stmt 1 view .LVU974
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3643              		.loc 1 3049 25 is_stmt 0 view .LVU975
 3644 001c 114B     		ldr	r3, .L296+4
 3645 001e 1B68     		ldr	r3, [r3]
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3646              		.loc 1 3049 5 view .LVU976
 3647 0020 2068     		ldr	r0, [r4]
 3648 0022 9842     		cmp	r0, r3
 3649 0024 02D0     		beq	.L289
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3650              		.loc 1 3049 56 discriminator 1 view .LVU977
 3651 0026 6368     		ldr	r3, [r4, #4]
 3652 0028 8B42     		cmp	r3, r1
 3653 002a 16D9     		bls	.L291
 3654              	.L289:
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3655              		.loc 1 3058 8 is_stmt 1 view .LVU978
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3656              		.loc 1 3058 58 is_stmt 0 view .LVU979
 3657 002c 6368     		ldr	r3, [r4, #4]
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3658              		.loc 1 3058 14 view .LVU980
 3659 002e C81A     		subs	r0, r1, r3
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3660              		.loc 1 3058 10 view .LVU981
 3661 0030 8242     		cmp	r2, r0
 3662 0032 05D8     		bhi	.L295
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3663              		.loc 1 3067 12 view .LVU982
 3664 0034 0124     		movs	r4, #1
 3665              	.LVL297:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3666              		.loc 1 3067 12 view .LVU983
 3667 0036 0CE0     		b	.L288
 3668              	.LVL298:
 3669              	.L293:
ARM GAS  /tmp/cctzmfqj.s 			page 165


3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3670              		.loc 1 3067 12 view .LVU984
 3671              	.LBE16:
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3672              		.loc 1 3019 2 is_stmt 1 discriminator 1 view .LVU985
 3673              		.syntax divided
 3674              	@ 3019 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3675 0038 72B6     		 cpsid i 
 3676              	@ 0 "" 2
 3677              		.thumb
 3678              		.syntax unified
 3679              	.L285:
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3680              		.loc 1 3019 2 discriminator 1 view .LVU986
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3681              		.loc 1 3019 2 discriminator 1 view .LVU987
 3682 003a FEE7     		b	.L285
 3683              	.L294:
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3684              		.loc 1 3020 2 discriminator 1 view .LVU988
 3685              		.syntax divided
 3686              	@ 3020 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3687 003c 72B6     		 cpsid i 
 3688              	@ 0 "" 2
 3689              		.thumb
 3690              		.syntax unified
 3691              	.L287:
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3692              		.loc 1 3020 2 discriminator 2 view .LVU989
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3693              		.loc 1 3020 2 discriminator 2 view .LVU990
 3694 003e FEE7     		b	.L287
 3695              	.LVL299:
 3696              	.L295:
 3697              	.LBB17:
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 3698              		.loc 1 3061 4 view .LVU991
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 3699              		.loc 1 3061 19 is_stmt 0 view .LVU992
 3700 0040 5B1A     		subs	r3, r3, r1
 3701 0042 9B18     		adds	r3, r3, r2
 3702 0044 2B60     		str	r3, [r5]
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3703              		.loc 1 3062 4 is_stmt 1 view .LVU993
 3704 0046 2000     		movs	r0, r4
 3705 0048 FFF7FEFF 		bl	vTaskSetTimeOutState
 3706              	.LVL300:
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3707              		.loc 1 3063 4 view .LVU994
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3708              		.loc 1 3063 12 is_stmt 0 view .LVU995
 3709 004c 0024     		movs	r4, #0
 3710              	.LVL301:
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3711              		.loc 1 3063 12 view .LVU996
 3712 004e 00E0     		b	.L288
 3713              	.LVL302:
ARM GAS  /tmp/cctzmfqj.s 			page 166


 3714              	.L290:
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3715              		.loc 1 3044 13 view .LVU997
 3716 0050 0024     		movs	r4, #0
 3717              	.LVL303:
 3718              	.L288:
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3719              		.loc 1 3044 13 view .LVU998
 3720              	.LBE17:
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3721              		.loc 1 3070 2 is_stmt 1 view .LVU999
 3722 0052 FFF7FEFF 		bl	vPortExitCritical
 3723              	.LVL304:
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3724              		.loc 1 3072 2 view .LVU1000
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3725              		.loc 1 3073 1 is_stmt 0 view .LVU1001
 3726 0056 2000     		movs	r0, r4
 3727              		@ sp needed
 3728              	.LVL305:
 3729              	.LVL306:
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3730              		.loc 1 3073 1 view .LVU1002
 3731 0058 70BD     		pop	{r4, r5, r6, pc}
 3732              	.LVL307:
 3733              	.L291:
 3734              	.LBB18:
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3735              		.loc 1 3056 12 view .LVU1003
 3736 005a 0124     		movs	r4, #1
 3737              	.LVL308:
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3738              		.loc 1 3056 12 view .LVU1004
 3739 005c F9E7     		b	.L288
 3740              	.L297:
 3741 005e C046     		.align	2
 3742              	.L296:
 3743 0060 00000000 		.word	.LANCHOR13
 3744 0064 00000000 		.word	.LANCHOR17
 3745              	.LBE18:
 3746              		.cfi_endproc
 3747              	.LFE27:
 3749              		.section	.text.vTaskMissedYield,"ax",%progbits
 3750              		.align	1
 3751              		.global	vTaskMissedYield
 3752              		.syntax unified
 3753              		.code	16
 3754              		.thumb_func
 3755              		.fpu softvfp
 3757              	vTaskMissedYield:
 3758              	.LFB28:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 3759              		.loc 1 3077 1 is_stmt 1 view -0
 3760              		.cfi_startproc
 3761              		@ args = 0, pretend = 0, frame = 0
 3762              		@ frame_needed = 0, uses_anonymous_args = 0
 3763              		@ link register save eliminated.
ARM GAS  /tmp/cctzmfqj.s 			page 167


3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3764              		.loc 1 3078 2 view .LVU1006
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3765              		.loc 1 3078 16 is_stmt 0 view .LVU1007
 3766 0000 014B     		ldr	r3, .L299
 3767 0002 0122     		movs	r2, #1
 3768 0004 1A60     		str	r2, [r3]
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3769              		.loc 1 3079 1 view .LVU1008
 3770              		@ sp needed
 3771 0006 7047     		bx	lr
 3772              	.L300:
 3773              		.align	2
 3774              	.L299:
 3775 0008 00000000 		.word	.LANCHOR19
 3776              		.cfi_endproc
 3777              	.LFE28:
 3779              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3780              		.align	1
 3781              		.global	xTaskGetCurrentTaskHandle
 3782              		.syntax unified
 3783              		.code	16
 3784              		.thumb_func
 3785              		.fpu softvfp
 3787              	xTaskGetCurrentTaskHandle:
 3788              	.LFB34:
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 3789              		.loc 1 3662 2 is_stmt 1 view -0
 3790              		.cfi_startproc
 3791              		@ args = 0, pretend = 0, frame = 0
 3792              		@ frame_needed = 0, uses_anonymous_args = 0
 3793              		@ link register save eliminated.
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3794              		.loc 1 3663 2 view .LVU1010
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3795              		.loc 1 3668 3 view .LVU1011
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3796              		.loc 1 3668 11 is_stmt 0 view .LVU1012
 3797 0000 014B     		ldr	r3, .L302
 3798 0002 1868     		ldr	r0, [r3]
 3799              	.LVL309:
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3800              		.loc 1 3670 3 is_stmt 1 view .LVU1013
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3801              		.loc 1 3671 2 is_stmt 0 view .LVU1014
 3802              		@ sp needed
 3803 0004 7047     		bx	lr
 3804              	.L303:
 3805 0006 C046     		.align	2
 3806              	.L302:
 3807 0008 00000000 		.word	.LANCHOR9
 3808              		.cfi_endproc
 3809              	.LFE34:
 3811              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3812              		.align	1
 3813              		.global	xTaskGetSchedulerState
 3814              		.syntax unified
ARM GAS  /tmp/cctzmfqj.s 			page 168


 3815              		.code	16
 3816              		.thumb_func
 3817              		.fpu softvfp
 3819              	xTaskGetSchedulerState:
 3820              	.LFB35:
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 3821              		.loc 1 3679 2 is_stmt 1 view -0
 3822              		.cfi_startproc
 3823              		@ args = 0, pretend = 0, frame = 0
 3824              		@ frame_needed = 0, uses_anonymous_args = 0
 3825              		@ link register save eliminated.
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3826              		.loc 1 3680 2 view .LVU1016
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3827              		.loc 1 3682 3 view .LVU1017
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3828              		.loc 1 3682 25 is_stmt 0 view .LVU1018
 3829 0000 064B     		ldr	r3, .L309
 3830 0002 1B68     		ldr	r3, [r3]
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3831              		.loc 1 3682 5 view .LVU1019
 3832 0004 002B     		cmp	r3, #0
 3833 0006 07D0     		beq	.L306
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3834              		.loc 1 3688 4 is_stmt 1 view .LVU1020
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3835              		.loc 1 3688 29 is_stmt 0 view .LVU1021
 3836 0008 054B     		ldr	r3, .L309+4
 3837 000a 1B68     		ldr	r3, [r3]
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3838              		.loc 1 3688 6 view .LVU1022
 3839 000c 002B     		cmp	r3, #0
 3840 000e 01D0     		beq	.L308
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3841              		.loc 1 3694 13 view .LVU1023
 3842 0010 0020     		movs	r0, #0
 3843              	.LVL310:
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3844              		.loc 1 3698 3 is_stmt 1 view .LVU1024
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3845              		.loc 1 3698 10 is_stmt 0 view .LVU1025
 3846 0012 02E0     		b	.L304
 3847              	.LVL311:
 3848              	.L308:
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3849              		.loc 1 3690 13 view .LVU1026
 3850 0014 0220     		movs	r0, #2
 3851 0016 00E0     		b	.L304
 3852              	.L306:
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3853              		.loc 1 3684 12 view .LVU1027
 3854 0018 0120     		movs	r0, #1
 3855              	.L304:
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3856              		.loc 1 3699 2 view .LVU1028
 3857              		@ sp needed
 3858 001a 7047     		bx	lr
ARM GAS  /tmp/cctzmfqj.s 			page 169


 3859              	.L310:
 3860              		.align	2
 3861              	.L309:
 3862 001c 00000000 		.word	.LANCHOR10
 3863 0020 00000000 		.word	.LANCHOR15
 3864              		.cfi_endproc
 3865              	.LFE35:
 3867              		.section	.text.vTaskPriorityInherit,"ax",%progbits
 3868              		.align	1
 3869              		.global	vTaskPriorityInherit
 3870              		.syntax unified
 3871              		.code	16
 3872              		.thumb_func
 3873              		.fpu softvfp
 3875              	vTaskPriorityInherit:
 3876              	.LVL312:
 3877              	.LFB36:
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3878              		.loc 1 3707 2 is_stmt 1 view -0
 3879              		.cfi_startproc
 3880              		@ args = 0, pretend = 0, frame = 0
 3881              		@ frame_needed = 0, uses_anonymous_args = 0
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3882              		.loc 1 3707 2 is_stmt 0 view .LVU1030
 3883 0000 70B5     		push	{r4, r5, r6, lr}
 3884              	.LCFI29:
 3885              		.cfi_def_cfa_offset 16
 3886              		.cfi_offset 4, -16
 3887              		.cfi_offset 5, -12
 3888              		.cfi_offset 6, -8
 3889              		.cfi_offset 14, -4
 3890 0002 041E     		subs	r4, r0, #0
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3891              		.loc 1 3708 2 is_stmt 1 view .LVU1031
 3892              	.LVL313:
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3893              		.loc 1 3712 3 view .LVU1032
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3894              		.loc 1 3712 5 is_stmt 0 view .LVU1033
 3895 0004 1AD0     		beq	.L311
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3896              		.loc 1 3717 4 is_stmt 1 view .LVU1034
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3897              		.loc 1 3717 13 is_stmt 0 view .LVU1035
 3898 0006 C36A     		ldr	r3, [r0, #44]
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3899              		.loc 1 3717 40 view .LVU1036
 3900 0008 194A     		ldr	r2, .L318
 3901 000a 1268     		ldr	r2, [r2]
 3902 000c D26A     		ldr	r2, [r2, #44]
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3903              		.loc 1 3717 6 view .LVU1037
 3904 000e 9342     		cmp	r3, r2
 3905 0010 14D2     		bcs	.L311
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3906              		.loc 1 3722 5 is_stmt 1 view .LVU1038
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cctzmfqj.s 			page 170


 3907              		.loc 1 3722 7 is_stmt 0 view .LVU1039
 3908 0012 8269     		ldr	r2, [r0, #24]
 3909 0014 002A     		cmp	r2, #0
 3910 0016 05DB     		blt	.L313
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3911              		.loc 1 3724 6 is_stmt 1 view .LVU1040
 3912 0018 154A     		ldr	r2, .L318
 3913 001a 1268     		ldr	r2, [r2]
 3914 001c D16A     		ldr	r1, [r2, #44]
 3915 001e 0722     		movs	r2, #7
 3916 0020 521A     		subs	r2, r2, r1
 3917 0022 8261     		str	r2, [r0, #24]
 3918              	.L313:
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3919              		.loc 1 3728 30 view .LVU1041
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3920              		.loc 1 3733 5 view .LVU1042
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3921              		.loc 1 3733 9 is_stmt 0 view .LVU1043
 3922 0024 9A00     		lsls	r2, r3, #2
 3923 0026 D318     		adds	r3, r2, r3
 3924 0028 9A00     		lsls	r2, r3, #2
 3925 002a 124B     		ldr	r3, .L318+4
 3926 002c D218     		adds	r2, r2, r3
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3927              		.loc 1 3733 108 view .LVU1044
 3928 002e 6369     		ldr	r3, [r4, #20]
 3929 0030 9342     		cmp	r3, r2
 3930 0032 04D0     		beq	.L317
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3931              		.loc 1 3751 6 is_stmt 1 view .LVU1045
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3932              		.loc 1 3751 38 is_stmt 0 view .LVU1046
 3933 0034 0E4B     		ldr	r3, .L318
 3934 0036 1B68     		ldr	r3, [r3]
 3935 0038 DB6A     		ldr	r3, [r3, #44]
 3936 003a E362     		str	r3, [r4, #44]
 3937              	.LVL314:
 3938              	.L311:
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3939              		.loc 1 3765 2 view .LVU1047
 3940              		@ sp needed
 3941              	.LVL315:
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3942              		.loc 1 3765 2 view .LVU1048
 3943 003c 70BD     		pop	{r4, r5, r6, pc}
 3944              	.LVL316:
 3945              	.L317:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3946              		.loc 1 3735 6 is_stmt 1 view .LVU1049
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3947              		.loc 1 3735 10 is_stmt 0 view .LVU1050
 3948 003e 251D     		adds	r5, r4, #4
 3949 0040 2800     		movs	r0, r5
 3950              	.LVL317:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3951              		.loc 1 3735 10 view .LVU1051
ARM GAS  /tmp/cctzmfqj.s 			page 171


 3952 0042 FFF7FEFF 		bl	uxListRemove
 3953              	.LVL318:
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3954              		.loc 1 3741 31 is_stmt 1 view .LVU1052
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3955              		.loc 1 3745 6 view .LVU1053
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3956              		.loc 1 3745 38 is_stmt 0 view .LVU1054
 3957 0046 0A4B     		ldr	r3, .L318
 3958 0048 1B68     		ldr	r3, [r3]
 3959 004a DB6A     		ldr	r3, [r3, #44]
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3960              		.loc 1 3745 24 view .LVU1055
 3961 004c E362     		str	r3, [r4, #44]
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3962              		.loc 1 3746 6 is_stmt 1 view .LVU1056
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3963              		.loc 1 3746 6 view .LVU1057
 3964 004e 0A4A     		ldr	r2, .L318+8
 3965 0050 1268     		ldr	r2, [r2]
 3966 0052 9342     		cmp	r3, r2
 3967 0054 08D8     		bhi	.L315
 3968              	.L316:
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3969              		.loc 1 3746 6 discriminator 3 view .LVU1058
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3970              		.loc 1 3746 6 discriminator 3 view .LVU1059
 3971 0056 9A00     		lsls	r2, r3, #2
 3972 0058 D318     		adds	r3, r2, r3
 3973 005a 9800     		lsls	r0, r3, #2
 3974 005c 054B     		ldr	r3, .L318+4
 3975 005e C018     		adds	r0, r0, r3
 3976 0060 2900     		movs	r1, r5
 3977 0062 FFF7FEFF 		bl	vListInsertEnd
 3978              	.LVL319:
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3979              		.loc 1 3746 36 discriminator 3 view .LVU1060
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3980              		.loc 1 3763 28 discriminator 3 view .LVU1061
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3981              		.loc 1 3765 2 is_stmt 0 discriminator 3 view .LVU1062
 3982 0066 E9E7     		b	.L311
 3983              	.L315:
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3984              		.loc 1 3746 6 is_stmt 1 discriminator 1 view .LVU1063
 3985 0068 034A     		ldr	r2, .L318+8
 3986 006a 1360     		str	r3, [r2]
 3987 006c F3E7     		b	.L316
 3988              	.L319:
 3989 006e C046     		.align	2
 3990              	.L318:
 3991 0070 00000000 		.word	.LANCHOR9
 3992 0074 00000000 		.word	pxReadyTasksLists
 3993 0078 00000000 		.word	.LANCHOR12
 3994              		.cfi_endproc
 3995              	.LFE36:
 3997              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
ARM GAS  /tmp/cctzmfqj.s 			page 172


 3998              		.align	1
 3999              		.global	xTaskPriorityDisinherit
 4000              		.syntax unified
 4001              		.code	16
 4002              		.thumb_func
 4003              		.fpu softvfp
 4005              	xTaskPriorityDisinherit:
 4006              	.LVL320:
 4007              	.LFB37:
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4008              		.loc 1 3773 2 view -0
 4009              		.cfi_startproc
 4010              		@ args = 0, pretend = 0, frame = 0
 4011              		@ frame_needed = 0, uses_anonymous_args = 0
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4012              		.loc 1 3773 2 is_stmt 0 view .LVU1065
 4013 0000 70B5     		push	{r4, r5, r6, lr}
 4014              	.LCFI30:
 4015              		.cfi_def_cfa_offset 16
 4016              		.cfi_offset 4, -16
 4017              		.cfi_offset 5, -12
 4018              		.cfi_offset 6, -8
 4019              		.cfi_offset 14, -4
 4020 0002 041E     		subs	r4, r0, #0
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4021              		.loc 1 3774 2 is_stmt 1 view .LVU1066
 4022              	.LVL321:
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4023              		.loc 1 3775 2 view .LVU1067
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4024              		.loc 1 3777 3 view .LVU1068
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4025              		.loc 1 3777 5 is_stmt 0 view .LVU1069
 4026 0004 2DD0     		beq	.L327
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4027              		.loc 1 3783 4 is_stmt 1 view .LVU1070
 4028 0006 194B     		ldr	r3, .L331
 4029 0008 1B68     		ldr	r3, [r3]
 4030 000a 8342     		cmp	r3, r0
 4031 000c 01D0     		beq	.L322
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4032              		.loc 1 3783 4 discriminator 1 view .LVU1071
 4033              		.syntax divided
 4034              	@ 3783 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4035 000e 72B6     		 cpsid i 
 4036              	@ 0 "" 2
 4037              		.thumb
 4038              		.syntax unified
 4039              	.L323:
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4040              		.loc 1 3783 4 discriminator 1 view .LVU1072
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4041              		.loc 1 3783 4 discriminator 1 view .LVU1073
 4042 0010 FEE7     		b	.L323
 4043              	.L322:
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4044              		.loc 1 3783 41 discriminator 2 view .LVU1074
ARM GAS  /tmp/cctzmfqj.s 			page 173


3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4045              		.loc 1 3785 4 discriminator 2 view .LVU1075
 4046 0012 836C     		ldr	r3, [r0, #72]
 4047 0014 002B     		cmp	r3, #0
 4048 0016 01D1     		bne	.L324
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4049              		.loc 1 3785 4 discriminator 1 view .LVU1076
 4050              		.syntax divided
 4051              	@ 3785 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4052 0018 72B6     		 cpsid i 
 4053              	@ 0 "" 2
 4054              		.thumb
 4055              		.syntax unified
 4056              	.L325:
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4057              		.loc 1 3785 4 discriminator 2 view .LVU1077
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4058              		.loc 1 3785 4 discriminator 2 view .LVU1078
 4059 001a FEE7     		b	.L325
 4060              	.L324:
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4061              		.loc 1 3785 40 discriminator 2 view .LVU1079
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4062              		.loc 1 3786 4 discriminator 2 view .LVU1080
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4063              		.loc 1 3786 28 is_stmt 0 discriminator 2 view .LVU1081
 4064 001c 013B     		subs	r3, r3, #1
 4065 001e 8364     		str	r3, [r0, #72]
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4066              		.loc 1 3790 4 is_stmt 1 discriminator 2 view .LVU1082
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4067              		.loc 1 3790 6 is_stmt 0 discriminator 2 view .LVU1083
 4068 0020 C26A     		ldr	r2, [r0, #44]
 4069 0022 416C     		ldr	r1, [r0, #68]
 4070 0024 8A42     		cmp	r2, r1
 4071 0026 1ED0     		beq	.L328
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4072              		.loc 1 3793 5 is_stmt 1 view .LVU1084
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4073              		.loc 1 3793 7 is_stmt 0 view .LVU1085
 4074 0028 002B     		cmp	r3, #0
 4075 002a 01D0     		beq	.L330
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4076              		.loc 1 3775 13 view .LVU1086
 4077 002c 0020     		movs	r0, #0
 4078              	.LVL322:
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4079              		.loc 1 3842 28 is_stmt 1 view .LVU1087
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4080              		.loc 1 3845 3 view .LVU1088
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4081              		.loc 1 3845 10 is_stmt 0 view .LVU1089
 4082 002e 19E0     		b	.L320
 4083              	.LVL323:
 4084              	.L330:
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4085              		.loc 1 3800 6 is_stmt 1 view .LVU1090
ARM GAS  /tmp/cctzmfqj.s 			page 174


3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4086              		.loc 1 3800 10 is_stmt 0 view .LVU1091
 4087 0030 051D     		adds	r5, r0, #4
 4088 0032 2800     		movs	r0, r5
 4089              	.LVL324:
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4090              		.loc 1 3800 10 view .LVU1092
 4091 0034 FFF7FEFF 		bl	uxListRemove
 4092              	.LVL325:
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4093              		.loc 1 3806 31 is_stmt 1 view .LVU1093
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4094              		.loc 1 3811 67 view .LVU1094
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4095              		.loc 1 3812 6 view .LVU1095
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4096              		.loc 1 3812 31 is_stmt 0 view .LVU1096
 4097 0038 636C     		ldr	r3, [r4, #68]
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4098              		.loc 1 3812 24 view .LVU1097
 4099 003a E362     		str	r3, [r4, #44]
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4100              		.loc 1 3817 6 is_stmt 1 view .LVU1098
 4101 003c 0722     		movs	r2, #7
 4102 003e D21A     		subs	r2, r2, r3
 4103 0040 A261     		str	r2, [r4, #24]
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4104              		.loc 1 3818 6 view .LVU1099
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4105              		.loc 1 3818 6 view .LVU1100
 4106 0042 0B4A     		ldr	r2, .L331+4
 4107 0044 1268     		ldr	r2, [r2]
 4108 0046 9342     		cmp	r3, r2
 4109 0048 01D9     		bls	.L326
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4110              		.loc 1 3818 6 discriminator 1 view .LVU1101
 4111 004a 094A     		ldr	r2, .L331+4
 4112 004c 1360     		str	r3, [r2]
 4113              	.L326:
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4114              		.loc 1 3818 6 discriminator 3 view .LVU1102
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4115              		.loc 1 3818 6 discriminator 3 view .LVU1103
 4116 004e 9A00     		lsls	r2, r3, #2
 4117 0050 D318     		adds	r3, r2, r3
 4118 0052 9800     		lsls	r0, r3, #2
 4119 0054 074B     		ldr	r3, .L331+8
 4120 0056 C018     		adds	r0, r0, r3
 4121 0058 2900     		movs	r1, r5
 4122 005a FFF7FEFF 		bl	vListInsertEnd
 4123              	.LVL326:
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4124              		.loc 1 3818 36 discriminator 3 view .LVU1104
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4125              		.loc 1 3828 6 discriminator 3 view .LVU1105
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4126              		.loc 1 3828 14 is_stmt 0 discriminator 3 view .LVU1106
ARM GAS  /tmp/cctzmfqj.s 			page 175


 4127 005e 0120     		movs	r0, #1
 4128 0060 00E0     		b	.L320
 4129              	.LVL327:
 4130              	.L327:
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4131              		.loc 1 3775 13 view .LVU1107
 4132 0062 0020     		movs	r0, #0
 4133              	.LVL328:
 4134              	.L320:
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4135              		.loc 1 3846 2 view .LVU1108
 4136              		@ sp needed
 4137              	.LVL329:
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4138              		.loc 1 3846 2 view .LVU1109
 4139 0064 70BD     		pop	{r4, r5, r6, pc}
 4140              	.LVL330:
 4141              	.L328:
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4142              		.loc 1 3775 13 view .LVU1110
 4143 0066 0020     		movs	r0, #0
 4144              	.LVL331:
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4145              		.loc 1 3775 13 view .LVU1111
 4146 0068 FCE7     		b	.L320
 4147              	.L332:
 4148 006a C046     		.align	2
 4149              	.L331:
 4150 006c 00000000 		.word	.LANCHOR9
 4151 0070 00000000 		.word	.LANCHOR12
 4152 0074 00000000 		.word	pxReadyTasksLists
 4153              		.cfi_endproc
 4154              	.LFE37:
 4156              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4157              		.align	1
 4158              		.global	uxTaskResetEventItemValue
 4159              		.syntax unified
 4160              		.code	16
 4161              		.thumb_func
 4162              		.fpu softvfp
 4164              	uxTaskResetEventItemValue:
 4165              	.LFB38:
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 4166              		.loc 1 4163 1 is_stmt 1 view -0
 4167              		.cfi_startproc
 4168              		@ args = 0, pretend = 0, frame = 0
 4169              		@ frame_needed = 0, uses_anonymous_args = 0
 4170              		@ link register save eliminated.
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4171              		.loc 1 4164 1 view .LVU1113
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4172              		.loc 1 4166 2 view .LVU1114
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4173              		.loc 1 4166 13 is_stmt 0 view .LVU1115
 4174 0000 044A     		ldr	r2, .L334
 4175 0002 1368     		ldr	r3, [r2]
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cctzmfqj.s 			page 176


 4176              		.loc 1 4166 11 view .LVU1116
 4177 0004 9869     		ldr	r0, [r3, #24]
 4178              	.LVL332:
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4179              		.loc 1 4170 2 is_stmt 1 view .LVU1117
 4180 0006 1368     		ldr	r3, [r2]
 4181 0008 D96A     		ldr	r1, [r3, #44]
 4182 000a 1268     		ldr	r2, [r2]
 4183 000c 0723     		movs	r3, #7
 4184 000e 5B1A     		subs	r3, r3, r1
 4185 0010 9361     		str	r3, [r2, #24]
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4186              		.loc 1 4172 2 view .LVU1118
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4187              		.loc 1 4173 1 is_stmt 0 view .LVU1119
 4188              		@ sp needed
 4189 0012 7047     		bx	lr
 4190              	.L335:
 4191              		.align	2
 4192              	.L334:
 4193 0014 00000000 		.word	.LANCHOR9
 4194              		.cfi_endproc
 4195              	.LFE38:
 4197              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4198              		.align	1
 4199              		.global	pvTaskIncrementMutexHeldCount
 4200              		.syntax unified
 4201              		.code	16
 4202              		.thumb_func
 4203              		.fpu softvfp
 4205              	pvTaskIncrementMutexHeldCount:
 4206              	.LFB39:
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4207              		.loc 1 4179 2 is_stmt 1 view -0
 4208              		.cfi_startproc
 4209              		@ args = 0, pretend = 0, frame = 0
 4210              		@ frame_needed = 0, uses_anonymous_args = 0
 4211              		@ link register save eliminated.
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4212              		.loc 1 4182 3 view .LVU1121
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4213              		.loc 1 4182 20 is_stmt 0 view .LVU1122
 4214 0000 054B     		ldr	r3, .L338
 4215 0002 1B68     		ldr	r3, [r3]
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4216              		.loc 1 4182 5 view .LVU1123
 4217 0004 002B     		cmp	r3, #0
 4218 0006 04D0     		beq	.L337
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4219              		.loc 1 4184 4 is_stmt 1 view .LVU1124
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4220              		.loc 1 4184 18 is_stmt 0 view .LVU1125
 4221 0008 034B     		ldr	r3, .L338
 4222 000a 1A68     		ldr	r2, [r3]
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4223              		.loc 1 4184 35 view .LVU1126
 4224 000c 936C     		ldr	r3, [r2, #72]
ARM GAS  /tmp/cctzmfqj.s 			page 177


 4225 000e 0133     		adds	r3, r3, #1
 4226 0010 9364     		str	r3, [r2, #72]
 4227              	.L337:
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4228              		.loc 1 4187 3 is_stmt 1 view .LVU1127
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4229              		.loc 1 4187 10 is_stmt 0 view .LVU1128
 4230 0012 014B     		ldr	r3, .L338
 4231 0014 1868     		ldr	r0, [r3]
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4232              		.loc 1 4188 2 view .LVU1129
 4233              		@ sp needed
 4234 0016 7047     		bx	lr
 4235              	.L339:
 4236              		.align	2
 4237              	.L338:
 4238 0018 00000000 		.word	.LANCHOR9
 4239              		.cfi_endproc
 4240              	.LFE39:
 4242              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4243              		.align	1
 4244              		.global	ulTaskNotifyTake
 4245              		.syntax unified
 4246              		.code	16
 4247              		.thumb_func
 4248              		.fpu softvfp
 4250              	ulTaskNotifyTake:
 4251              	.LVL333:
 4252              	.LFB40:
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4253              		.loc 1 4196 2 is_stmt 1 view -0
 4254              		.cfi_startproc
 4255              		@ args = 0, pretend = 0, frame = 0
 4256              		@ frame_needed = 0, uses_anonymous_args = 0
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4257              		.loc 1 4196 2 is_stmt 0 view .LVU1131
 4258 0000 70B5     		push	{r4, r5, r6, lr}
 4259              	.LCFI31:
 4260              		.cfi_def_cfa_offset 16
 4261              		.cfi_offset 4, -16
 4262              		.cfi_offset 5, -12
 4263              		.cfi_offset 6, -8
 4264              		.cfi_offset 14, -4
 4265 0002 0500     		movs	r5, r0
 4266 0004 0C00     		movs	r4, r1
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4267              		.loc 1 4197 2 is_stmt 1 view .LVU1132
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4268              		.loc 1 4199 3 view .LVU1133
 4269 0006 FFF7FEFF 		bl	vPortEnterCritical
 4270              	.LVL334:
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4271              		.loc 1 4202 4 view .LVU1134
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4272              		.loc 1 4202 20 is_stmt 0 view .LVU1135
 4273 000a 174B     		ldr	r3, .L345
 4274 000c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cctzmfqj.s 			page 178


 4275 000e DB6C     		ldr	r3, [r3, #76]
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4276              		.loc 1 4202 6 view .LVU1136
 4277 0010 002B     		cmp	r3, #0
 4278 0012 06D1     		bne	.L341
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4279              		.loc 1 4205 5 is_stmt 1 view .LVU1137
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4280              		.loc 1 4205 17 is_stmt 0 view .LVU1138
 4281 0014 144B     		ldr	r3, .L345
 4282 0016 1A68     		ldr	r2, [r3]
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4283              		.loc 1 4205 33 view .LVU1139
 4284 0018 5023     		movs	r3, #80
 4285 001a 0121     		movs	r1, #1
 4286 001c D154     		strb	r1, [r2, r3]
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4287              		.loc 1 4207 5 is_stmt 1 view .LVU1140
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4288              		.loc 1 4207 7 is_stmt 0 view .LVU1141
 4289 001e 002C     		cmp	r4, #0
 4290 0020 17D1     		bne	.L344
 4291              	.L341:
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4292              		.loc 1 4225 29 is_stmt 1 view .LVU1142
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4293              		.loc 1 4228 3 view .LVU1143
 4294 0022 FFF7FEFF 		bl	vPortExitCritical
 4295              	.LVL335:
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4296              		.loc 1 4230 3 view .LVU1144
 4297 0026 FFF7FEFF 		bl	vPortEnterCritical
 4298              	.LVL336:
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 4299              		.loc 1 4232 27 view .LVU1145
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4300              		.loc 1 4233 4 view .LVU1146
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4301              		.loc 1 4233 27 is_stmt 0 view .LVU1147
 4302 002a 0F4B     		ldr	r3, .L345
 4303 002c 1B68     		ldr	r3, [r3]
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4304              		.loc 1 4233 13 view .LVU1148
 4305 002e DC6C     		ldr	r4, [r3, #76]
 4306              	.LVL337:
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4307              		.loc 1 4235 4 is_stmt 1 view .LVU1149
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4308              		.loc 1 4235 6 is_stmt 0 view .LVU1150
 4309 0030 002C     		cmp	r4, #0
 4310 0032 05D0     		beq	.L342
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4311              		.loc 1 4237 5 is_stmt 1 view .LVU1151
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4312              		.loc 1 4237 7 is_stmt 0 view .LVU1152
 4313 0034 002D     		cmp	r5, #0
 4314 0036 12D0     		beq	.L343
ARM GAS  /tmp/cctzmfqj.s 			page 179


4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4315              		.loc 1 4239 6 is_stmt 1 view .LVU1153
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4316              		.loc 1 4239 18 is_stmt 0 view .LVU1154
 4317 0038 0B4B     		ldr	r3, .L345
 4318 003a 1B68     		ldr	r3, [r3]
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4319              		.loc 1 4239 36 view .LVU1155
 4320 003c 0022     		movs	r2, #0
 4321 003e DA64     		str	r2, [r3, #76]
 4322              	.L342:
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4323              		.loc 1 4248 29 is_stmt 1 view .LVU1156
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4324              		.loc 1 4251 4 view .LVU1157
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4325              		.loc 1 4251 16 is_stmt 0 view .LVU1158
 4326 0040 094B     		ldr	r3, .L345
 4327 0042 1A68     		ldr	r2, [r3]
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4328              		.loc 1 4251 32 view .LVU1159
 4329 0044 5023     		movs	r3, #80
 4330 0046 0021     		movs	r1, #0
 4331 0048 D154     		strb	r1, [r2, r3]
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4332              		.loc 1 4253 3 is_stmt 1 view .LVU1160
 4333 004a FFF7FEFF 		bl	vPortExitCritical
 4334              	.LVL338:
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4335              		.loc 1 4255 3 view .LVU1161
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4336              		.loc 1 4256 2 is_stmt 0 view .LVU1162
 4337 004e 2000     		movs	r0, r4
 4338              		@ sp needed
 4339              	.LVL339:
 4340              	.LVL340:
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4341              		.loc 1 4256 2 view .LVU1163
 4342 0050 70BD     		pop	{r4, r5, r6, pc}
 4343              	.LVL341:
 4344              	.L344:
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4345              		.loc 1 4209 6 is_stmt 1 view .LVU1164
 4346 0052 2000     		movs	r0, r4
 4347 0054 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4348              	.LVL342:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4349              		.loc 1 4210 35 view .LVU1165
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4350              		.loc 1 4216 6 view .LVU1166
 4351 0058 FFF7FEFF 		bl	vPortYield
 4352              	.LVL343:
 4353 005c E1E7     		b	.L341
 4354              	.LVL344:
 4355              	.L343:
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4356              		.loc 1 4243 6 view .LVU1167
ARM GAS  /tmp/cctzmfqj.s 			page 180


4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4357              		.loc 1 4243 18 is_stmt 0 view .LVU1168
 4358 005e 024B     		ldr	r3, .L345
 4359 0060 1B68     		ldr	r3, [r3]
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4360              		.loc 1 4243 47 view .LVU1169
 4361 0062 621E     		subs	r2, r4, #1
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4362              		.loc 1 4243 36 view .LVU1170
 4363 0064 DA64     		str	r2, [r3, #76]
 4364 0066 EBE7     		b	.L342
 4365              	.L346:
 4366              		.align	2
 4367              	.L345:
 4368 0068 00000000 		.word	.LANCHOR9
 4369              		.cfi_endproc
 4370              	.LFE40:
 4372              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4373              		.align	1
 4374              		.global	xTaskNotifyWait
 4375              		.syntax unified
 4376              		.code	16
 4377              		.thumb_func
 4378              		.fpu softvfp
 4380              	xTaskNotifyWait:
 4381              	.LVL345:
 4382              	.LFB41:
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4383              		.loc 1 4264 2 is_stmt 1 view -0
 4384              		.cfi_startproc
 4385              		@ args = 0, pretend = 0, frame = 0
 4386              		@ frame_needed = 0, uses_anonymous_args = 0
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4387              		.loc 1 4264 2 is_stmt 0 view .LVU1172
 4388 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4389              	.LCFI32:
 4390              		.cfi_def_cfa_offset 24
 4391              		.cfi_offset 3, -24
 4392              		.cfi_offset 4, -20
 4393              		.cfi_offset 5, -16
 4394              		.cfi_offset 6, -12
 4395              		.cfi_offset 7, -8
 4396              		.cfi_offset 14, -4
 4397 0002 0700     		movs	r7, r0
 4398 0004 0D00     		movs	r5, r1
 4399 0006 1400     		movs	r4, r2
 4400 0008 1E00     		movs	r6, r3
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4401              		.loc 1 4265 2 is_stmt 1 view .LVU1173
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4402              		.loc 1 4267 3 view .LVU1174
 4403 000a FFF7FEFF 		bl	vPortEnterCritical
 4404              	.LVL346:
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4405              		.loc 1 4270 4 view .LVU1175
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4406              		.loc 1 4270 20 is_stmt 0 view .LVU1176
ARM GAS  /tmp/cctzmfqj.s 			page 181


 4407 000e 1C4B     		ldr	r3, .L353
 4408 0010 1A68     		ldr	r2, [r3]
 4409 0012 5023     		movs	r3, #80
 4410 0014 D35C     		ldrb	r3, [r2, r3]
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4411              		.loc 1 4270 6 view .LVU1177
 4412 0016 022B     		cmp	r3, #2
 4413 0018 0AD0     		beq	.L348
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4414              		.loc 1 4275 5 is_stmt 1 view .LVU1178
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4415              		.loc 1 4275 35 is_stmt 0 view .LVU1179
 4416 001a 194A     		ldr	r2, .L353
 4417 001c 1168     		ldr	r1, [r2]
 4418 001e CB6C     		ldr	r3, [r1, #76]
 4419 0020 BB43     		bics	r3, r7
 4420 0022 CB64     		str	r3, [r1, #76]
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4421              		.loc 1 4278 5 is_stmt 1 view .LVU1180
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4422              		.loc 1 4278 17 is_stmt 0 view .LVU1181
 4423 0024 1268     		ldr	r2, [r2]
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4424              		.loc 1 4278 33 view .LVU1182
 4425 0026 5023     		movs	r3, #80
 4426 0028 0121     		movs	r1, #1
 4427 002a D154     		strb	r1, [r2, r3]
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4428              		.loc 1 4280 5 is_stmt 1 view .LVU1183
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4429              		.loc 1 4280 7 is_stmt 0 view .LVU1184
 4430 002c 002E     		cmp	r6, #0
 4431 002e 1ED1     		bne	.L352
 4432              	.L348:
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4433              		.loc 1 4298 29 is_stmt 1 view .LVU1185
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4434              		.loc 1 4301 3 view .LVU1186
 4435 0030 FFF7FEFF 		bl	vPortExitCritical
 4436              	.LVL347:
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4437              		.loc 1 4303 3 view .LVU1187
 4438 0034 FFF7FEFF 		bl	vPortEnterCritical
 4439              	.LVL348:
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4440              		.loc 1 4305 27 view .LVU1188
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4441              		.loc 1 4307 4 view .LVU1189
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4442              		.loc 1 4307 6 is_stmt 0 view .LVU1190
 4443 0038 002C     		cmp	r4, #0
 4444 003a 03D0     		beq	.L349
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4445              		.loc 1 4311 5 is_stmt 1 view .LVU1191
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4446              		.loc 1 4311 41 is_stmt 0 view .LVU1192
 4447 003c 104B     		ldr	r3, .L353
ARM GAS  /tmp/cctzmfqj.s 			page 182


 4448 003e 1B68     		ldr	r3, [r3]
 4449 0040 DB6C     		ldr	r3, [r3, #76]
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4450              		.loc 1 4311 27 view .LVU1193
 4451 0042 2360     		str	r3, [r4]
 4452              	.L349:
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4453              		.loc 1 4318 4 is_stmt 1 view .LVU1194
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4454              		.loc 1 4318 20 is_stmt 0 view .LVU1195
 4455 0044 0E4B     		ldr	r3, .L353
 4456 0046 1A68     		ldr	r2, [r3]
 4457 0048 5023     		movs	r3, #80
 4458 004a D35C     		ldrb	r3, [r2, r3]
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4459              		.loc 1 4318 6 view .LVU1196
 4460 004c 012B     		cmp	r3, #1
 4461 004e 14D0     		beq	.L351
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4462              		.loc 1 4327 5 is_stmt 1 view .LVU1197
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4463              		.loc 1 4327 35 is_stmt 0 view .LVU1198
 4464 0050 0B4B     		ldr	r3, .L353
 4465 0052 1A68     		ldr	r2, [r3]
 4466 0054 D36C     		ldr	r3, [r2, #76]
 4467 0056 AB43     		bics	r3, r5
 4468 0058 D364     		str	r3, [r2, #76]
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4469              		.loc 1 4328 5 is_stmt 1 view .LVU1199
 4470              	.LVL349:
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4471              		.loc 1 4328 13 is_stmt 0 view .LVU1200
 4472 005a 0124     		movs	r4, #1
 4473              	.LVL350:
 4474              	.L350:
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4475              		.loc 1 4331 4 is_stmt 1 view .LVU1201
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4476              		.loc 1 4331 16 is_stmt 0 view .LVU1202
 4477 005c 084B     		ldr	r3, .L353
 4478 005e 1A68     		ldr	r2, [r3]
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4479              		.loc 1 4331 32 view .LVU1203
 4480 0060 5023     		movs	r3, #80
 4481 0062 0021     		movs	r1, #0
 4482 0064 D154     		strb	r1, [r2, r3]
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4483              		.loc 1 4333 3 is_stmt 1 view .LVU1204
 4484 0066 FFF7FEFF 		bl	vPortExitCritical
 4485              	.LVL351:
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4486              		.loc 1 4335 3 view .LVU1205
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4487              		.loc 1 4336 2 is_stmt 0 view .LVU1206
 4488 006a 2000     		movs	r0, r4
 4489              		@ sp needed
 4490              	.LVL352:
ARM GAS  /tmp/cctzmfqj.s 			page 183


 4491              	.LVL353:
 4492              	.LVL354:
 4493              	.LVL355:
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4494              		.loc 1 4336 2 view .LVU1207
 4495 006c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4496              	.LVL356:
 4497              	.L352:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4498              		.loc 1 4282 6 is_stmt 1 view .LVU1208
 4499 006e 3000     		movs	r0, r6
 4500 0070 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4501              	.LVL357:
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4502              		.loc 1 4283 35 view .LVU1209
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4503              		.loc 1 4289 6 view .LVU1210
 4504 0074 FFF7FEFF 		bl	vPortYield
 4505              	.LVL358:
 4506 0078 DAE7     		b	.L348
 4507              	.L351:
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4508              		.loc 1 4321 13 is_stmt 0 view .LVU1211
 4509 007a 0024     		movs	r4, #0
 4510              	.LVL359:
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4511              		.loc 1 4321 13 view .LVU1212
 4512 007c EEE7     		b	.L350
 4513              	.L354:
 4514 007e C046     		.align	2
 4515              	.L353:
 4516 0080 00000000 		.word	.LANCHOR9
 4517              		.cfi_endproc
 4518              	.LFE41:
 4520              		.section	.text.xTaskGenericNotify,"ax",%progbits
 4521              		.align	1
 4522              		.global	xTaskGenericNotify
 4523              		.syntax unified
 4524              		.code	16
 4525              		.thumb_func
 4526              		.fpu softvfp
 4528              	xTaskGenericNotify:
 4529              	.LVL360:
 4530              	.LFB42:
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4531              		.loc 1 4344 2 is_stmt 1 view -0
 4532              		.cfi_startproc
 4533              		@ args = 0, pretend = 0, frame = 0
 4534              		@ frame_needed = 0, uses_anonymous_args = 0
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4535              		.loc 1 4344 2 is_stmt 0 view .LVU1214
 4536 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4537              	.LCFI33:
 4538              		.cfi_def_cfa_offset 24
 4539              		.cfi_offset 3, -24
 4540              		.cfi_offset 4, -20
 4541              		.cfi_offset 5, -16
ARM GAS  /tmp/cctzmfqj.s 			page 184


 4542              		.cfi_offset 6, -12
 4543              		.cfi_offset 7, -8
 4544              		.cfi_offset 14, -4
 4545 0002 0400     		movs	r4, r0
 4546 0004 0E00     		movs	r6, r1
 4547 0006 1500     		movs	r5, r2
 4548 0008 1F00     		movs	r7, r3
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 4549              		.loc 1 4345 2 is_stmt 1 view .LVU1215
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4550              		.loc 1 4346 2 view .LVU1216
 4551              	.LVL361:
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4552              		.loc 1 4347 2 view .LVU1217
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4553              		.loc 1 4349 3 view .LVU1218
 4554 000a 0028     		cmp	r0, #0
 4555 000c 16D0     		beq	.L370
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4556              		.loc 1 4349 32 discriminator 2 view .LVU1219
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4557              		.loc 1 4350 3 discriminator 2 view .LVU1220
 4558              	.LVL362:
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4559              		.loc 1 4352 3 discriminator 2 view .LVU1221
 4560 000e FFF7FEFF 		bl	vPortEnterCritical
 4561              	.LVL363:
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4562              		.loc 1 4354 4 discriminator 2 view .LVU1222
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4563              		.loc 1 4354 6 is_stmt 0 discriminator 2 view .LVU1223
 4564 0012 002F     		cmp	r7, #0
 4565 0014 01D0     		beq	.L358
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4566              		.loc 1 4356 5 is_stmt 1 view .LVU1224
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4567              		.loc 1 4356 42 is_stmt 0 view .LVU1225
 4568 0016 E36C     		ldr	r3, [r4, #76]
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4569              		.loc 1 4356 35 view .LVU1226
 4570 0018 3B60     		str	r3, [r7]
 4571              	.L358:
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4572              		.loc 1 4359 4 is_stmt 1 view .LVU1227
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4573              		.loc 1 4359 26 is_stmt 0 view .LVU1228
 4574 001a 5022     		movs	r2, #80
 4575 001c A35C     		ldrb	r3, [r4, r2]
 4576 001e DBB2     		uxtb	r3, r3
 4577              	.LVL364:
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4578              		.loc 1 4361 4 is_stmt 1 view .LVU1229
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4579              		.loc 1 4361 25 is_stmt 0 view .LVU1230
 4580 0020 0221     		movs	r1, #2
 4581 0022 A154     		strb	r1, [r4, r2]
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cctzmfqj.s 			page 185


 4582              		.loc 1 4363 4 is_stmt 1 view .LVU1231
 4583 0024 022D     		cmp	r5, #2
 4584 0026 1BD0     		beq	.L359
 4585 0028 0AD9     		bls	.L371
 4586 002a 032D     		cmp	r5, #3
 4587 002c 1DD0     		beq	.L363
 4588 002e 042D     		cmp	r5, #4
 4589 0030 14D1     		bne	.L372
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4590              		.loc 1 4378 6 view .LVU1232
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4591              		.loc 1 4378 8 is_stmt 0 view .LVU1233
 4592 0032 022B     		cmp	r3, #2
 4593 0034 1CD0     		beq	.L369
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4594              		.loc 1 4380 7 is_stmt 1 view .LVU1234
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4595              		.loc 1 4380 30 is_stmt 0 view .LVU1235
 4596 0036 E664     		str	r6, [r4, #76]
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4597              		.loc 1 4346 13 view .LVU1236
 4598 0038 0125     		movs	r5, #1
 4599 003a 09E0     		b	.L362
 4600              	.LVL365:
 4601              	.L370:
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4602              		.loc 1 4349 3 is_stmt 1 discriminator 1 view .LVU1237
 4603              		.syntax divided
 4604              	@ 4349 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4605 003c 72B6     		 cpsid i 
 4606              	@ 0 "" 2
 4607              		.thumb
 4608              		.syntax unified
 4609              	.L357:
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4610              		.loc 1 4349 3 discriminator 1 view .LVU1238
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4611              		.loc 1 4349 3 discriminator 1 view .LVU1239
 4612 003e FEE7     		b	.L357
 4613              	.LVL366:
 4614              	.L371:
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4615              		.loc 1 4349 3 is_stmt 0 discriminator 1 view .LVU1240
 4616 0040 012D     		cmp	r5, #1
 4617 0042 04D1     		bne	.L373
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4618              		.loc 1 4366 6 is_stmt 1 view .LVU1241
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4619              		.loc 1 4366 29 is_stmt 0 view .LVU1242
 4620 0044 E26C     		ldr	r2, [r4, #76]
 4621 0046 1643     		orrs	r6, r2
 4622              	.LVL367:
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4623              		.loc 1 4366 29 view .LVU1243
 4624 0048 E664     		str	r6, [r4, #76]
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4625              		.loc 1 4367 6 is_stmt 1 view .LVU1244
ARM GAS  /tmp/cctzmfqj.s 			page 186


4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4626              		.loc 1 4346 13 is_stmt 0 view .LVU1245
 4627 004a 0125     		movs	r5, #1
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4628              		.loc 1 4367 6 view .LVU1246
 4629 004c 00E0     		b	.L362
 4630              	.LVL368:
 4631              	.L373:
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4632              		.loc 1 4346 13 view .LVU1247
 4633 004e 0125     		movs	r5, #1
 4634              	.LVL369:
 4635              	.L362:
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4636              		.loc 1 4395 22 is_stmt 1 view .LVU1248
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4637              		.loc 1 4399 4 view .LVU1249
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4638              		.loc 1 4399 6 is_stmt 0 view .LVU1250
 4639 0050 012B     		cmp	r3, #1
 4640 0052 0FD0     		beq	.L374
 4641              	.LVL370:
 4642              	.L365:
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4643              		.loc 1 4436 29 is_stmt 1 view .LVU1251
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4644              		.loc 1 4439 3 view .LVU1252
 4645 0054 FFF7FEFF 		bl	vPortExitCritical
 4646              	.LVL371:
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4647              		.loc 1 4441 3 view .LVU1253
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4648              		.loc 1 4442 2 is_stmt 0 view .LVU1254
 4649 0058 2800     		movs	r0, r5
 4650              		@ sp needed
 4651              	.LVL372:
 4652              	.LVL373:
 4653              	.LVL374:
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4654              		.loc 1 4442 2 view .LVU1255
 4655 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4656              	.LVL375:
 4657              	.L372:
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4658              		.loc 1 4346 13 view .LVU1256
 4659 005c 0125     		movs	r5, #1
 4660 005e F7E7     		b	.L362
 4661              	.L359:
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4662              		.loc 1 4370 6 is_stmt 1 view .LVU1257
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4663              		.loc 1 4370 13 is_stmt 0 view .LVU1258
 4664 0060 E26C     		ldr	r2, [r4, #76]
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4665              		.loc 1 4370 32 view .LVU1259
 4666 0062 0132     		adds	r2, r2, #1
 4667 0064 E264     		str	r2, [r4, #76]
ARM GAS  /tmp/cctzmfqj.s 			page 187


4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4668              		.loc 1 4371 6 is_stmt 1 view .LVU1260
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4669              		.loc 1 4346 13 is_stmt 0 view .LVU1261
 4670 0066 0125     		movs	r5, #1
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4671              		.loc 1 4371 6 view .LVU1262
 4672 0068 F2E7     		b	.L362
 4673              	.L363:
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4674              		.loc 1 4374 6 is_stmt 1 view .LVU1263
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4675              		.loc 1 4374 29 is_stmt 0 view .LVU1264
 4676 006a E664     		str	r6, [r4, #76]
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4677              		.loc 1 4375 6 is_stmt 1 view .LVU1265
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4678              		.loc 1 4346 13 is_stmt 0 view .LVU1266
 4679 006c 0125     		movs	r5, #1
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4680              		.loc 1 4375 6 view .LVU1267
 4681 006e EFE7     		b	.L362
 4682              	.L369:
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4683              		.loc 1 4385 15 view .LVU1268
 4684 0070 0025     		movs	r5, #0
 4685 0072 EDE7     		b	.L362
 4686              	.LVL376:
 4687              	.L374:
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4688              		.loc 1 4401 5 is_stmt 1 view .LVU1269
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4689              		.loc 1 4401 14 is_stmt 0 view .LVU1270
 4690 0074 261D     		adds	r6, r4, #4
 4691 0076 3000     		movs	r0, r6
 4692 0078 FFF7FEFF 		bl	uxListRemove
 4693              	.LVL377:
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4694              		.loc 1 4402 5 is_stmt 1 view .LVU1271
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4695              		.loc 1 4402 5 view .LVU1272
 4696 007c E26A     		ldr	r2, [r4, #44]
 4697 007e 0E4B     		ldr	r3, .L375
 4698 0080 1B68     		ldr	r3, [r3]
 4699 0082 9A42     		cmp	r2, r3
 4700 0084 01D9     		bls	.L366
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4701              		.loc 1 4402 5 discriminator 1 view .LVU1273
 4702 0086 0C4B     		ldr	r3, .L375
 4703 0088 1A60     		str	r2, [r3]
 4704              	.L366:
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4705              		.loc 1 4402 5 discriminator 3 view .LVU1274
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4706              		.loc 1 4402 5 discriminator 3 view .LVU1275
 4707 008a 9300     		lsls	r3, r2, #2
 4708 008c 9B18     		adds	r3, r3, r2
ARM GAS  /tmp/cctzmfqj.s 			page 188


 4709 008e 9800     		lsls	r0, r3, #2
 4710 0090 0A4B     		ldr	r3, .L375+4
 4711 0092 C018     		adds	r0, r0, r3
 4712 0094 3100     		movs	r1, r6
 4713 0096 FFF7FEFF 		bl	vListInsertEnd
 4714              	.LVL378:
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4715              		.loc 1 4402 35 discriminator 3 view .LVU1276
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4716              		.loc 1 4405 5 discriminator 3 view .LVU1277
 4717 009a A36A     		ldr	r3, [r4, #40]
 4718 009c 002B     		cmp	r3, #0
 4719 009e 01D0     		beq	.L367
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4720              		.loc 1 4405 5 discriminator 1 view .LVU1278
 4721              		.syntax divided
 4722              	@ 4405 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4723 00a0 72B6     		 cpsid i 
 4724              	@ 0 "" 2
 4725              		.thumb
 4726              		.syntax unified
 4727              	.L368:
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4728              		.loc 1 4405 5 discriminator 2 view .LVU1279
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4729              		.loc 1 4405 5 discriminator 2 view .LVU1280
 4730 00a2 FEE7     		b	.L368
 4731              	.L367:
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4732              		.loc 1 4405 82 discriminator 2 view .LVU1281
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4733              		.loc 1 4423 5 discriminator 2 view .LVU1282
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4734              		.loc 1 4423 14 is_stmt 0 discriminator 2 view .LVU1283
 4735 00a4 E26A     		ldr	r2, [r4, #44]
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4736              		.loc 1 4423 41 discriminator 2 view .LVU1284
 4737 00a6 064B     		ldr	r3, .L375+8
 4738 00a8 1B68     		ldr	r3, [r3]
 4739 00aa DB6A     		ldr	r3, [r3, #44]
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4740              		.loc 1 4423 7 discriminator 2 view .LVU1285
 4741 00ac 9A42     		cmp	r2, r3
 4742 00ae D1D9     		bls	.L365
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4743              		.loc 1 4427 6 is_stmt 1 view .LVU1286
 4744 00b0 FFF7FEFF 		bl	vPortYield
 4745              	.LVL379:
 4746 00b4 CEE7     		b	.L365
 4747              	.L376:
 4748 00b6 C046     		.align	2
 4749              	.L375:
 4750 00b8 00000000 		.word	.LANCHOR12
 4751 00bc 00000000 		.word	pxReadyTasksLists
 4752 00c0 00000000 		.word	.LANCHOR9
 4753              		.cfi_endproc
 4754              	.LFE42:
ARM GAS  /tmp/cctzmfqj.s 			page 189


 4756              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4757              		.align	1
 4758              		.global	xTaskGenericNotifyFromISR
 4759              		.syntax unified
 4760              		.code	16
 4761              		.thumb_func
 4762              		.fpu softvfp
 4764              	xTaskGenericNotifyFromISR:
 4765              	.LVL380:
 4766              	.LFB43:
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4767              		.loc 1 4450 2 view -0
 4768              		.cfi_startproc
 4769              		@ args = 4, pretend = 0, frame = 8
 4770              		@ frame_needed = 0, uses_anonymous_args = 0
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4771              		.loc 1 4450 2 is_stmt 0 view .LVU1288
 4772 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4773              	.LCFI34:
 4774              		.cfi_def_cfa_offset 20
 4775              		.cfi_offset 4, -20
 4776              		.cfi_offset 5, -16
 4777              		.cfi_offset 6, -12
 4778              		.cfi_offset 7, -8
 4779              		.cfi_offset 14, -4
 4780 0002 83B0     		sub	sp, sp, #12
 4781              	.LCFI35:
 4782              		.cfi_def_cfa_offset 32
 4783 0004 0400     		movs	r4, r0
 4784 0006 0F00     		movs	r7, r1
 4785 0008 1600     		movs	r6, r2
 4786 000a 1D00     		movs	r5, r3
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4787              		.loc 1 4451 2 is_stmt 1 view .LVU1289
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 4788              		.loc 1 4452 2 view .LVU1290
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4789              		.loc 1 4453 2 view .LVU1291
 4790              	.LVL381:
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4791              		.loc 1 4454 2 view .LVU1292
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4792              		.loc 1 4456 3 view .LVU1293
 4793 000c 0028     		cmp	r0, #0
 4794 000e 17D0     		beq	.L395
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4795              		.loc 1 4456 32 discriminator 2 view .LVU1294
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4796              		.loc 1 4474 45 discriminator 2 view .LVU1295
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4797              		.loc 1 4476 3 discriminator 2 view .LVU1296
 4798              	.LVL382:
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4799              		.loc 1 4478 3 discriminator 2 view .LVU1297
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4800              		.loc 1 4478 28 is_stmt 0 discriminator 2 view .LVU1298
 4801 0010 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
ARM GAS  /tmp/cctzmfqj.s 			page 190


 4802              	.LVL383:
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4803              		.loc 1 4478 28 discriminator 2 view .LVU1299
 4804 0014 0190     		str	r0, [sp, #4]
 4805              	.LVL384:
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4806              		.loc 1 4480 4 is_stmt 1 discriminator 2 view .LVU1300
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4807              		.loc 1 4480 6 is_stmt 0 discriminator 2 view .LVU1301
 4808 0016 002D     		cmp	r5, #0
 4809 0018 01D0     		beq	.L380
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4810              		.loc 1 4482 5 is_stmt 1 view .LVU1302
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4811              		.loc 1 4482 42 is_stmt 0 view .LVU1303
 4812 001a E36C     		ldr	r3, [r4, #76]
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4813              		.loc 1 4482 35 view .LVU1304
 4814 001c 2B60     		str	r3, [r5]
 4815              	.L380:
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4816              		.loc 1 4485 4 is_stmt 1 view .LVU1305
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4817              		.loc 1 4485 26 is_stmt 0 view .LVU1306
 4818 001e 5022     		movs	r2, #80
 4819 0020 A35C     		ldrb	r3, [r4, r2]
 4820 0022 DBB2     		uxtb	r3, r3
 4821              	.LVL385:
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4822              		.loc 1 4486 4 is_stmt 1 view .LVU1307
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4823              		.loc 1 4486 25 is_stmt 0 view .LVU1308
 4824 0024 0221     		movs	r1, #2
 4825 0026 A154     		strb	r1, [r4, r2]
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4826              		.loc 1 4488 4 is_stmt 1 view .LVU1309
 4827 0028 022E     		cmp	r6, #2
 4828 002a 1CD0     		beq	.L381
 4829 002c 0AD9     		bls	.L396
 4830 002e 032E     		cmp	r6, #3
 4831 0030 1ED0     		beq	.L385
 4832 0032 042E     		cmp	r6, #4
 4833 0034 15D1     		bne	.L397
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4834              		.loc 1 4503 6 view .LVU1310
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4835              		.loc 1 4503 8 is_stmt 0 view .LVU1311
 4836 0036 022B     		cmp	r3, #2
 4837 0038 1DD0     		beq	.L394
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4838              		.loc 1 4505 7 is_stmt 1 view .LVU1312
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4839              		.loc 1 4505 30 is_stmt 0 view .LVU1313
 4840 003a E764     		str	r7, [r4, #76]
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4841              		.loc 1 4453 13 view .LVU1314
 4842 003c 0127     		movs	r7, #1
ARM GAS  /tmp/cctzmfqj.s 			page 191


 4843              	.LVL386:
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4844              		.loc 1 4453 13 view .LVU1315
 4845 003e 09E0     		b	.L384
 4846              	.LVL387:
 4847              	.L395:
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4848              		.loc 1 4456 3 is_stmt 1 discriminator 1 view .LVU1316
 4849              		.syntax divided
 4850              	@ 4456 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4851 0040 72B6     		 cpsid i 
 4852              	@ 0 "" 2
 4853              		.thumb
 4854              		.syntax unified
 4855              	.L379:
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4856              		.loc 1 4456 3 discriminator 1 view .LVU1317
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4857              		.loc 1 4456 3 discriminator 1 view .LVU1318
 4858 0042 FEE7     		b	.L379
 4859              	.LVL388:
 4860              	.L396:
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4861              		.loc 1 4456 3 is_stmt 0 discriminator 1 view .LVU1319
 4862 0044 012E     		cmp	r6, #1
 4863 0046 04D1     		bne	.L398
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4864              		.loc 1 4491 6 is_stmt 1 view .LVU1320
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4865              		.loc 1 4491 29 is_stmt 0 view .LVU1321
 4866 0048 E26C     		ldr	r2, [r4, #76]
 4867 004a 3A43     		orrs	r2, r7
 4868 004c E264     		str	r2, [r4, #76]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4869              		.loc 1 4492 6 is_stmt 1 view .LVU1322
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4870              		.loc 1 4453 13 is_stmt 0 view .LVU1323
 4871 004e 0127     		movs	r7, #1
 4872              	.LVL389:
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4873              		.loc 1 4492 6 view .LVU1324
 4874 0050 00E0     		b	.L384
 4875              	.LVL390:
 4876              	.L398:
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4877              		.loc 1 4453 13 view .LVU1325
 4878 0052 0127     		movs	r7, #1
 4879              	.LVL391:
 4880              	.L384:
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4881              		.loc 1 4520 31 is_stmt 1 view .LVU1326
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4882              		.loc 1 4524 4 view .LVU1327
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4883              		.loc 1 4524 6 is_stmt 0 view .LVU1328
 4884 0054 012B     		cmp	r3, #1
 4885 0056 33D1     		bne	.L387
ARM GAS  /tmp/cctzmfqj.s 			page 192


4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4886              		.loc 1 4527 5 is_stmt 1 view .LVU1329
 4887 0058 A36A     		ldr	r3, [r4, #40]
 4888              	.LVL392:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4889              		.loc 1 4527 5 is_stmt 0 view .LVU1330
 4890 005a 002B     		cmp	r3, #0
 4891 005c 0DD0     		beq	.L388
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4892              		.loc 1 4527 5 is_stmt 1 discriminator 1 view .LVU1331
 4893              		.syntax divided
 4894              	@ 4527 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4895 005e 72B6     		 cpsid i 
 4896              	@ 0 "" 2
 4897              		.thumb
 4898              		.syntax unified
 4899              	.L389:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4900              		.loc 1 4527 5 discriminator 2 view .LVU1332
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4901              		.loc 1 4527 5 discriminator 2 view .LVU1333
 4902 0060 FEE7     		b	.L389
 4903              	.LVL393:
 4904              	.L397:
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4905              		.loc 1 4453 13 is_stmt 0 view .LVU1334
 4906 0062 0127     		movs	r7, #1
 4907              	.LVL394:
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4908              		.loc 1 4453 13 view .LVU1335
 4909 0064 F6E7     		b	.L384
 4910              	.LVL395:
 4911              	.L381:
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4912              		.loc 1 4495 6 is_stmt 1 view .LVU1336
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4913              		.loc 1 4495 13 is_stmt 0 view .LVU1337
 4914 0066 E26C     		ldr	r2, [r4, #76]
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4915              		.loc 1 4495 32 view .LVU1338
 4916 0068 0132     		adds	r2, r2, #1
 4917 006a E264     		str	r2, [r4, #76]
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4918              		.loc 1 4496 6 is_stmt 1 view .LVU1339
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4919              		.loc 1 4453 13 is_stmt 0 view .LVU1340
 4920 006c 0127     		movs	r7, #1
 4921              	.LVL396:
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4922              		.loc 1 4496 6 view .LVU1341
 4923 006e F1E7     		b	.L384
 4924              	.LVL397:
 4925              	.L385:
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4926              		.loc 1 4499 6 is_stmt 1 view .LVU1342
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4927              		.loc 1 4499 29 is_stmt 0 view .LVU1343
ARM GAS  /tmp/cctzmfqj.s 			page 193


 4928 0070 E764     		str	r7, [r4, #76]
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4929              		.loc 1 4500 6 is_stmt 1 view .LVU1344
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4930              		.loc 1 4453 13 is_stmt 0 view .LVU1345
 4931 0072 0127     		movs	r7, #1
 4932              	.LVL398:
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4933              		.loc 1 4500 6 view .LVU1346
 4934 0074 EEE7     		b	.L384
 4935              	.LVL399:
 4936              	.L394:
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4937              		.loc 1 4510 15 view .LVU1347
 4938 0076 0027     		movs	r7, #0
 4939              	.LVL400:
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4940              		.loc 1 4510 15 view .LVU1348
 4941 0078 ECE7     		b	.L384
 4942              	.LVL401:
 4943              	.L388:
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4944              		.loc 1 4527 82 is_stmt 1 discriminator 2 view .LVU1349
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4945              		.loc 1 4529 5 discriminator 2 view .LVU1350
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4946              		.loc 1 4529 30 is_stmt 0 discriminator 2 view .LVU1351
 4947 007a 194B     		ldr	r3, .L399
 4948 007c 1B68     		ldr	r3, [r3]
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4949              		.loc 1 4529 7 discriminator 2 view .LVU1352
 4950 007e 002B     		cmp	r3, #0
 4951 0080 24D1     		bne	.L390
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4952              		.loc 1 4531 6 is_stmt 1 view .LVU1353
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4953              		.loc 1 4531 15 is_stmt 0 view .LVU1354
 4954 0082 261D     		adds	r6, r4, #4
 4955 0084 3000     		movs	r0, r6
 4956              	.LVL402:
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4957              		.loc 1 4531 15 view .LVU1355
 4958 0086 FFF7FEFF 		bl	uxListRemove
 4959              	.LVL403:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4960              		.loc 1 4532 6 is_stmt 1 view .LVU1356
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4961              		.loc 1 4532 6 view .LVU1357
 4962 008a E26A     		ldr	r2, [r4, #44]
 4963 008c 154B     		ldr	r3, .L399+4
 4964 008e 1B68     		ldr	r3, [r3]
 4965 0090 9A42     		cmp	r2, r3
 4966 0092 01D9     		bls	.L391
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4967              		.loc 1 4532 6 discriminator 1 view .LVU1358
 4968 0094 134B     		ldr	r3, .L399+4
 4969 0096 1A60     		str	r2, [r3]
ARM GAS  /tmp/cctzmfqj.s 			page 194


 4970              	.L391:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4971              		.loc 1 4532 6 discriminator 3 view .LVU1359
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4972              		.loc 1 4532 6 discriminator 3 view .LVU1360
 4973 0098 9300     		lsls	r3, r2, #2
 4974 009a 9B18     		adds	r3, r3, r2
 4975 009c 9800     		lsls	r0, r3, #2
 4976 009e 124B     		ldr	r3, .L399+8
 4977 00a0 C018     		adds	r0, r0, r3
 4978 00a2 3100     		movs	r1, r6
 4979 00a4 FFF7FEFF 		bl	vListInsertEnd
 4980              	.LVL404:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4981              		.loc 1 4532 36 discriminator 3 view .LVU1361
 4982              	.L392:
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4983              		.loc 1 4541 5 view .LVU1362
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4984              		.loc 1 4541 14 is_stmt 0 view .LVU1363
 4985 00a8 E26A     		ldr	r2, [r4, #44]
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4986              		.loc 1 4541 41 view .LVU1364
 4987 00aa 104B     		ldr	r3, .L399+12
 4988 00ac 1B68     		ldr	r3, [r3]
 4989 00ae DB6A     		ldr	r3, [r3, #44]
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4990              		.loc 1 4541 7 view .LVU1365
 4991 00b0 9A42     		cmp	r2, r3
 4992 00b2 05D9     		bls	.L387
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4993              		.loc 1 4545 6 is_stmt 1 view .LVU1366
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4994              		.loc 1 4545 8 is_stmt 0 view .LVU1367
 4995 00b4 089B     		ldr	r3, [sp, #32]
 4996 00b6 002B     		cmp	r3, #0
 4997 00b8 0ED0     		beq	.L393
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4998              		.loc 1 4547 7 is_stmt 1 view .LVU1368
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4999              		.loc 1 4547 34 is_stmt 0 view .LVU1369
 5000 00ba 0123     		movs	r3, #1
 5001 00bc 089A     		ldr	r2, [sp, #32]
 5002 00be 1360     		str	r3, [r2]
 5003              	.L387:
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5004              		.loc 1 4559 30 is_stmt 1 view .LVU1370
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5005              		.loc 1 4563 3 view .LVU1371
 5006 00c0 0198     		ldr	r0, [sp, #4]
 5007 00c2 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 5008              	.LVL405:
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5009              		.loc 1 4565 3 view .LVU1372
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5010              		.loc 1 4566 2 is_stmt 0 view .LVU1373
 5011 00c6 3800     		movs	r0, r7
ARM GAS  /tmp/cctzmfqj.s 			page 195


 5012 00c8 03B0     		add	sp, sp, #12
 5013              		@ sp needed
 5014              	.LVL406:
 5015              	.LVL407:
 5016              	.LVL408:
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5017              		.loc 1 4566 2 view .LVU1374
 5018 00ca F0BD     		pop	{r4, r5, r6, r7, pc}
 5019              	.LVL409:
 5020              	.L390:
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5021              		.loc 1 4538 6 is_stmt 1 view .LVU1375
 5022 00cc 2100     		movs	r1, r4
 5023 00ce 1831     		adds	r1, r1, #24
 5024 00d0 0748     		ldr	r0, .L399+16
 5025              	.LVL410:
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5026              		.loc 1 4538 6 is_stmt 0 view .LVU1376
 5027 00d2 FFF7FEFF 		bl	vListInsertEnd
 5028              	.LVL411:
 5029 00d6 E7E7     		b	.L392
 5030              	.L393:
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5031              		.loc 1 4554 7 is_stmt 1 view .LVU1377
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5032              		.loc 1 4554 21 is_stmt 0 view .LVU1378
 5033 00d8 064B     		ldr	r3, .L399+20
 5034 00da 0122     		movs	r2, #1
 5035 00dc 1A60     		str	r2, [r3]
 5036 00de EFE7     		b	.L387
 5037              	.L400:
 5038              		.align	2
 5039              	.L399:
 5040 00e0 00000000 		.word	.LANCHOR15
 5041 00e4 00000000 		.word	.LANCHOR12
 5042 00e8 00000000 		.word	pxReadyTasksLists
 5043 00ec 00000000 		.word	.LANCHOR9
 5044 00f0 00000000 		.word	.LANCHOR1
 5045 00f4 00000000 		.word	.LANCHOR19
 5046              		.cfi_endproc
 5047              	.LFE43:
 5049              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5050              		.align	1
 5051              		.global	vTaskNotifyGiveFromISR
 5052              		.syntax unified
 5053              		.code	16
 5054              		.thumb_func
 5055              		.fpu softvfp
 5057              	vTaskNotifyGiveFromISR:
 5058              	.LVL412:
 5059              	.LFB44:
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5060              		.loc 1 4574 2 is_stmt 1 view -0
 5061              		.cfi_startproc
 5062              		@ args = 0, pretend = 0, frame = 0
 5063              		@ frame_needed = 0, uses_anonymous_args = 0
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
ARM GAS  /tmp/cctzmfqj.s 			page 196


 5064              		.loc 1 4574 2 is_stmt 0 view .LVU1380
 5065 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5066              	.LCFI36:
 5067              		.cfi_def_cfa_offset 24
 5068              		.cfi_offset 3, -24
 5069              		.cfi_offset 4, -20
 5070              		.cfi_offset 5, -16
 5071              		.cfi_offset 6, -12
 5072              		.cfi_offset 7, -8
 5073              		.cfi_offset 14, -4
 5074 0002 0400     		movs	r4, r0
 5075 0004 0F00     		movs	r7, r1
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5076              		.loc 1 4575 2 is_stmt 1 view .LVU1381
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5077              		.loc 1 4576 2 view .LVU1382
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5078              		.loc 1 4577 2 view .LVU1383
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5079              		.loc 1 4579 3 view .LVU1384
 5080 0006 0028     		cmp	r0, #0
 5081 0008 10D0     		beq	.L411
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5082              		.loc 1 4579 32 discriminator 2 view .LVU1385
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5083              		.loc 1 4597 45 discriminator 2 view .LVU1386
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5084              		.loc 1 4599 3 discriminator 2 view .LVU1387
 5085              	.LVL413:
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5086              		.loc 1 4601 3 discriminator 2 view .LVU1388
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5087              		.loc 1 4601 28 is_stmt 0 discriminator 2 view .LVU1389
 5088 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 5089              	.LVL414:
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5090              		.loc 1 4601 28 discriminator 2 view .LVU1390
 5091 000e 0600     		movs	r6, r0
 5092              	.LVL415:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5093              		.loc 1 4603 4 is_stmt 1 discriminator 2 view .LVU1391
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5094              		.loc 1 4603 26 is_stmt 0 discriminator 2 view .LVU1392
 5095 0010 5023     		movs	r3, #80
 5096 0012 E25C     		ldrb	r2, [r4, r3]
 5097              	.LVL416:
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5098              		.loc 1 4604 4 is_stmt 1 discriminator 2 view .LVU1393
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5099              		.loc 1 4604 25 is_stmt 0 discriminator 2 view .LVU1394
 5100 0014 0221     		movs	r1, #2
 5101 0016 E154     		strb	r1, [r4, r3]
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5102              		.loc 1 4608 4 is_stmt 1 discriminator 2 view .LVU1395
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5103              		.loc 1 4608 11 is_stmt 0 discriminator 2 view .LVU1396
 5104 0018 E36C     		ldr	r3, [r4, #76]
ARM GAS  /tmp/cctzmfqj.s 			page 197


4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5105              		.loc 1 4608 30 discriminator 2 view .LVU1397
 5106 001a 0133     		adds	r3, r3, #1
 5107 001c E364     		str	r3, [r4, #76]
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5108              		.loc 1 4610 36 is_stmt 1 discriminator 2 view .LVU1398
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5109              		.loc 1 4614 4 discriminator 2 view .LVU1399
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5110              		.loc 1 4614 6 is_stmt 0 discriminator 2 view .LVU1400
 5111 001e 012A     		cmp	r2, #1
 5112 0020 27D1     		bne	.L404
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5113              		.loc 1 4617 5 is_stmt 1 view .LVU1401
 5114 0022 A36A     		ldr	r3, [r4, #40]
 5115 0024 002B     		cmp	r3, #0
 5116 0026 03D0     		beq	.L405
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5117              		.loc 1 4617 5 discriminator 1 view .LVU1402
 5118              		.syntax divided
 5119              	@ 4617 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5120 0028 72B6     		 cpsid i 
 5121              	@ 0 "" 2
 5122              		.thumb
 5123              		.syntax unified
 5124              	.L406:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5125              		.loc 1 4617 5 discriminator 2 view .LVU1403
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5126              		.loc 1 4617 5 discriminator 2 view .LVU1404
 5127 002a FEE7     		b	.L406
 5128              	.LVL417:
 5129              	.L411:
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5130              		.loc 1 4579 3 discriminator 1 view .LVU1405
 5131              		.syntax divided
 5132              	@ 4579 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5133 002c 72B6     		 cpsid i 
 5134              	@ 0 "" 2
 5135              		.thumb
 5136              		.syntax unified
 5137              	.L403:
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5138              		.loc 1 4579 3 discriminator 1 view .LVU1406
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5139              		.loc 1 4579 3 discriminator 1 view .LVU1407
 5140 002e FEE7     		b	.L403
 5141              	.LVL418:
 5142              	.L405:
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5143              		.loc 1 4617 82 discriminator 2 view .LVU1408
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5144              		.loc 1 4619 5 discriminator 2 view .LVU1409
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5145              		.loc 1 4619 30 is_stmt 0 discriminator 2 view .LVU1410
 5146 0030 174B     		ldr	r3, .L412
 5147 0032 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cctzmfqj.s 			page 198


4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5148              		.loc 1 4619 7 discriminator 2 view .LVU1411
 5149 0034 002B     		cmp	r3, #0
 5150 0036 20D1     		bne	.L407
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5151              		.loc 1 4621 6 is_stmt 1 view .LVU1412
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5152              		.loc 1 4621 15 is_stmt 0 view .LVU1413
 5153 0038 251D     		adds	r5, r4, #4
 5154 003a 2800     		movs	r0, r5
 5155              	.LVL419:
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5156              		.loc 1 4621 15 view .LVU1414
 5157 003c FFF7FEFF 		bl	uxListRemove
 5158              	.LVL420:
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5159              		.loc 1 4622 6 is_stmt 1 view .LVU1415
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5160              		.loc 1 4622 6 view .LVU1416
 5161 0040 E26A     		ldr	r2, [r4, #44]
 5162 0042 144B     		ldr	r3, .L412+4
 5163 0044 1B68     		ldr	r3, [r3]
 5164 0046 9A42     		cmp	r2, r3
 5165 0048 01D9     		bls	.L408
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5166              		.loc 1 4622 6 discriminator 1 view .LVU1417
 5167 004a 124B     		ldr	r3, .L412+4
 5168 004c 1A60     		str	r2, [r3]
 5169              	.L408:
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5170              		.loc 1 4622 6 discriminator 3 view .LVU1418
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5171              		.loc 1 4622 6 discriminator 3 view .LVU1419
 5172 004e 9300     		lsls	r3, r2, #2
 5173 0050 9B18     		adds	r3, r3, r2
 5174 0052 9800     		lsls	r0, r3, #2
 5175 0054 104B     		ldr	r3, .L412+8
 5176 0056 C018     		adds	r0, r0, r3
 5177 0058 2900     		movs	r1, r5
 5178 005a FFF7FEFF 		bl	vListInsertEnd
 5179              	.LVL421:
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5180              		.loc 1 4622 36 discriminator 3 view .LVU1420
 5181              	.L409:
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5182              		.loc 1 4631 5 view .LVU1421
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5183              		.loc 1 4631 14 is_stmt 0 view .LVU1422
 5184 005e E26A     		ldr	r2, [r4, #44]
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5185              		.loc 1 4631 41 view .LVU1423
 5186 0060 0E4B     		ldr	r3, .L412+12
 5187 0062 1B68     		ldr	r3, [r3]
 5188 0064 DB6A     		ldr	r3, [r3, #44]
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5189              		.loc 1 4631 7 view .LVU1424
 5190 0066 9A42     		cmp	r2, r3
ARM GAS  /tmp/cctzmfqj.s 			page 199


 5191 0068 03D9     		bls	.L404
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5192              		.loc 1 4635 6 is_stmt 1 view .LVU1425
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5193              		.loc 1 4635 8 is_stmt 0 view .LVU1426
 5194 006a 002F     		cmp	r7, #0
 5195 006c 0BD0     		beq	.L410
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5196              		.loc 1 4637 7 is_stmt 1 view .LVU1427
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5197              		.loc 1 4637 34 is_stmt 0 view .LVU1428
 5198 006e 0123     		movs	r3, #1
 5199 0070 3B60     		str	r3, [r7]
 5200              	.L404:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5201              		.loc 1 4649 30 is_stmt 1 view .LVU1429
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5202              		.loc 1 4653 3 view .LVU1430
 5203 0072 3000     		movs	r0, r6
 5204 0074 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 5205              	.LVL422:
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5206              		.loc 1 4654 2 is_stmt 0 view .LVU1431
 5207              		@ sp needed
 5208              	.LVL423:
 5209              	.LVL424:
 5210              	.LVL425:
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5211              		.loc 1 4654 2 view .LVU1432
 5212 0078 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5213              	.LVL426:
 5214              	.L407:
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5215              		.loc 1 4628 6 is_stmt 1 view .LVU1433
 5216 007a 2100     		movs	r1, r4
 5217 007c 1831     		adds	r1, r1, #24
 5218 007e 0848     		ldr	r0, .L412+16
 5219              	.LVL427:
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5220              		.loc 1 4628 6 is_stmt 0 view .LVU1434
 5221 0080 FFF7FEFF 		bl	vListInsertEnd
 5222              	.LVL428:
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5223              		.loc 1 4628 6 view .LVU1435
 5224 0084 EBE7     		b	.L409
 5225              	.L410:
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5226              		.loc 1 4644 7 is_stmt 1 view .LVU1436
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5227              		.loc 1 4644 21 is_stmt 0 view .LVU1437
 5228 0086 074B     		ldr	r3, .L412+20
 5229 0088 0122     		movs	r2, #1
 5230 008a 1A60     		str	r2, [r3]
 5231 008c F1E7     		b	.L404
 5232              	.L413:
 5233 008e C046     		.align	2
 5234              	.L412:
ARM GAS  /tmp/cctzmfqj.s 			page 200


 5235 0090 00000000 		.word	.LANCHOR15
 5236 0094 00000000 		.word	.LANCHOR12
 5237 0098 00000000 		.word	pxReadyTasksLists
 5238 009c 00000000 		.word	.LANCHOR9
 5239 00a0 00000000 		.word	.LANCHOR1
 5240 00a4 00000000 		.word	.LANCHOR19
 5241              		.cfi_endproc
 5242              	.LFE44:
 5244              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 5245              		.align	1
 5246              		.global	xTaskNotifyStateClear
 5247              		.syntax unified
 5248              		.code	16
 5249              		.thumb_func
 5250              		.fpu softvfp
 5252              	xTaskNotifyStateClear:
 5253              	.LVL429:
 5254              	.LFB45:
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5255              		.loc 1 4663 2 is_stmt 1 view -0
 5256              		.cfi_startproc
 5257              		@ args = 0, pretend = 0, frame = 0
 5258              		@ frame_needed = 0, uses_anonymous_args = 0
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5259              		.loc 1 4663 2 is_stmt 0 view .LVU1439
 5260 0000 10B5     		push	{r4, lr}
 5261              	.LCFI37:
 5262              		.cfi_def_cfa_offset 8
 5263              		.cfi_offset 4, -8
 5264              		.cfi_offset 14, -4
 5265 0002 041E     		subs	r4, r0, #0
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5266              		.loc 1 4664 2 is_stmt 1 view .LVU1440
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5267              		.loc 1 4665 2 view .LVU1441
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5268              		.loc 1 4669 3 view .LVU1442
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5269              		.loc 1 4669 11 is_stmt 0 view .LVU1443
 5270 0004 0AD0     		beq	.L418
 5271              	.LVL430:
 5272              	.L415:
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5273              		.loc 1 4671 3 is_stmt 1 discriminator 4 view .LVU1444
 5274 0006 FFF7FEFF 		bl	vPortEnterCritical
 5275              	.LVL431:
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5276              		.loc 1 4673 4 discriminator 4 view .LVU1445
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5277              		.loc 1 4673 13 is_stmt 0 discriminator 4 view .LVU1446
 5278 000a 5023     		movs	r3, #80
 5279 000c E35C     		ldrb	r3, [r4, r3]
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5280              		.loc 1 4673 6 discriminator 4 view .LVU1447
 5281 000e 022B     		cmp	r3, #2
 5282 0010 07D0     		beq	.L419
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cctzmfqj.s 			page 201


 5283              		.loc 1 4680 13 view .LVU1448
 5284 0012 0024     		movs	r4, #0
 5285              	.LVL432:
 5286              	.L416:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5287              		.loc 1 4683 3 is_stmt 1 view .LVU1449
 5288 0014 FFF7FEFF 		bl	vPortExitCritical
 5289              	.LVL433:
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5290              		.loc 1 4685 3 view .LVU1450
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5291              		.loc 1 4686 2 is_stmt 0 view .LVU1451
 5292 0018 2000     		movs	r0, r4
 5293              		@ sp needed
 5294              	.LVL434:
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5295              		.loc 1 4686 2 view .LVU1452
 5296 001a 10BD     		pop	{r4, pc}
 5297              	.LVL435:
 5298              	.L418:
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5299              		.loc 1 4669 11 discriminator 1 view .LVU1453
 5300 001c 034B     		ldr	r3, .L420
 5301 001e 1C68     		ldr	r4, [r3]
 5302              	.LVL436:
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5303              		.loc 1 4669 11 discriminator 1 view .LVU1454
 5304 0020 F1E7     		b	.L415
 5305              	.LVL437:
 5306              	.L419:
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5307              		.loc 1 4675 5 is_stmt 1 view .LVU1455
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5308              		.loc 1 4675 26 is_stmt 0 view .LVU1456
 5309 0022 4E33     		adds	r3, r3, #78
 5310 0024 0022     		movs	r2, #0
 5311 0026 E254     		strb	r2, [r4, r3]
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5312              		.loc 1 4676 5 is_stmt 1 view .LVU1457
 5313              	.LVL438:
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5314              		.loc 1 4676 13 is_stmt 0 view .LVU1458
 5315 0028 0124     		movs	r4, #1
 5316              	.LVL439:
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5317              		.loc 1 4676 13 view .LVU1459
 5318 002a F3E7     		b	.L416
 5319              	.L421:
 5320              		.align	2
 5321              	.L420:
 5322 002c 00000000 		.word	.LANCHOR9
 5323              		.cfi_endproc
 5324              	.LFE45:
 5326              		.global	pxCurrentTCB
 5327              		.section	.bss.pxCurrentTCB,"aw",%nobits
 5328              		.align	2
 5329              		.set	.LANCHOR9,. + 0
ARM GAS  /tmp/cctzmfqj.s 			page 202


 5332              	pxCurrentTCB:
 5333 0000 00000000 		.space	4
 5334              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 5335              		.align	2
 5336              		.set	.LANCHOR2,. + 0
 5339              	pxDelayedTaskList:
 5340 0000 00000000 		.space	4
 5341              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 5342              		.align	2
 5343              		.set	.LANCHOR7,. + 0
 5346              	pxOverflowDelayedTaskList:
 5347 0000 00000000 		.space	4
 5348              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 5349              		.align	2
 5352              	pxReadyTasksLists:
 5353 0000 00000000 		.space	140
 5353      00000000 
 5353      00000000 
 5353      00000000 
 5353      00000000 
 5354              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 5355              		.align	2
 5356              		.set	.LANCHOR8,. + 0
 5359              	uxCurrentNumberOfTasks:
 5360 0000 00000000 		.space	4
 5361              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 5362              		.align	2
 5363              		.set	.LANCHOR14,. + 0
 5366              	uxDeletedTasksWaitingCleanUp:
 5367 0000 00000000 		.space	4
 5368              		.section	.bss.uxPendedTicks,"aw",%nobits
 5369              		.align	2
 5370              		.set	.LANCHOR18,. + 0
 5373              	uxPendedTicks:
 5374 0000 00000000 		.space	4
 5375              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 5376              		.align	2
 5377              		.set	.LANCHOR15,. + 0
 5380              	uxSchedulerSuspended:
 5381 0000 00000000 		.space	4
 5382              		.section	.bss.uxTaskNumber,"aw",%nobits
 5383              		.align	2
 5384              		.set	.LANCHOR11,. + 0
 5387              	uxTaskNumber:
 5388 0000 00000000 		.space	4
 5389              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 5390              		.align	2
 5391              		.set	.LANCHOR12,. + 0
 5394              	uxTopReadyPriority:
 5395 0000 00000000 		.space	4
 5396              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 5397              		.align	2
 5398              		.set	.LANCHOR4,. + 0
 5401              	xDelayedTaskList1:
 5402 0000 00000000 		.space	20
 5402      00000000 
 5402      00000000 
ARM GAS  /tmp/cctzmfqj.s 			page 203


 5402      00000000 
 5402      00000000 
 5403              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 5404              		.align	2
 5405              		.set	.LANCHOR5,. + 0
 5408              	xDelayedTaskList2:
 5409 0000 00000000 		.space	20
 5409      00000000 
 5409      00000000 
 5409      00000000 
 5409      00000000 
 5410              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 5411              		.align	2
 5412              		.set	.LANCHOR16,. + 0
 5415              	xIdleTaskHandle:
 5416 0000 00000000 		.space	4
 5417              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 5418              		.align	2
 5419              		.set	.LANCHOR3,. + 0
 5422              	xNextTaskUnblockTime:
 5423 0000 00000000 		.space	4
 5424              		.section	.bss.xNumOfOverflows,"aw",%nobits
 5425              		.align	2
 5426              		.set	.LANCHOR17,. + 0
 5429              	xNumOfOverflows:
 5430 0000 00000000 		.space	4
 5431              		.section	.bss.xPendingReadyList,"aw",%nobits
 5432              		.align	2
 5433              		.set	.LANCHOR1,. + 0
 5436              	xPendingReadyList:
 5437 0000 00000000 		.space	20
 5437      00000000 
 5437      00000000 
 5437      00000000 
 5437      00000000 
 5438              		.section	.bss.xSchedulerRunning,"aw",%nobits
 5439              		.align	2
 5440              		.set	.LANCHOR10,. + 0
 5443              	xSchedulerRunning:
 5444 0000 00000000 		.space	4
 5445              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 5446              		.align	2
 5447              		.set	.LANCHOR0,. + 0
 5450              	xSuspendedTaskList:
 5451 0000 00000000 		.space	20
 5451      00000000 
 5451      00000000 
 5451      00000000 
 5451      00000000 
 5452              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 5453              		.align	2
 5454              		.set	.LANCHOR6,. + 0
 5457              	xTasksWaitingTermination:
 5458 0000 00000000 		.space	20
 5458      00000000 
 5458      00000000 
 5458      00000000 
ARM GAS  /tmp/cctzmfqj.s 			page 204


 5458      00000000 
 5459              		.section	.bss.xTickCount,"aw",%nobits
 5460              		.align	2
 5461              		.set	.LANCHOR13,. + 0
 5464              	xTickCount:
 5465 0000 00000000 		.space	4
 5466              		.section	.bss.xYieldPending,"aw",%nobits
 5467              		.align	2
 5468              		.set	.LANCHOR19,. + 0
 5471              	xYieldPending:
 5472 0000 00000000 		.space	4
 5473              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 5474              		.align	2
 5475              	.LC44:
 5476 0000 49444C45 		.ascii	"IDLE\000"
 5476      00
 5477              		.text
 5478              	.Letext0:
 5479              		.file 2 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 5480              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 5481              		.file 4 "/usr/arm-none-eabi/include/sys/lock.h"
 5482              		.file 5 "/usr/arm-none-eabi/include/sys/_types.h"
 5483              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 5484              		.file 7 "/usr/arm-none-eabi/include/stdlib.h"
 5485              		.file 8 "/usr/arm-none-eabi/include/sys/_stdint.h"
 5486              		.file 9 "Inc/FreeRTOSConfig.h"
 5487              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 5488              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 5489              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 5490              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 5491              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cctzmfqj.s 			page 205


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/cctzmfqj.s:16     .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/cctzmfqj.s:23     .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/cctzmfqj.s:100    .text.prvTaskIsTaskSuspended:000000000000002c $d
     /tmp/cctzmfqj.s:106    .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/cctzmfqj.s:112    .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/cctzmfqj.s:160    .text.prvResetNextTaskUnblockTime:0000000000000024 $d
     /tmp/cctzmfqj.s:166    .text.prvDeleteTCB:0000000000000000 $t
     /tmp/cctzmfqj.s:172    .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/cctzmfqj.s:206    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/cctzmfqj.s:212    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/cctzmfqj.s:372    .text.prvInitialiseNewTask:0000000000000080 $d
     /tmp/cctzmfqj.s:377    .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/cctzmfqj.s:383    .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/cctzmfqj.s:458    .text.prvInitialiseTaskLists:0000000000000048 $d
     /tmp/cctzmfqj.s:5352   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/cctzmfqj.s:470    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/cctzmfqj.s:476    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/cctzmfqj.s:612    .text.prvAddNewTaskToReadyList:0000000000000088 $d
     /tmp/cctzmfqj.s:622    .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/cctzmfqj.s:628    .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/cctzmfqj.s:739    .text.prvAddCurrentTaskToDelayedList:0000000000000064 $d
     /tmp/cctzmfqj.s:749    .text.xTaskCreate:0000000000000000 $t
     /tmp/cctzmfqj.s:756    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/cctzmfqj.s:881    .text.vTaskDelete:0000000000000000 $t
     /tmp/cctzmfqj.s:888    .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/cctzmfqj.s:1035   .text.vTaskDelete:0000000000000084 $d
     /tmp/cctzmfqj.s:1046   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/cctzmfqj.s:1053   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/cctzmfqj.s:1103   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/cctzmfqj.s:1108   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/cctzmfqj.s:1115   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/cctzmfqj.s:1167   .text.uxTaskPriorityGetFromISR:000000000000001c $d
     /tmp/cctzmfqj.s:1172   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/cctzmfqj.s:1179   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/cctzmfqj.s:1398   .text.vTaskPrioritySet:00000000000000b0 $d
     /tmp/cctzmfqj.s:1405   .text.vTaskResume:0000000000000000 $t
     /tmp/cctzmfqj.s:1412   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/cctzmfqj.s:1524   .text.vTaskResume:0000000000000060 $d
     /tmp/cctzmfqj.s:1531   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/cctzmfqj.s:1538   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/cctzmfqj.s:1682   .text.xTaskResumeFromISR:0000000000000078 $d
     /tmp/cctzmfqj.s:1691   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/cctzmfqj.s:1698   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/cctzmfqj.s:1784   .text.vTaskStartScheduler:0000000000000044 $d
     /tmp/cctzmfqj.s:2740   .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/cctzmfqj.s:1794   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/cctzmfqj.s:1801   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/cctzmfqj.s:1833   .text.vTaskEndScheduler:0000000000000010 $d
     /tmp/cctzmfqj.s:1838   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/cctzmfqj.s:1845   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/cctzmfqj.s:1863   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/cctzmfqj.s:1868   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/cctzmfqj.s:1875   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/cctzmfqj.s:1897   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/cctzmfqj.s:1902   .text.xTaskGetTickCountFromISR:0000000000000000 $t
ARM GAS  /tmp/cctzmfqj.s 			page 206


     /tmp/cctzmfqj.s:1909   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/cctzmfqj.s:1934   .text.xTaskGetTickCountFromISR:0000000000000008 $d
     /tmp/cctzmfqj.s:1939   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/cctzmfqj.s:1946   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/cctzmfqj.s:1963   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/cctzmfqj.s:1968   .text.pcTaskGetName:0000000000000000 $t
     /tmp/cctzmfqj.s:1975   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/cctzmfqj.s:2025   .text.pcTaskGetName:0000000000000018 $d
     /tmp/cctzmfqj.s:2030   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/cctzmfqj.s:2037   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/cctzmfqj.s:2296   .text.xTaskIncrementTick:00000000000000e8 $d
     /tmp/cctzmfqj.s:2311   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/cctzmfqj.s:2318   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/cctzmfqj.s:2543   .text.xTaskResumeAll:00000000000000cc $d
     /tmp/cctzmfqj.s:2555   .text.vTaskDelay:0000000000000000 $t
     /tmp/cctzmfqj.s:2562   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/cctzmfqj.s:2632   .text.vTaskDelay:000000000000002c $d
     /tmp/cctzmfqj.s:2637   .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/cctzmfqj.s:2643   .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/cctzmfqj.s:2727   .text.prvCheckTasksWaitingTermination:0000000000000048 $d
     /tmp/cctzmfqj.s:2734   .text.prvIdleTask:0000000000000000 $t
     /tmp/cctzmfqj.s:2775   .text.prvIdleTask:0000000000000014 $d
     /tmp/cctzmfqj.s:2780   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/cctzmfqj.s:2787   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/cctzmfqj.s:2912   .text.vTaskSwitchContext:0000000000000074 $d
     /tmp/cctzmfqj.s:2923   .text.vTaskSuspend:0000000000000000 $t
     /tmp/cctzmfqj.s:2930   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/cctzmfqj.s:3085   .text.vTaskSuspend:0000000000000088 $d
     /tmp/cctzmfqj.s:3094   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/cctzmfqj.s:3101   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/cctzmfqj.s:3154   .text.vTaskPlaceOnEventList:0000000000000020 $d
     /tmp/cctzmfqj.s:3159   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/cctzmfqj.s:3166   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/cctzmfqj.s:3246   .text.vTaskPlaceOnUnorderedEventList:0000000000000038 $d
     /tmp/cctzmfqj.s:3252   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/cctzmfqj.s:3259   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/cctzmfqj.s:3386   .text.xTaskRemoveFromEventList:000000000000006c $d
     /tmp/cctzmfqj.s:3396   .text.xTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/cctzmfqj.s:3403   .text.xTaskRemoveFromUnorderedEventList:0000000000000000 xTaskRemoveFromUnorderedEventList
     /tmp/cctzmfqj.s:3532   .text.xTaskRemoveFromUnorderedEventList:0000000000000064 $d
     /tmp/cctzmfqj.s:3541   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/cctzmfqj.s:3548   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/cctzmfqj.s:3588   .text.vTaskSetTimeOutState:0000000000000018 $d
     /tmp/cctzmfqj.s:3594   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/cctzmfqj.s:3601   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/cctzmfqj.s:3743   .text.xTaskCheckForTimeOut:0000000000000060 $d
     /tmp/cctzmfqj.s:3750   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/cctzmfqj.s:3757   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/cctzmfqj.s:3775   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/cctzmfqj.s:3780   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/cctzmfqj.s:3787   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/cctzmfqj.s:3807   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/cctzmfqj.s:3812   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/cctzmfqj.s:3819   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/cctzmfqj.s:3862   .text.xTaskGetSchedulerState:000000000000001c $d
     /tmp/cctzmfqj.s:3868   .text.vTaskPriorityInherit:0000000000000000 $t
     /tmp/cctzmfqj.s:3875   .text.vTaskPriorityInherit:0000000000000000 vTaskPriorityInherit
ARM GAS  /tmp/cctzmfqj.s 			page 207


     /tmp/cctzmfqj.s:3991   .text.vTaskPriorityInherit:0000000000000070 $d
     /tmp/cctzmfqj.s:3998   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/cctzmfqj.s:4005   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/cctzmfqj.s:4150   .text.xTaskPriorityDisinherit:000000000000006c $d
     /tmp/cctzmfqj.s:4157   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/cctzmfqj.s:4164   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/cctzmfqj.s:4193   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/cctzmfqj.s:4198   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/cctzmfqj.s:4205   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/cctzmfqj.s:4238   .text.pvTaskIncrementMutexHeldCount:0000000000000018 $d
     /tmp/cctzmfqj.s:4243   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/cctzmfqj.s:4250   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/cctzmfqj.s:4368   .text.ulTaskNotifyTake:0000000000000068 $d
     /tmp/cctzmfqj.s:4373   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/cctzmfqj.s:4380   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/cctzmfqj.s:4516   .text.xTaskNotifyWait:0000000000000080 $d
     /tmp/cctzmfqj.s:4521   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/cctzmfqj.s:4528   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/cctzmfqj.s:4750   .text.xTaskGenericNotify:00000000000000b8 $d
     /tmp/cctzmfqj.s:4757   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/cctzmfqj.s:4764   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/cctzmfqj.s:5040   .text.xTaskGenericNotifyFromISR:00000000000000e0 $d
     /tmp/cctzmfqj.s:5050   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/cctzmfqj.s:5057   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/cctzmfqj.s:5235   .text.vTaskNotifyGiveFromISR:0000000000000090 $d
     /tmp/cctzmfqj.s:5245   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/cctzmfqj.s:5252   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/cctzmfqj.s:5322   .text.xTaskNotifyStateClear:000000000000002c $d
     /tmp/cctzmfqj.s:5332   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/cctzmfqj.s:5328   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/cctzmfqj.s:5335   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/cctzmfqj.s:5339   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/cctzmfqj.s:5342   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/cctzmfqj.s:5346   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/cctzmfqj.s:5349   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/cctzmfqj.s:5355   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/cctzmfqj.s:5359   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/cctzmfqj.s:5362   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/cctzmfqj.s:5366   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/cctzmfqj.s:5369   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/cctzmfqj.s:5373   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/cctzmfqj.s:5376   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/cctzmfqj.s:5380   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/cctzmfqj.s:5383   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/cctzmfqj.s:5387   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/cctzmfqj.s:5390   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/cctzmfqj.s:5394   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/cctzmfqj.s:5397   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/cctzmfqj.s:5401   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/cctzmfqj.s:5404   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/cctzmfqj.s:5408   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/cctzmfqj.s:5411   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/cctzmfqj.s:5415   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/cctzmfqj.s:5418   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/cctzmfqj.s:5422   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/cctzmfqj.s:5425   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/cctzmfqj.s:5429   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
ARM GAS  /tmp/cctzmfqj.s 			page 208


     /tmp/cctzmfqj.s:5432   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/cctzmfqj.s:5436   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/cctzmfqj.s:5439   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/cctzmfqj.s:5443   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/cctzmfqj.s:5446   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/cctzmfqj.s:5450   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/cctzmfqj.s:5453   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/cctzmfqj.s:5457   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/cctzmfqj.s:5460   .bss.xTickCount:0000000000000000 $d
     /tmp/cctzmfqj.s:5464   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/cctzmfqj.s:5467   .bss.xYieldPending:0000000000000000 $d
     /tmp/cctzmfqj.s:5471   .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/cctzmfqj.s:5474   .rodata.vTaskStartScheduler.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vPortFree
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortYield
uxListRemove
vListInsert
pvPortMalloc
ulSetInterruptMaskFromISR
vClearInterruptMaskFromISR
xPortStartScheduler
vPortEndScheduler
