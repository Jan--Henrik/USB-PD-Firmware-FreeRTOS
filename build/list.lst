ARM GAS  /tmp/cc3rTVH4.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"list.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.vListInitialise,"ax",%progbits
  16              		.align	1
  17              		.global	vListInitialise
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	vListInitialise:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/list.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     All rights reserved
   4:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   5:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   7:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     This file is part of the FreeRTOS distribution.
   8:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
   9:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  13:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  14:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  19:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  20:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     link: http://www.freertos.org/a00114.html
  24:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  25:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  26:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
  27:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    platform software that is more than just the market leader, it     *
  30:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    is the industry's de facto standard.                               *
  31:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
ARM GAS  /tmp/cc3rTVH4.s 			page 2


  32:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    tutorial book, reference manual, or both:                          *
  35:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Middlewares/Third_Party/FreeRTOS/Source/list.c ****      *                                                                       *
  37:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     ***************************************************************************
  38:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  39:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     defined configASSERT()?
  42:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     embedded software for free we request you assist our global community by
  45:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     participating in the support forum.
  46:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  47:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  56:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  63:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     mission critical applications that require provable dependability.
  66:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/list.c ****     1 tab == 4 spaces!
  68:Middlewares/Third_Party/FreeRTOS/Source/list.c **** */
  69:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  71:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include <stdlib.h>
  72:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
  73:Middlewares/Third_Party/FreeRTOS/Source/list.c **** #include "list.h"
  74:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  76:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  77:Middlewares/Third_Party/FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  78:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  79:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialise( List_t * const pxList )
  80:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  28              		.loc 1 80 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  81:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
  82:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  83:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	as the only list entry. */
ARM GAS  /tmp/cc3rTVH4.s 			page 3


  84:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list struc
  33              		.loc 1 84 2 view .LVU1
  34              		.loc 1 84 37 is_stmt 0 view .LVU2
  35 0000 0300     		movs	r3, r0
  36 0002 0833     		adds	r3, r3, #8
  37              		.loc 1 84 18 view .LVU3
  38 0004 4360     		str	r3, [r0, #4]
  85:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  87:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  88:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  39              		.loc 1 88 2 is_stmt 1 view .LVU4
  40              		.loc 1 88 30 is_stmt 0 view .LVU5
  41 0006 0122     		movs	r2, #1
  42 0008 5242     		rsbs	r2, r2, #0
  43 000a 8260     		str	r2, [r0, #8]
  89:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  91:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	when the list is empty. */
  92:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list
  44              		.loc 1 92 2 is_stmt 1 view .LVU6
  45              		.loc 1 92 26 is_stmt 0 view .LVU7
  46 000c C360     		str	r3, [r0, #12]
  93:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini l
  47              		.loc 1 93 2 is_stmt 1 view .LVU8
  48              		.loc 1 93 30 is_stmt 0 view .LVU9
  49 000e 0361     		str	r3, [r0, #16]
  94:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  95:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  50              		.loc 1 95 2 is_stmt 1 view .LVU10
  51              		.loc 1 95 26 is_stmt 0 view .LVU11
  52 0010 0023     		movs	r3, #0
  53 0012 0360     		str	r3, [r0]
  96:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
  97:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list if
  98:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  99:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  54              		.loc 1 99 48 is_stmt 1 view .LVU12
 100:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  55              		.loc 1 100 48 view .LVU13
 101:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  56              		.loc 1 101 1 is_stmt 0 view .LVU14
  57              		@ sp needed
  58 0014 7047     		bx	lr
  59              		.cfi_endproc
  60              	.LFE0:
  62              		.section	.text.vListInitialiseItem,"ax",%progbits
  63              		.align	1
  64              		.global	vListInitialiseItem
  65              		.syntax unified
  66              		.code	16
  67              		.thumb_func
  68              		.fpu softvfp
  70              	vListInitialiseItem:
  71              	.LVL1:
  72              	.LFB1:
 102:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc3rTVH4.s 			page 4


 103:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 104:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
 105:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
  73              		.loc 1 105 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
 106:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
 107:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItem->pvContainer = NULL;
  78              		.loc 1 107 2 view .LVU16
  79              		.loc 1 107 22 is_stmt 0 view .LVU17
  80 0000 0023     		movs	r3, #0
  81 0002 0361     		str	r3, [r0, #16]
 108:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Write known values into the list item if
 110:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
 111:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  82              		.loc 1 111 57 is_stmt 1 view .LVU18
 112:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  83              		.loc 1 112 58 view .LVU19
 113:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
  84              		.loc 1 113 1 is_stmt 0 view .LVU20
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              		.cfi_endproc
  88              	.LFE1:
  90              		.section	.text.vListInsertEnd,"ax",%progbits
  91              		.align	1
  92              		.global	vListInsertEnd
  93              		.syntax unified
  94              		.code	16
  95              		.thumb_func
  96              		.fpu softvfp
  98              	vListInsertEnd:
  99              	.LVL2:
 100              	.LFB2:
 114:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 115:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 116:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
 117:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 101              		.loc 1 117 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 118:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
 106              		.loc 1 118 1 view .LVU22
 107              		.loc 1 118 20 is_stmt 0 view .LVU23
 108 0000 4368     		ldr	r3, [r0, #4]
 109              	.LVL3:
 119:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 120:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 121:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 122:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 123:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 110              		.loc 1 123 35 is_stmt 1 view .LVU24
ARM GAS  /tmp/cc3rTVH4.s 			page 5


 124:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 111              		.loc 1 124 47 view .LVU25
 125:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
 127:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
 128:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
 129:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
 112              		.loc 1 129 2 view .LVU26
 113              		.loc 1 129 24 is_stmt 0 view .LVU27
 114 0002 4B60     		str	r3, [r1, #4]
 130:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 115              		.loc 1 130 2 is_stmt 1 view .LVU28
 116              		.loc 1 130 37 is_stmt 0 view .LVU29
 117 0004 9A68     		ldr	r2, [r3, #8]
 118              		.loc 1 130 28 view .LVU30
 119 0006 8A60     		str	r2, [r1, #8]
 131:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 133:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 120              		.loc 1 133 25 is_stmt 1 view .LVU31
 134:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 135:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
 121              		.loc 1 135 2 view .LVU32
 122              		.loc 1 135 30 is_stmt 0 view .LVU33
 123 0008 5160     		str	r1, [r2, #4]
 136:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 124              		.loc 1 136 2 is_stmt 1 view .LVU34
 125              		.loc 1 136 22 is_stmt 0 view .LVU35
 126 000a 9960     		str	r1, [r3, #8]
 137:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
 139:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 127              		.loc 1 139 2 is_stmt 1 view .LVU36
 128              		.loc 1 139 29 is_stmt 0 view .LVU37
 129 000c 0861     		str	r0, [r1, #16]
 140:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 141:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 130              		.loc 1 141 2 is_stmt 1 view .LVU38
 131              		.loc 1 141 29 is_stmt 0 view .LVU39
 132 000e 0368     		ldr	r3, [r0]
 133              	.LVL4:
 134              		.loc 1 141 29 view .LVU40
 135 0010 0133     		adds	r3, r3, #1
 136 0012 0360     		str	r3, [r0]
 142:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 137              		.loc 1 142 1 view .LVU41
 138              		@ sp needed
 139 0014 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE2:
 143              		.section	.text.vListInsert,"ax",%progbits
 144              		.align	1
 145              		.global	vListInsert
 146              		.syntax unified
 147              		.code	16
 148              		.thumb_func
 149              		.fpu softvfp
ARM GAS  /tmp/cc3rTVH4.s 			page 6


 151              	vListInsert:
 152              	.LVL5:
 153              	.LFB3:
 143:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 144:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 145:Middlewares/Third_Party/FreeRTOS/Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 146:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 154              		.loc 1 146 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		.loc 1 146 1 is_stmt 0 view .LVU43
 159 0000 30B5     		push	{r4, r5, lr}
 160              	.LCFI0:
 161              		.cfi_def_cfa_offset 12
 162              		.cfi_offset 4, -12
 163              		.cfi_offset 5, -8
 164              		.cfi_offset 14, -4
 147:Middlewares/Third_Party/FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 165              		.loc 1 147 1 is_stmt 1 view .LVU44
 148:Middlewares/Third_Party/FreeRTOS/Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 166              		.loc 1 148 1 view .LVU45
 167              		.loc 1 148 18 is_stmt 0 view .LVU46
 168 0002 0C68     		ldr	r4, [r1]
 169              	.LVL6:
 149:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 151:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 152:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 153:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 170              		.loc 1 153 35 is_stmt 1 view .LVU47
 154:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 171              		.loc 1 154 47 view .LVU48
 155:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 157:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	If the list already contains a list item with the same item value then the
 159:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	new list item should be placed after it.  This ensures that TCB's which are
 160:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
 161:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 162:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 163:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 164:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 172              		.loc 1 164 2 view .LVU49
 173              		.loc 1 164 4 is_stmt 0 view .LVU50
 174 0004 631C     		adds	r3, r4, #1
 175 0006 02D0     		beq	.L9
 165:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 167:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 168:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 169:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 170:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 171:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are
 172:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		listed below.  In addition see http://www.freertos.org/FAQHelp.html for
 173:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 174:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		http://www.freertos.org/a00110.html#configASSERT
ARM GAS  /tmp/cc3rTVH4.s 			page 7


 175:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 176:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			1) Stack overflow -
 177:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   see http://www.freertos.org/Stacks-and-stack-overflow-checking.html
 178:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 179:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 180:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 181:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 182:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 183:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   http://www.freertos.org/a00110.html
 184:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 185:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 186:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 187:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 188:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 189:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 190:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		**********************************************************************/
 191:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 176              		.loc 1 192 3 is_stmt 1 view .LVU51
 177              		.loc 1 192 19 is_stmt 0 view .LVU52
 178 0008 0200     		movs	r2, r0
 179 000a 0832     		adds	r2, r2, #8
 180              	.LVL7:
 181              		.loc 1 192 3 view .LVU53
 182 000c 02E0     		b	.L7
 183              	.LVL8:
 184              	.L9:
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 185              		.loc 1 166 3 is_stmt 1 view .LVU54
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 186              		.loc 1 166 14 is_stmt 0 view .LVU55
 187 000e 0269     		ldr	r2, [r0, #16]
 188              	.LVL9:
 166:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 189              		.loc 1 166 14 view .LVU56
 190 0010 04E0     		b	.L6
 191              	.L8:
 192              		.loc 1 192 125 view .LVU57
 193 0012 1A00     		movs	r2, r3
 194              	.LVL10:
 195              	.L7:
 196              		.loc 1 192 71 discriminator 1 view .LVU58
 197 0014 5368     		ldr	r3, [r2, #4]
 198              		.loc 1 192 3 discriminator 1 view .LVU59
 199 0016 1D68     		ldr	r5, [r3]
 200 0018 A542     		cmp	r5, r4
 201 001a FAD9     		bls	.L8
 202              	.L6:
 193:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		{
 194:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
 195:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 			insertion position. */
 196:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		}
 197:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 198:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 199:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 203              		.loc 1 199 2 is_stmt 1 view .LVU60
 204              		.loc 1 199 36 is_stmt 0 view .LVU61
ARM GAS  /tmp/cc3rTVH4.s 			page 8


 205 001c 5368     		ldr	r3, [r2, #4]
 206              		.loc 1 199 24 view .LVU62
 207 001e 4B60     		str	r3, [r1, #4]
 200:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 208              		.loc 1 200 2 is_stmt 1 view .LVU63
 209              		.loc 1 200 36 is_stmt 0 view .LVU64
 210 0020 9960     		str	r1, [r3, #8]
 201:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 211              		.loc 1 201 2 is_stmt 1 view .LVU65
 212              		.loc 1 201 28 is_stmt 0 view .LVU66
 213 0022 8A60     		str	r2, [r1, #8]
 202:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 214              		.loc 1 202 2 is_stmt 1 view .LVU67
 215              		.loc 1 202 21 is_stmt 0 view .LVU68
 216 0024 5160     		str	r1, [r2, #4]
 203:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 204:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 205:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	item later. */
 206:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxNewListItem->pvContainer = ( void * ) pxList;
 217              		.loc 1 206 2 is_stmt 1 view .LVU69
 218              		.loc 1 206 29 is_stmt 0 view .LVU70
 219 0026 0861     		str	r0, [r1, #16]
 207:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 208:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 220              		.loc 1 208 2 is_stmt 1 view .LVU71
 221              		.loc 1 208 29 is_stmt 0 view .LVU72
 222 0028 0368     		ldr	r3, [r0]
 223 002a 0133     		adds	r3, r3, #1
 224 002c 0360     		str	r3, [r0]
 209:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 225              		.loc 1 209 1 view .LVU73
 226              		@ sp needed
 227              	.LVL11:
 228              		.loc 1 209 1 view .LVU74
 229 002e 30BD     		pop	{r4, r5, pc}
 230              		.cfi_endproc
 231              	.LFE3:
 233              		.section	.text.uxListRemove,"ax",%progbits
 234              		.align	1
 235              		.global	uxListRemove
 236              		.syntax unified
 237              		.code	16
 238              		.thumb_func
 239              		.fpu softvfp
 241              	uxListRemove:
 242              	.LVL12:
 243              	.LFB4:
 210:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 211:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 213:Middlewares/Third_Party/FreeRTOS/Source/list.c **** {
 244              		.loc 1 213 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 214:Middlewares/Third_Party/FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
ARM GAS  /tmp/cc3rTVH4.s 			page 9


 215:Middlewares/Third_Party/FreeRTOS/Source/list.c **** item. */
 216:Middlewares/Third_Party/FreeRTOS/Source/list.c **** List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
 249              		.loc 1 216 1 view .LVU76
 250              		.loc 1 216 16 is_stmt 0 view .LVU77
 251 0000 0369     		ldr	r3, [r0, #16]
 252              	.LVL13:
 217:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 218:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 253              		.loc 1 218 2 is_stmt 1 view .LVU78
 254              		.loc 1 218 16 is_stmt 0 view .LVU79
 255 0002 4168     		ldr	r1, [r0, #4]
 256              		.loc 1 218 53 view .LVU80
 257 0004 8268     		ldr	r2, [r0, #8]
 258              		.loc 1 218 37 view .LVU81
 259 0006 8A60     		str	r2, [r1, #8]
 219:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 260              		.loc 1 219 2 is_stmt 1 view .LVU82
 261              		.loc 1 219 37 is_stmt 0 view .LVU83
 262 0008 4168     		ldr	r1, [r0, #4]
 263 000a 5160     		str	r1, [r2, #4]
 220:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 222:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 264              		.loc 1 222 25 is_stmt 1 view .LVU84
 223:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 224:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 225:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 265              		.loc 1 225 2 view .LVU85
 266              		.loc 1 225 4 is_stmt 0 view .LVU86
 267 000c 5A68     		ldr	r2, [r3, #4]
 268 000e 8242     		cmp	r2, r0
 269 0010 05D0     		beq	.L12
 270              	.L11:
 226:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 227:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 228:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 229:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	else
 230:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	{
 231:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
 271              		.loc 1 231 27 is_stmt 1 view .LVU87
 232:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 233:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 234:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	pxItemToRemove->pvContainer = NULL;
 272              		.loc 1 234 2 view .LVU88
 273              		.loc 1 234 30 is_stmt 0 view .LVU89
 274 0012 0022     		movs	r2, #0
 275 0014 0261     		str	r2, [r0, #16]
 235:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 276              		.loc 1 235 2 is_stmt 1 view .LVU90
 277              		.loc 1 235 29 is_stmt 0 view .LVU91
 278 0016 1A68     		ldr	r2, [r3]
 279 0018 501E     		subs	r0, r2, #1
 280              	.LVL14:
 281              		.loc 1 235 29 view .LVU92
 282 001a 1860     		str	r0, [r3]
 236:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
ARM GAS  /tmp/cc3rTVH4.s 			page 10


 283              		.loc 1 237 2 is_stmt 1 view .LVU93
 238:Middlewares/Third_Party/FreeRTOS/Source/list.c **** }
 284              		.loc 1 238 1 is_stmt 0 view .LVU94
 285              		@ sp needed
 286 001c 7047     		bx	lr
 287              	.LVL15:
 288              	.L12:
 227:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 289              		.loc 1 227 3 is_stmt 1 view .LVU95
 227:Middlewares/Third_Party/FreeRTOS/Source/list.c **** 	}
 290              		.loc 1 227 19 is_stmt 0 view .LVU96
 291 001e 8268     		ldr	r2, [r0, #8]
 292 0020 5A60     		str	r2, [r3, #4]
 293 0022 F6E7     		b	.L11
 294              		.cfi_endproc
 295              	.LFE4:
 297              		.text
 298              	.Letext0:
 299              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 300              		.file 3 "/usr/arm-none-eabi/include/sys/lock.h"
 301              		.file 4 "/usr/arm-none-eabi/include/sys/_types.h"
 302              		.file 5 "/usr/lib/gcc/arm-none-eabi/8.2.0/include/stddef.h"
 303              		.file 6 "/usr/arm-none-eabi/include/sys/reent.h"
 304              		.file 7 "/usr/arm-none-eabi/include/stdlib.h"
 305              		.file 8 "/usr/arm-none-eabi/include/sys/_stdint.h"
 306              		.file 9 "Inc/FreeRTOSConfig.h"
 307              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 308              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
ARM GAS  /tmp/cc3rTVH4.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 list.c
     /tmp/cc3rTVH4.s:16     .text.vListInitialise:0000000000000000 $t
     /tmp/cc3rTVH4.s:24     .text.vListInitialise:0000000000000000 vListInitialise
     /tmp/cc3rTVH4.s:63     .text.vListInitialiseItem:0000000000000000 $t
     /tmp/cc3rTVH4.s:70     .text.vListInitialiseItem:0000000000000000 vListInitialiseItem
     /tmp/cc3rTVH4.s:91     .text.vListInsertEnd:0000000000000000 $t
     /tmp/cc3rTVH4.s:98     .text.vListInsertEnd:0000000000000000 vListInsertEnd
     /tmp/cc3rTVH4.s:144    .text.vListInsert:0000000000000000 $t
     /tmp/cc3rTVH4.s:151    .text.vListInsert:0000000000000000 vListInsert
     /tmp/cc3rTVH4.s:234    .text.uxListRemove:0000000000000000 $t
     /tmp/cc3rTVH4.s:241    .text.uxListRemove:0000000000000000 uxListRemove

NO UNDEFINED SYMBOLS
