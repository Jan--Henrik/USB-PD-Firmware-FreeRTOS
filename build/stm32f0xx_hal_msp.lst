ARM GAS  /tmp/cc3zdOTF.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_msp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB37:
  25              		.file 1 "Src/stm32f0xx_hal_msp.c"
   1:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_hal_msp.c **** /**
   3:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f0xx_hal_msp.c ****   * File Name          : stm32f0xx_hal_msp.c
   5:Src/stm32f0xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f0xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f0xx_hal_msp.c ****   * This notice applies to any and all portions of this file
   9:Src/stm32f0xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/stm32f0xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/stm32f0xx_hal_msp.c ****   * inserted by the user or by software development tools
  12:Src/stm32f0xx_hal_msp.c ****   * are owned by their respective copyright owners.
  13:Src/stm32f0xx_hal_msp.c ****   *
  14:Src/stm32f0xx_hal_msp.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  15:Src/stm32f0xx_hal_msp.c ****   * All rights reserved.
  16:Src/stm32f0xx_hal_msp.c ****   *
  17:Src/stm32f0xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without 
  18:Src/stm32f0xx_hal_msp.c ****   * modification, are permitted, provided that the following conditions are met:
  19:Src/stm32f0xx_hal_msp.c ****   *
  20:Src/stm32f0xx_hal_msp.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  21:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer.
  22:Src/stm32f0xx_hal_msp.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer in the documentation
  24:Src/stm32f0xx_hal_msp.c ****   *    and/or other materials provided with the distribution.
  25:Src/stm32f0xx_hal_msp.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  26:Src/stm32f0xx_hal_msp.c ****   *    contributors to this software may be used to endorse or promote products 
  27:Src/stm32f0xx_hal_msp.c ****   *    derived from this software without specific written permission.
  28:Src/stm32f0xx_hal_msp.c ****   * 4. This software, including modifications and/or derivative works of this 
  29:Src/stm32f0xx_hal_msp.c ****   *    software, must execute solely and exclusively on microcontroller or
  30:Src/stm32f0xx_hal_msp.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  31:Src/stm32f0xx_hal_msp.c ****   * 5. Redistribution and use of this software other than as permitted under 
  32:Src/stm32f0xx_hal_msp.c ****   *    this license is void and will automatically terminate your rights under 
  33:Src/stm32f0xx_hal_msp.c ****   *    this license. 
ARM GAS  /tmp/cc3zdOTF.s 			page 2


  34:Src/stm32f0xx_hal_msp.c ****   *
  35:Src/stm32f0xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  36:Src/stm32f0xx_hal_msp.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  37:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  38:Src/stm32f0xx_hal_msp.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  39:Src/stm32f0xx_hal_msp.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  40:Src/stm32f0xx_hal_msp.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  41:Src/stm32f0xx_hal_msp.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  42:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  43:Src/stm32f0xx_hal_msp.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  44:Src/stm32f0xx_hal_msp.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  45:Src/stm32f0xx_hal_msp.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  46:Src/stm32f0xx_hal_msp.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Src/stm32f0xx_hal_msp.c ****   *
  48:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
  49:Src/stm32f0xx_hal_msp.c ****   */
  50:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Header */
  51:Src/stm32f0xx_hal_msp.c **** 
  52:Src/stm32f0xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  53:Src/stm32f0xx_hal_msp.c **** #include "main.h"
  54:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  55:Src/stm32f0xx_hal_msp.c **** 
  56:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Includes */
  57:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_adc;
  58:Src/stm32f0xx_hal_msp.c **** 
  59:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  60:Src/stm32f0xx_hal_msp.c **** 
  61:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  62:Src/stm32f0xx_hal_msp.c **** 
  63:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_i2c2_rx;
  64:Src/stm32f0xx_hal_msp.c **** 
  65:Src/stm32f0xx_hal_msp.c **** extern DMA_HandleTypeDef hdma_i2c2_tx;
  66:Src/stm32f0xx_hal_msp.c **** 
  67:Src/stm32f0xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  68:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN TD */
  69:Src/stm32f0xx_hal_msp.c **** 
  70:Src/stm32f0xx_hal_msp.c **** /* USER CODE END TD */
  71:Src/stm32f0xx_hal_msp.c **** 
  72:Src/stm32f0xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  73:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Define */
  74:Src/stm32f0xx_hal_msp.c ****  
  75:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Define */
  76:Src/stm32f0xx_hal_msp.c **** 
  77:Src/stm32f0xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  78:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  79:Src/stm32f0xx_hal_msp.c **** 
  80:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Macro */
  81:Src/stm32f0xx_hal_msp.c **** 
  82:Src/stm32f0xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  83:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PV */
  84:Src/stm32f0xx_hal_msp.c **** 
  85:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PV */
  86:Src/stm32f0xx_hal_msp.c **** 
  87:Src/stm32f0xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  88:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  89:Src/stm32f0xx_hal_msp.c **** 
  90:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PFP */
ARM GAS  /tmp/cc3zdOTF.s 			page 3


  91:Src/stm32f0xx_hal_msp.c **** 
  92:Src/stm32f0xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  93:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  94:Src/stm32f0xx_hal_msp.c **** 
  95:Src/stm32f0xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  96:Src/stm32f0xx_hal_msp.c **** 
  97:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  98:Src/stm32f0xx_hal_msp.c **** 
  99:Src/stm32f0xx_hal_msp.c **** /* USER CODE END 0 */
 100:Src/stm32f0xx_hal_msp.c **** /**
 101:Src/stm32f0xx_hal_msp.c ****   * Initializes the Global MSP.
 102:Src/stm32f0xx_hal_msp.c ****   */
 103:Src/stm32f0xx_hal_msp.c **** void HAL_MspInit(void)
 104:Src/stm32f0xx_hal_msp.c **** {
  26              		.loc 1 104 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 00B5     		push	{lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 4
  33              		.cfi_offset 14, -4
  34 0002 83B0     		sub	sp, sp, #12
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 16
  37              	.LBB2:
 105:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
 106:Src/stm32f0xx_hal_msp.c **** 
 107:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
 108:Src/stm32f0xx_hal_msp.c **** 
 109:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  38              		.loc 1 109 0
  39 0004 0C4B     		ldr	r3, .L2
  40 0006 9969     		ldr	r1, [r3, #24]
  41 0008 0122     		movs	r2, #1
  42 000a 1143     		orrs	r1, r2
  43 000c 9961     		str	r1, [r3, #24]
  44 000e 9969     		ldr	r1, [r3, #24]
  45 0010 0A40     		ands	r2, r1
  46 0012 0092     		str	r2, [sp]
  47 0014 009A     		ldr	r2, [sp]
  48              	.LBE2:
  49              	.LBB3:
 110:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  50              		.loc 1 110 0
  51 0016 DA69     		ldr	r2, [r3, #28]
  52 0018 8021     		movs	r1, #128
  53 001a 4905     		lsls	r1, r1, #21
  54 001c 0A43     		orrs	r2, r1
  55 001e DA61     		str	r2, [r3, #28]
  56 0020 DB69     		ldr	r3, [r3, #28]
  57 0022 0B40     		ands	r3, r1
  58 0024 0193     		str	r3, [sp, #4]
  59 0026 019B     		ldr	r3, [sp, #4]
  60              	.LBE3:
 111:Src/stm32f0xx_hal_msp.c **** 
 112:Src/stm32f0xx_hal_msp.c ****   /* System interrupt init*/
ARM GAS  /tmp/cc3zdOTF.s 			page 4


 113:Src/stm32f0xx_hal_msp.c ****   /* PendSV_IRQn interrupt configuration */
 114:Src/stm32f0xx_hal_msp.c ****   HAL_NVIC_SetPriority(PendSV_IRQn, 3, 0);
  61              		.loc 1 114 0
  62 0028 0220     		movs	r0, #2
  63 002a 0022     		movs	r2, #0
  64 002c 0321     		movs	r1, #3
  65 002e 4042     		rsbs	r0, r0, #0
  66 0030 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  67              	.LVL0:
 115:Src/stm32f0xx_hal_msp.c **** 
 116:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
 117:Src/stm32f0xx_hal_msp.c **** 
 118:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
 119:Src/stm32f0xx_hal_msp.c **** }
  68              		.loc 1 119 0
  69 0034 03B0     		add	sp, sp, #12
  70              		@ sp needed
  71 0036 00BD     		pop	{pc}
  72              	.L3:
  73              		.align	2
  74              	.L2:
  75 0038 00100240 		.word	1073876992
  76              		.cfi_endproc
  77              	.LFE37:
  79              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_ADC_MspInit
  82              		.syntax unified
  83              		.code	16
  84              		.thumb_func
  85              		.fpu softvfp
  87              	HAL_ADC_MspInit:
  88              	.LFB38:
 120:Src/stm32f0xx_hal_msp.c **** 
 121:Src/stm32f0xx_hal_msp.c **** /**
 122:Src/stm32f0xx_hal_msp.c **** * @brief ADC MSP Initialization
 123:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 124:Src/stm32f0xx_hal_msp.c **** * @param hadc: ADC handle pointer
 125:Src/stm32f0xx_hal_msp.c **** * @retval None
 126:Src/stm32f0xx_hal_msp.c **** */
 127:Src/stm32f0xx_hal_msp.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 128:Src/stm32f0xx_hal_msp.c **** {
  89              		.loc 1 128 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 32
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              	.LVL1:
  94 0000 10B5     		push	{r4, lr}
  95              	.LCFI2:
  96              		.cfi_def_cfa_offset 8
  97              		.cfi_offset 4, -8
  98              		.cfi_offset 14, -4
  99 0002 88B0     		sub	sp, sp, #32
 100              	.LCFI3:
 101              		.cfi_def_cfa_offset 40
 102 0004 0400     		movs	r4, r0
 129:Src/stm32f0xx_hal_msp.c **** 
ARM GAS  /tmp/cc3zdOTF.s 			page 5


 130:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 103              		.loc 1 130 0
 104 0006 1422     		movs	r2, #20
 105 0008 0021     		movs	r1, #0
 106 000a 03A8     		add	r0, sp, #12
 107              	.LVL2:
 108 000c FFF7FEFF 		bl	memset
 109              	.LVL3:
 131:Src/stm32f0xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 110              		.loc 1 131 0
 111 0010 1E4B     		ldr	r3, .L9
 112 0012 2268     		ldr	r2, [r4]
 113 0014 9A42     		cmp	r2, r3
 114 0016 01D0     		beq	.L7
 115              	.L4:
 132:Src/stm32f0xx_hal_msp.c ****   {
 133:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 134:Src/stm32f0xx_hal_msp.c **** 
 135:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 0 */
 136:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 137:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
 138:Src/stm32f0xx_hal_msp.c ****   
 139:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 140:Src/stm32f0xx_hal_msp.c ****     /**ADC GPIO Configuration    
 141:Src/stm32f0xx_hal_msp.c ****     PA1     ------> ADC_IN1
 142:Src/stm32f0xx_hal_msp.c ****     PA2     ------> ADC_IN2 
 143:Src/stm32f0xx_hal_msp.c ****     */
 144:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = I_IN_Pin|U_IN_Pin;
 145:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 146:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 147:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 148:Src/stm32f0xx_hal_msp.c **** 
 149:Src/stm32f0xx_hal_msp.c ****     /* ADC1 DMA Init */
 150:Src/stm32f0xx_hal_msp.c ****     /* ADC Init */
 151:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Instance = DMA1_Channel1;
 152:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 153:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 154:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 155:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 156:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 157:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Mode = DMA_NORMAL;
 158:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 159:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 160:Src/stm32f0xx_hal_msp.c ****     {
 161:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 162:Src/stm32f0xx_hal_msp.c ****     }
 163:Src/stm32f0xx_hal_msp.c **** 
 164:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc);
 165:Src/stm32f0xx_hal_msp.c **** 
 166:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 167:Src/stm32f0xx_hal_msp.c **** 
 168:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspInit 1 */
 169:Src/stm32f0xx_hal_msp.c ****   }
 170:Src/stm32f0xx_hal_msp.c **** 
 171:Src/stm32f0xx_hal_msp.c **** }
 116              		.loc 1 171 0
 117 0018 08B0     		add	sp, sp, #32
ARM GAS  /tmp/cc3zdOTF.s 			page 6


 118              		@ sp needed
 119              	.LVL4:
 120 001a 10BD     		pop	{r4, pc}
 121              	.LVL5:
 122              	.L7:
 123              	.LBB4:
 137:Src/stm32f0xx_hal_msp.c ****   
 124              		.loc 1 137 0
 125 001c 1C4B     		ldr	r3, .L9+4
 126 001e 9969     		ldr	r1, [r3, #24]
 127 0020 8020     		movs	r0, #128
 128 0022 8000     		lsls	r0, r0, #2
 129 0024 0143     		orrs	r1, r0
 130 0026 9961     		str	r1, [r3, #24]
 131 0028 9A69     		ldr	r2, [r3, #24]
 132 002a 0240     		ands	r2, r0
 133 002c 0192     		str	r2, [sp, #4]
 134 002e 019A     		ldr	r2, [sp, #4]
 135              	.LBE4:
 136              	.LBB5:
 139:Src/stm32f0xx_hal_msp.c ****     /**ADC GPIO Configuration    
 137              		.loc 1 139 0
 138 0030 5A69     		ldr	r2, [r3, #20]
 139 0032 8021     		movs	r1, #128
 140 0034 8902     		lsls	r1, r1, #10
 141 0036 0A43     		orrs	r2, r1
 142 0038 5A61     		str	r2, [r3, #20]
 143 003a 5B69     		ldr	r3, [r3, #20]
 144 003c 0B40     		ands	r3, r1
 145 003e 0293     		str	r3, [sp, #8]
 146 0040 029B     		ldr	r3, [sp, #8]
 147              	.LBE5:
 144:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 148              		.loc 1 144 0
 149 0042 0623     		movs	r3, #6
 150 0044 0393     		str	r3, [sp, #12]
 145:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 151              		.loc 1 145 0
 152 0046 033B     		subs	r3, r3, #3
 153 0048 0493     		str	r3, [sp, #16]
 147:Src/stm32f0xx_hal_msp.c **** 
 154              		.loc 1 147 0
 155 004a 7138     		subs	r0, r0, #113
 156 004c FF38     		subs	r0, r0, #255
 157 004e 03A9     		add	r1, sp, #12
 158 0050 C005     		lsls	r0, r0, #23
 159 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 160              	.LVL6:
 151:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Direction = DMA_PERIPH_TO_MEMORY;
 161              		.loc 1 151 0
 162 0056 0F48     		ldr	r0, .L9+8
 163 0058 0F4B     		ldr	r3, .L9+12
 164 005a 0360     		str	r3, [r0]
 152:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphInc = DMA_PINC_DISABLE;
 165              		.loc 1 152 0
 166 005c 0023     		movs	r3, #0
 167 005e 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/cc3zdOTF.s 			page 7


 153:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemInc = DMA_MINC_ENABLE;
 168              		.loc 1 153 0
 169 0060 8360     		str	r3, [r0, #8]
 154:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 170              		.loc 1 154 0
 171 0062 8022     		movs	r2, #128
 172 0064 C260     		str	r2, [r0, #12]
 155:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 173              		.loc 1 155 0
 174 0066 8032     		adds	r2, r2, #128
 175 0068 0261     		str	r2, [r0, #16]
 156:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Mode = DMA_NORMAL;
 176              		.loc 1 156 0
 177 006a 8022     		movs	r2, #128
 178 006c D200     		lsls	r2, r2, #3
 179 006e 4261     		str	r2, [r0, #20]
 157:Src/stm32f0xx_hal_msp.c ****     hdma_adc.Init.Priority = DMA_PRIORITY_LOW;
 180              		.loc 1 157 0
 181 0070 8361     		str	r3, [r0, #24]
 158:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_adc) != HAL_OK)
 182              		.loc 1 158 0
 183 0072 C361     		str	r3, [r0, #28]
 159:Src/stm32f0xx_hal_msp.c ****     {
 184              		.loc 1 159 0
 185 0074 FFF7FEFF 		bl	HAL_DMA_Init
 186              	.LVL7:
 187 0078 0028     		cmp	r0, #0
 188 007a 03D1     		bne	.L8
 189              	.L6:
 164:Src/stm32f0xx_hal_msp.c **** 
 190              		.loc 1 164 0
 191 007c 054B     		ldr	r3, .L9+8
 192 007e E363     		str	r3, [r4, #60]
 193 0080 5C62     		str	r4, [r3, #36]
 194              		.loc 1 171 0
 195 0082 C9E7     		b	.L4
 196              	.L8:
 161:Src/stm32f0xx_hal_msp.c ****     }
 197              		.loc 1 161 0
 198 0084 FFF7FEFF 		bl	Error_Handler
 199              	.LVL8:
 200 0088 F8E7     		b	.L6
 201              	.L10:
 202 008a C046     		.align	2
 203              	.L9:
 204 008c 00240140 		.word	1073816576
 205 0090 00100240 		.word	1073876992
 206 0094 00000000 		.word	hdma_adc
 207 0098 08000240 		.word	1073872904
 208              		.cfi_endproc
 209              	.LFE38:
 211              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 212              		.align	1
 213              		.global	HAL_ADC_MspDeInit
 214              		.syntax unified
 215              		.code	16
 216              		.thumb_func
ARM GAS  /tmp/cc3zdOTF.s 			page 8


 217              		.fpu softvfp
 219              	HAL_ADC_MspDeInit:
 220              	.LFB39:
 172:Src/stm32f0xx_hal_msp.c **** 
 173:Src/stm32f0xx_hal_msp.c **** /**
 174:Src/stm32f0xx_hal_msp.c **** * @brief ADC MSP De-Initialization
 175:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 176:Src/stm32f0xx_hal_msp.c **** * @param hadc: ADC handle pointer
 177:Src/stm32f0xx_hal_msp.c **** * @retval None
 178:Src/stm32f0xx_hal_msp.c **** */
 179:Src/stm32f0xx_hal_msp.c **** 
 180:Src/stm32f0xx_hal_msp.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 181:Src/stm32f0xx_hal_msp.c **** {
 221              		.loc 1 181 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              	.LVL9:
 226 0000 10B5     		push	{r4, lr}
 227              	.LCFI4:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 4, -8
 230              		.cfi_offset 14, -4
 231 0002 0400     		movs	r4, r0
 182:Src/stm32f0xx_hal_msp.c **** 
 183:Src/stm32f0xx_hal_msp.c ****   if(hadc->Instance==ADC1)
 232              		.loc 1 183 0
 233 0004 094B     		ldr	r3, .L14
 234 0006 0268     		ldr	r2, [r0]
 235 0008 9A42     		cmp	r2, r3
 236 000a 00D0     		beq	.L13
 237              	.LVL10:
 238              	.L11:
 184:Src/stm32f0xx_hal_msp.c ****   {
 185:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 186:Src/stm32f0xx_hal_msp.c **** 
 187:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 188:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 189:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 190:Src/stm32f0xx_hal_msp.c ****   
 191:Src/stm32f0xx_hal_msp.c ****     /**ADC GPIO Configuration    
 192:Src/stm32f0xx_hal_msp.c ****     PA1     ------> ADC_IN1
 193:Src/stm32f0xx_hal_msp.c ****     PA2     ------> ADC_IN2 
 194:Src/stm32f0xx_hal_msp.c ****     */
 195:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, I_IN_Pin|U_IN_Pin);
 196:Src/stm32f0xx_hal_msp.c **** 
 197:Src/stm32f0xx_hal_msp.c ****     /* ADC1 DMA DeInit */
 198:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hadc->DMA_Handle);
 199:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 200:Src/stm32f0xx_hal_msp.c **** 
 201:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 202:Src/stm32f0xx_hal_msp.c ****   }
 203:Src/stm32f0xx_hal_msp.c **** 
 204:Src/stm32f0xx_hal_msp.c **** }
 239              		.loc 1 204 0
 240              		@ sp needed
 241              	.LVL11:
ARM GAS  /tmp/cc3zdOTF.s 			page 9


 242 000c 10BD     		pop	{r4, pc}
 243              	.LVL12:
 244              	.L13:
 189:Src/stm32f0xx_hal_msp.c ****   
 245              		.loc 1 189 0
 246 000e 084A     		ldr	r2, .L14+4
 247 0010 9369     		ldr	r3, [r2, #24]
 248 0012 0849     		ldr	r1, .L14+8
 249 0014 0B40     		ands	r3, r1
 250 0016 9361     		str	r3, [r2, #24]
 195:Src/stm32f0xx_hal_msp.c **** 
 251              		.loc 1 195 0
 252 0018 9020     		movs	r0, #144
 253              	.LVL13:
 254 001a 0621     		movs	r1, #6
 255 001c C005     		lsls	r0, r0, #23
 256 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 257              	.LVL14:
 198:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 258              		.loc 1 198 0
 259 0022 E06B     		ldr	r0, [r4, #60]
 260 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 261              	.LVL15:
 262              		.loc 1 204 0
 263 0028 F0E7     		b	.L11
 264              	.L15:
 265 002a C046     		.align	2
 266              	.L14:
 267 002c 00240140 		.word	1073816576
 268 0030 00100240 		.word	1073876992
 269 0034 FFFDFFFF 		.word	-513
 270              		.cfi_endproc
 271              	.LFE39:
 273              		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 274              		.align	1
 275              		.global	HAL_I2C_MspInit
 276              		.syntax unified
 277              		.code	16
 278              		.thumb_func
 279              		.fpu softvfp
 281              	HAL_I2C_MspInit:
 282              	.LFB40:
 205:Src/stm32f0xx_hal_msp.c **** 
 206:Src/stm32f0xx_hal_msp.c **** /**
 207:Src/stm32f0xx_hal_msp.c **** * @brief I2C MSP Initialization
 208:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 209:Src/stm32f0xx_hal_msp.c **** * @param hi2c: I2C handle pointer
 210:Src/stm32f0xx_hal_msp.c **** * @retval None
 211:Src/stm32f0xx_hal_msp.c **** */
 212:Src/stm32f0xx_hal_msp.c **** void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
 213:Src/stm32f0xx_hal_msp.c **** {
 283              		.loc 1 213 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 40
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              	.LVL16:
 288 0000 30B5     		push	{r4, r5, lr}
ARM GAS  /tmp/cc3zdOTF.s 			page 10


 289              	.LCFI5:
 290              		.cfi_def_cfa_offset 12
 291              		.cfi_offset 4, -12
 292              		.cfi_offset 5, -8
 293              		.cfi_offset 14, -4
 294 0002 8BB0     		sub	sp, sp, #44
 295              	.LCFI6:
 296              		.cfi_def_cfa_offset 56
 297 0004 0400     		movs	r4, r0
 214:Src/stm32f0xx_hal_msp.c **** 
 215:Src/stm32f0xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 298              		.loc 1 215 0
 299 0006 1422     		movs	r2, #20
 300 0008 0021     		movs	r1, #0
 301 000a 05A8     		add	r0, sp, #20
 302              	.LVL17:
 303 000c FFF7FEFF 		bl	memset
 304              	.LVL18:
 216:Src/stm32f0xx_hal_msp.c ****   if(hi2c->Instance==I2C1)
 305              		.loc 1 216 0
 306 0010 2368     		ldr	r3, [r4]
 307 0012 544A     		ldr	r2, .L29
 308 0014 9342     		cmp	r3, r2
 309 0016 04D0     		beq	.L23
 217:Src/stm32f0xx_hal_msp.c ****   {
 218:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspInit 0 */
 219:Src/stm32f0xx_hal_msp.c **** 
 220:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C1_MspInit 0 */
 221:Src/stm32f0xx_hal_msp.c ****   
 222:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 223:Src/stm32f0xx_hal_msp.c ****     /**I2C1 GPIO Configuration    
 224:Src/stm32f0xx_hal_msp.c ****     PB6     ------> I2C1_SCL
 225:Src/stm32f0xx_hal_msp.c ****     PB7     ------> I2C1_SDA 
 226:Src/stm32f0xx_hal_msp.c ****     */
 227:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = OLED_SCL_Pin|OLED_SDA_Pin;
 228:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 229:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 230:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 231:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 232:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 233:Src/stm32f0xx_hal_msp.c **** 
 234:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 235:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_I2C1_CLK_ENABLE();
 236:Src/stm32f0xx_hal_msp.c ****   
 237:Src/stm32f0xx_hal_msp.c ****     /* I2C1 DMA Init */
 238:Src/stm32f0xx_hal_msp.c ****     /* I2C1_RX Init */
 239:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Instance = DMA1_Channel3;
 240:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 241:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 242:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.MemInc = DMA_MINC_ENABLE;
 243:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 244:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 245:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.Mode = DMA_NORMAL;
 246:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.Priority = DMA_PRIORITY_LOW;
 247:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_i2c1_rx) != HAL_OK)
 248:Src/stm32f0xx_hal_msp.c ****     {
 249:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
ARM GAS  /tmp/cc3zdOTF.s 			page 11


 250:Src/stm32f0xx_hal_msp.c ****     }
 251:Src/stm32f0xx_hal_msp.c **** 
 252:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(hi2c,hdmarx,hdma_i2c1_rx);
 253:Src/stm32f0xx_hal_msp.c **** 
 254:Src/stm32f0xx_hal_msp.c ****     /* I2C1_TX Init */
 255:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Instance = DMA1_Channel2;
 256:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 257:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 258:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.MemInc = DMA_MINC_ENABLE;
 259:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 260:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 261:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.Mode = DMA_NORMAL;
 262:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.Priority = DMA_PRIORITY_LOW;
 263:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_i2c1_tx) != HAL_OK)
 264:Src/stm32f0xx_hal_msp.c ****     {
 265:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 266:Src/stm32f0xx_hal_msp.c ****     }
 267:Src/stm32f0xx_hal_msp.c **** 
 268:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(hi2c,hdmatx,hdma_i2c1_tx);
 269:Src/stm32f0xx_hal_msp.c **** 
 270:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspInit 1 */
 271:Src/stm32f0xx_hal_msp.c **** 
 272:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C1_MspInit 1 */
 273:Src/stm32f0xx_hal_msp.c ****   }
 274:Src/stm32f0xx_hal_msp.c ****   else if(hi2c->Instance==I2C2)
 310              		.loc 1 274 0
 311 0018 534A     		ldr	r2, .L29+4
 312 001a 9342     		cmp	r3, r2
 313 001c 4FD0     		beq	.L24
 314              	.L16:
 275:Src/stm32f0xx_hal_msp.c ****   {
 276:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspInit 0 */
 277:Src/stm32f0xx_hal_msp.c **** 
 278:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C2_MspInit 0 */
 279:Src/stm32f0xx_hal_msp.c ****   
 280:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 281:Src/stm32f0xx_hal_msp.c ****     /**I2C2 GPIO Configuration    
 282:Src/stm32f0xx_hal_msp.c ****     PB10     ------> I2C2_SCL
 283:Src/stm32f0xx_hal_msp.c ****     PB11     ------> I2C2_SDA 
 284:Src/stm32f0xx_hal_msp.c ****     */
 285:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pin = USB_SCL_Pin|USB_SDA_Pin;
 286:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 287:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 288:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 289:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_I2C2;
 290:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 291:Src/stm32f0xx_hal_msp.c **** 
 292:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 293:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_I2C2_CLK_ENABLE();
 294:Src/stm32f0xx_hal_msp.c ****   
 295:Src/stm32f0xx_hal_msp.c ****     /* I2C2 DMA Init */
 296:Src/stm32f0xx_hal_msp.c ****     /* I2C2_RX Init */
 297:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Instance = DMA1_Channel5;
 298:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 299:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 300:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.MemInc = DMA_MINC_ENABLE;
 301:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
ARM GAS  /tmp/cc3zdOTF.s 			page 12


 302:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 303:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.Mode = DMA_NORMAL;
 304:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.Priority = DMA_PRIORITY_HIGH;
 305:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_i2c2_rx) != HAL_OK)
 306:Src/stm32f0xx_hal_msp.c ****     {
 307:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 308:Src/stm32f0xx_hal_msp.c ****     }
 309:Src/stm32f0xx_hal_msp.c **** 
 310:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(hi2c,hdmarx,hdma_i2c2_rx);
 311:Src/stm32f0xx_hal_msp.c **** 
 312:Src/stm32f0xx_hal_msp.c ****     /* I2C2_TX Init */
 313:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Instance = DMA1_Channel4;
 314:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 315:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 316:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.MemInc = DMA_MINC_ENABLE;
 317:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 318:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 319:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.Mode = DMA_NORMAL;
 320:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.Priority = DMA_PRIORITY_HIGH;
 321:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_i2c2_tx) != HAL_OK)
 322:Src/stm32f0xx_hal_msp.c ****     {
 323:Src/stm32f0xx_hal_msp.c ****       Error_Handler();
 324:Src/stm32f0xx_hal_msp.c ****     }
 325:Src/stm32f0xx_hal_msp.c **** 
 326:Src/stm32f0xx_hal_msp.c ****     __HAL_LINKDMA(hi2c,hdmatx,hdma_i2c2_tx);
 327:Src/stm32f0xx_hal_msp.c **** 
 328:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspInit 1 */
 329:Src/stm32f0xx_hal_msp.c **** 
 330:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C2_MspInit 1 */
 331:Src/stm32f0xx_hal_msp.c ****   }
 332:Src/stm32f0xx_hal_msp.c **** 
 333:Src/stm32f0xx_hal_msp.c **** }
 315              		.loc 1 333 0
 316 001e 0BB0     		add	sp, sp, #44
 317              		@ sp needed
 318              	.LVL19:
 319 0020 30BD     		pop	{r4, r5, pc}
 320              	.LVL20:
 321              	.L23:
 322              	.LBB6:
 222:Src/stm32f0xx_hal_msp.c ****     /**I2C1 GPIO Configuration    
 323              		.loc 1 222 0
 324 0022 524D     		ldr	r5, .L29+8
 325 0024 6A69     		ldr	r2, [r5, #20]
 326 0026 8021     		movs	r1, #128
 327 0028 C902     		lsls	r1, r1, #11
 328 002a 0A43     		orrs	r2, r1
 329 002c 6A61     		str	r2, [r5, #20]
 330 002e 6B69     		ldr	r3, [r5, #20]
 331 0030 0B40     		ands	r3, r1
 332 0032 0193     		str	r3, [sp, #4]
 333 0034 019B     		ldr	r3, [sp, #4]
 334              	.LBE6:
 227:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 335              		.loc 1 227 0
 336 0036 C023     		movs	r3, #192
 337 0038 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/cc3zdOTF.s 			page 13


 228:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 338              		.loc 1 228 0
 339 003a AE3B     		subs	r3, r3, #174
 340 003c 0693     		str	r3, [sp, #24]
 229:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 341              		.loc 1 229 0
 342 003e 113B     		subs	r3, r3, #17
 343 0040 0793     		str	r3, [sp, #28]
 230:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 344              		.loc 1 230 0
 345 0042 0322     		movs	r2, #3
 346 0044 0892     		str	r2, [sp, #32]
 231:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 347              		.loc 1 231 0
 348 0046 0993     		str	r3, [sp, #36]
 232:Src/stm32f0xx_hal_msp.c **** 
 349              		.loc 1 232 0
 350 0048 05A9     		add	r1, sp, #20
 351 004a 4948     		ldr	r0, .L29+12
 352 004c FFF7FEFF 		bl	HAL_GPIO_Init
 353              	.LVL21:
 354              	.LBB7:
 235:Src/stm32f0xx_hal_msp.c ****   
 355              		.loc 1 235 0
 356 0050 EA69     		ldr	r2, [r5, #28]
 357 0052 8021     		movs	r1, #128
 358 0054 8903     		lsls	r1, r1, #14
 359 0056 0A43     		orrs	r2, r1
 360 0058 EA61     		str	r2, [r5, #28]
 361 005a EB69     		ldr	r3, [r5, #28]
 362 005c 0B40     		ands	r3, r1
 363 005e 0293     		str	r3, [sp, #8]
 364 0060 029B     		ldr	r3, [sp, #8]
 365              	.LBE7:
 239:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 366              		.loc 1 239 0
 367 0062 4448     		ldr	r0, .L29+16
 368 0064 444B     		ldr	r3, .L29+20
 369 0066 0360     		str	r3, [r0]
 240:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 370              		.loc 1 240 0
 371 0068 0023     		movs	r3, #0
 372 006a 4360     		str	r3, [r0, #4]
 241:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.MemInc = DMA_MINC_ENABLE;
 373              		.loc 1 241 0
 374 006c 8360     		str	r3, [r0, #8]
 242:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 375              		.loc 1 242 0
 376 006e 8022     		movs	r2, #128
 377 0070 C260     		str	r2, [r0, #12]
 243:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 378              		.loc 1 243 0
 379 0072 0361     		str	r3, [r0, #16]
 244:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.Mode = DMA_NORMAL;
 380              		.loc 1 244 0
 381 0074 4361     		str	r3, [r0, #20]
 245:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_rx.Init.Priority = DMA_PRIORITY_LOW;
ARM GAS  /tmp/cc3zdOTF.s 			page 14


 382              		.loc 1 245 0
 383 0076 8361     		str	r3, [r0, #24]
 246:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_i2c1_rx) != HAL_OK)
 384              		.loc 1 246 0
 385 0078 C361     		str	r3, [r0, #28]
 247:Src/stm32f0xx_hal_msp.c ****     {
 386              		.loc 1 247 0
 387 007a FFF7FEFF 		bl	HAL_DMA_Init
 388              	.LVL22:
 389 007e 0028     		cmp	r0, #0
 390 0080 17D1     		bne	.L25
 391              	.L18:
 252:Src/stm32f0xx_hal_msp.c **** 
 392              		.loc 1 252 0
 393 0082 3C4B     		ldr	r3, .L29+16
 394 0084 E363     		str	r3, [r4, #60]
 395 0086 5C62     		str	r4, [r3, #36]
 255:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 396              		.loc 1 255 0
 397 0088 3C48     		ldr	r0, .L29+24
 398 008a 3D4B     		ldr	r3, .L29+28
 399 008c 0360     		str	r3, [r0]
 256:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 400              		.loc 1 256 0
 401 008e 1023     		movs	r3, #16
 402 0090 4360     		str	r3, [r0, #4]
 257:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.MemInc = DMA_MINC_ENABLE;
 403              		.loc 1 257 0
 404 0092 0023     		movs	r3, #0
 405 0094 8360     		str	r3, [r0, #8]
 258:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 406              		.loc 1 258 0
 407 0096 8022     		movs	r2, #128
 408 0098 C260     		str	r2, [r0, #12]
 259:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 409              		.loc 1 259 0
 410 009a 0361     		str	r3, [r0, #16]
 260:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.Mode = DMA_NORMAL;
 411              		.loc 1 260 0
 412 009c 4361     		str	r3, [r0, #20]
 261:Src/stm32f0xx_hal_msp.c ****     hdma_i2c1_tx.Init.Priority = DMA_PRIORITY_LOW;
 413              		.loc 1 261 0
 414 009e 8361     		str	r3, [r0, #24]
 262:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_i2c1_tx) != HAL_OK)
 415              		.loc 1 262 0
 416 00a0 C361     		str	r3, [r0, #28]
 263:Src/stm32f0xx_hal_msp.c ****     {
 417              		.loc 1 263 0
 418 00a2 FFF7FEFF 		bl	HAL_DMA_Init
 419              	.LVL23:
 420 00a6 0028     		cmp	r0, #0
 421 00a8 06D1     		bne	.L26
 422              	.L19:
 268:Src/stm32f0xx_hal_msp.c **** 
 423              		.loc 1 268 0
 424 00aa 344B     		ldr	r3, .L29+24
 425 00ac A363     		str	r3, [r4, #56]
ARM GAS  /tmp/cc3zdOTF.s 			page 15


 426 00ae 5C62     		str	r4, [r3, #36]
 427 00b0 B5E7     		b	.L16
 428              	.L25:
 249:Src/stm32f0xx_hal_msp.c ****     }
 429              		.loc 1 249 0
 430 00b2 FFF7FEFF 		bl	Error_Handler
 431              	.LVL24:
 432 00b6 E4E7     		b	.L18
 433              	.L26:
 265:Src/stm32f0xx_hal_msp.c ****     }
 434              		.loc 1 265 0
 435 00b8 FFF7FEFF 		bl	Error_Handler
 436              	.LVL25:
 437 00bc F5E7     		b	.L19
 438              	.L24:
 439              	.LBB8:
 280:Src/stm32f0xx_hal_msp.c ****     /**I2C2 GPIO Configuration    
 440              		.loc 1 280 0
 441 00be 2B4D     		ldr	r5, .L29+8
 442 00c0 6A69     		ldr	r2, [r5, #20]
 443 00c2 8021     		movs	r1, #128
 444 00c4 C902     		lsls	r1, r1, #11
 445 00c6 0A43     		orrs	r2, r1
 446 00c8 6A61     		str	r2, [r5, #20]
 447 00ca 6B69     		ldr	r3, [r5, #20]
 448 00cc 0B40     		ands	r3, r1
 449 00ce 0393     		str	r3, [sp, #12]
 450 00d0 039B     		ldr	r3, [sp, #12]
 451              	.LBE8:
 285:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 452              		.loc 1 285 0
 453 00d2 C023     		movs	r3, #192
 454 00d4 1B01     		lsls	r3, r3, #4
 455 00d6 0593     		str	r3, [sp, #20]
 286:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 456              		.loc 1 286 0
 457 00d8 1223     		movs	r3, #18
 458 00da 0693     		str	r3, [sp, #24]
 287:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 459              		.loc 1 287 0
 460 00dc 113B     		subs	r3, r3, #17
 461 00de 0793     		str	r3, [sp, #28]
 288:Src/stm32f0xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_I2C2;
 462              		.loc 1 288 0
 463 00e0 0322     		movs	r2, #3
 464 00e2 0892     		str	r2, [sp, #32]
 289:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 465              		.loc 1 289 0
 466 00e4 0993     		str	r3, [sp, #36]
 290:Src/stm32f0xx_hal_msp.c **** 
 467              		.loc 1 290 0
 468 00e6 05A9     		add	r1, sp, #20
 469 00e8 2148     		ldr	r0, .L29+12
 470 00ea FFF7FEFF 		bl	HAL_GPIO_Init
 471              	.LVL26:
 472              	.LBB9:
 293:Src/stm32f0xx_hal_msp.c ****   
ARM GAS  /tmp/cc3zdOTF.s 			page 16


 473              		.loc 1 293 0
 474 00ee EA69     		ldr	r2, [r5, #28]
 475 00f0 8021     		movs	r1, #128
 476 00f2 C903     		lsls	r1, r1, #15
 477 00f4 0A43     		orrs	r2, r1
 478 00f6 EA61     		str	r2, [r5, #28]
 479 00f8 EB69     		ldr	r3, [r5, #28]
 480 00fa 0B40     		ands	r3, r1
 481 00fc 0493     		str	r3, [sp, #16]
 482 00fe 049B     		ldr	r3, [sp, #16]
 483              	.LBE9:
 297:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 484              		.loc 1 297 0
 485 0100 2048     		ldr	r0, .L29+32
 486 0102 214B     		ldr	r3, .L29+36
 487 0104 0360     		str	r3, [r0]
 298:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 488              		.loc 1 298 0
 489 0106 0023     		movs	r3, #0
 490 0108 4360     		str	r3, [r0, #4]
 299:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.MemInc = DMA_MINC_ENABLE;
 491              		.loc 1 299 0
 492 010a 8360     		str	r3, [r0, #8]
 300:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 493              		.loc 1 300 0
 494 010c 8022     		movs	r2, #128
 495 010e C260     		str	r2, [r0, #12]
 301:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 496              		.loc 1 301 0
 497 0110 0361     		str	r3, [r0, #16]
 302:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.Mode = DMA_NORMAL;
 498              		.loc 1 302 0
 499 0112 4361     		str	r3, [r0, #20]
 303:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_rx.Init.Priority = DMA_PRIORITY_HIGH;
 500              		.loc 1 303 0
 501 0114 8361     		str	r3, [r0, #24]
 304:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_i2c2_rx) != HAL_OK)
 502              		.loc 1 304 0
 503 0116 8023     		movs	r3, #128
 504 0118 9B01     		lsls	r3, r3, #6
 505 011a C361     		str	r3, [r0, #28]
 305:Src/stm32f0xx_hal_msp.c ****     {
 506              		.loc 1 305 0
 507 011c FFF7FEFF 		bl	HAL_DMA_Init
 508              	.LVL27:
 509 0120 0028     		cmp	r0, #0
 510 0122 19D1     		bne	.L27
 511              	.L21:
 310:Src/stm32f0xx_hal_msp.c **** 
 512              		.loc 1 310 0
 513 0124 174B     		ldr	r3, .L29+32
 514 0126 E363     		str	r3, [r4, #60]
 515 0128 5C62     		str	r4, [r3, #36]
 313:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 516              		.loc 1 313 0
 517 012a 1848     		ldr	r0, .L29+40
 518 012c 184B     		ldr	r3, .L29+44
ARM GAS  /tmp/cc3zdOTF.s 			page 17


 519 012e 0360     		str	r3, [r0]
 314:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 520              		.loc 1 314 0
 521 0130 1023     		movs	r3, #16
 522 0132 4360     		str	r3, [r0, #4]
 315:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.MemInc = DMA_MINC_ENABLE;
 523              		.loc 1 315 0
 524 0134 0023     		movs	r3, #0
 525 0136 8360     		str	r3, [r0, #8]
 316:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 526              		.loc 1 316 0
 527 0138 8022     		movs	r2, #128
 528 013a C260     		str	r2, [r0, #12]
 317:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 529              		.loc 1 317 0
 530 013c 0361     		str	r3, [r0, #16]
 318:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.Mode = DMA_NORMAL;
 531              		.loc 1 318 0
 532 013e 4361     		str	r3, [r0, #20]
 319:Src/stm32f0xx_hal_msp.c ****     hdma_i2c2_tx.Init.Priority = DMA_PRIORITY_HIGH;
 533              		.loc 1 319 0
 534 0140 8361     		str	r3, [r0, #24]
 320:Src/stm32f0xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_i2c2_tx) != HAL_OK)
 535              		.loc 1 320 0
 536 0142 8023     		movs	r3, #128
 537 0144 9B01     		lsls	r3, r3, #6
 538 0146 C361     		str	r3, [r0, #28]
 321:Src/stm32f0xx_hal_msp.c ****     {
 539              		.loc 1 321 0
 540 0148 FFF7FEFF 		bl	HAL_DMA_Init
 541              	.LVL28:
 542 014c 0028     		cmp	r0, #0
 543 014e 06D1     		bne	.L28
 544              	.L22:
 326:Src/stm32f0xx_hal_msp.c **** 
 545              		.loc 1 326 0
 546 0150 0E4B     		ldr	r3, .L29+40
 547 0152 A363     		str	r3, [r4, #56]
 548 0154 5C62     		str	r4, [r3, #36]
 549              		.loc 1 333 0
 550 0156 62E7     		b	.L16
 551              	.L27:
 307:Src/stm32f0xx_hal_msp.c ****     }
 552              		.loc 1 307 0
 553 0158 FFF7FEFF 		bl	Error_Handler
 554              	.LVL29:
 555 015c E2E7     		b	.L21
 556              	.L28:
 323:Src/stm32f0xx_hal_msp.c ****     }
 557              		.loc 1 323 0
 558 015e FFF7FEFF 		bl	Error_Handler
 559              	.LVL30:
 560 0162 F5E7     		b	.L22
 561              	.L30:
 562              		.align	2
 563              	.L29:
 564 0164 00540040 		.word	1073763328
ARM GAS  /tmp/cc3zdOTF.s 			page 18


 565 0168 00580040 		.word	1073764352
 566 016c 00100240 		.word	1073876992
 567 0170 00040048 		.word	1207960576
 568 0174 00000000 		.word	hdma_i2c1_rx
 569 0178 30000240 		.word	1073872944
 570 017c 00000000 		.word	hdma_i2c1_tx
 571 0180 1C000240 		.word	1073872924
 572 0184 00000000 		.word	hdma_i2c2_rx
 573 0188 58000240 		.word	1073872984
 574 018c 00000000 		.word	hdma_i2c2_tx
 575 0190 44000240 		.word	1073872964
 576              		.cfi_endproc
 577              	.LFE40:
 579              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 580              		.align	1
 581              		.global	HAL_I2C_MspDeInit
 582              		.syntax unified
 583              		.code	16
 584              		.thumb_func
 585              		.fpu softvfp
 587              	HAL_I2C_MspDeInit:
 588              	.LFB41:
 334:Src/stm32f0xx_hal_msp.c **** 
 335:Src/stm32f0xx_hal_msp.c **** /**
 336:Src/stm32f0xx_hal_msp.c **** * @brief I2C MSP De-Initialization
 337:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 338:Src/stm32f0xx_hal_msp.c **** * @param hi2c: I2C handle pointer
 339:Src/stm32f0xx_hal_msp.c **** * @retval None
 340:Src/stm32f0xx_hal_msp.c **** */
 341:Src/stm32f0xx_hal_msp.c **** 
 342:Src/stm32f0xx_hal_msp.c **** void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
 343:Src/stm32f0xx_hal_msp.c **** {
 589              		.loc 1 343 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              	.LVL31:
 594 0000 10B5     		push	{r4, lr}
 595              	.LCFI7:
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 4, -8
 598              		.cfi_offset 14, -4
 599 0002 0400     		movs	r4, r0
 344:Src/stm32f0xx_hal_msp.c **** 
 345:Src/stm32f0xx_hal_msp.c ****   if(hi2c->Instance==I2C1)
 600              		.loc 1 345 0
 601 0004 0368     		ldr	r3, [r0]
 602 0006 144A     		ldr	r2, .L36
 603 0008 9342     		cmp	r3, r2
 604 000a 03D0     		beq	.L34
 346:Src/stm32f0xx_hal_msp.c ****   {
 347:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspDeInit 0 */
 348:Src/stm32f0xx_hal_msp.c **** 
 349:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C1_MspDeInit 0 */
 350:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 351:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_I2C1_CLK_DISABLE();
 352:Src/stm32f0xx_hal_msp.c ****   
ARM GAS  /tmp/cc3zdOTF.s 			page 19


 353:Src/stm32f0xx_hal_msp.c ****     /**I2C1 GPIO Configuration    
 354:Src/stm32f0xx_hal_msp.c ****     PB6     ------> I2C1_SCL
 355:Src/stm32f0xx_hal_msp.c ****     PB7     ------> I2C1_SDA 
 356:Src/stm32f0xx_hal_msp.c ****     */
 357:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, OLED_SCL_Pin|OLED_SDA_Pin);
 358:Src/stm32f0xx_hal_msp.c **** 
 359:Src/stm32f0xx_hal_msp.c ****     /* I2C1 DMA DeInit */
 360:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hi2c->hdmarx);
 361:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hi2c->hdmatx);
 362:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspDeInit 1 */
 363:Src/stm32f0xx_hal_msp.c **** 
 364:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C1_MspDeInit 1 */
 365:Src/stm32f0xx_hal_msp.c ****   }
 366:Src/stm32f0xx_hal_msp.c ****   else if(hi2c->Instance==I2C2)
 605              		.loc 1 366 0
 606 000c 134A     		ldr	r2, .L36+4
 607 000e 9342     		cmp	r3, r2
 608 0010 10D0     		beq	.L35
 609              	.LVL32:
 610              	.L31:
 367:Src/stm32f0xx_hal_msp.c ****   {
 368:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspDeInit 0 */
 369:Src/stm32f0xx_hal_msp.c **** 
 370:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C2_MspDeInit 0 */
 371:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 372:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_I2C2_CLK_DISABLE();
 373:Src/stm32f0xx_hal_msp.c ****   
 374:Src/stm32f0xx_hal_msp.c ****     /**I2C2 GPIO Configuration    
 375:Src/stm32f0xx_hal_msp.c ****     PB10     ------> I2C2_SCL
 376:Src/stm32f0xx_hal_msp.c ****     PB11     ------> I2C2_SDA 
 377:Src/stm32f0xx_hal_msp.c ****     */
 378:Src/stm32f0xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, USB_SCL_Pin|USB_SDA_Pin);
 379:Src/stm32f0xx_hal_msp.c **** 
 380:Src/stm32f0xx_hal_msp.c ****     /* I2C2 DMA DeInit */
 381:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hi2c->hdmarx);
 382:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hi2c->hdmatx);
 383:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspDeInit 1 */
 384:Src/stm32f0xx_hal_msp.c **** 
 385:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END I2C2_MspDeInit 1 */
 386:Src/stm32f0xx_hal_msp.c ****   }
 387:Src/stm32f0xx_hal_msp.c **** 
 388:Src/stm32f0xx_hal_msp.c **** }
 611              		.loc 1 388 0
 612              		@ sp needed
 613              	.LVL33:
 614 0012 10BD     		pop	{r4, pc}
 615              	.LVL34:
 616              	.L34:
 351:Src/stm32f0xx_hal_msp.c ****   
 617              		.loc 1 351 0
 618 0014 124A     		ldr	r2, .L36+8
 619 0016 D369     		ldr	r3, [r2, #28]
 620 0018 1249     		ldr	r1, .L36+12
 621 001a 0B40     		ands	r3, r1
 622 001c D361     		str	r3, [r2, #28]
 357:Src/stm32f0xx_hal_msp.c **** 
 623              		.loc 1 357 0
ARM GAS  /tmp/cc3zdOTF.s 			page 20


 624 001e C021     		movs	r1, #192
 625 0020 1148     		ldr	r0, .L36+16
 626              	.LVL35:
 627 0022 FFF7FEFF 		bl	HAL_GPIO_DeInit
 628              	.LVL36:
 360:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hi2c->hdmatx);
 629              		.loc 1 360 0
 630 0026 E06B     		ldr	r0, [r4, #60]
 631 0028 FFF7FEFF 		bl	HAL_DMA_DeInit
 632              	.LVL37:
 361:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C1_MspDeInit 1 */
 633              		.loc 1 361 0
 634 002c A06B     		ldr	r0, [r4, #56]
 635 002e FFF7FEFF 		bl	HAL_DMA_DeInit
 636              	.LVL38:
 637 0032 EEE7     		b	.L31
 638              	.LVL39:
 639              	.L35:
 372:Src/stm32f0xx_hal_msp.c ****   
 640              		.loc 1 372 0
 641 0034 0A4A     		ldr	r2, .L36+8
 642 0036 D369     		ldr	r3, [r2, #28]
 643 0038 0C49     		ldr	r1, .L36+20
 644 003a 0B40     		ands	r3, r1
 645 003c D361     		str	r3, [r2, #28]
 378:Src/stm32f0xx_hal_msp.c **** 
 646              		.loc 1 378 0
 647 003e C021     		movs	r1, #192
 648 0040 0901     		lsls	r1, r1, #4
 649 0042 0948     		ldr	r0, .L36+16
 650              	.LVL40:
 651 0044 FFF7FEFF 		bl	HAL_GPIO_DeInit
 652              	.LVL41:
 381:Src/stm32f0xx_hal_msp.c ****     HAL_DMA_DeInit(hi2c->hdmatx);
 653              		.loc 1 381 0
 654 0048 E06B     		ldr	r0, [r4, #60]
 655 004a FFF7FEFF 		bl	HAL_DMA_DeInit
 656              	.LVL42:
 382:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN I2C2_MspDeInit 1 */
 657              		.loc 1 382 0
 658 004e A06B     		ldr	r0, [r4, #56]
 659 0050 FFF7FEFF 		bl	HAL_DMA_DeInit
 660              	.LVL43:
 661              		.loc 1 388 0
 662 0054 DDE7     		b	.L31
 663              	.L37:
 664 0056 C046     		.align	2
 665              	.L36:
 666 0058 00540040 		.word	1073763328
 667 005c 00580040 		.word	1073764352
 668 0060 00100240 		.word	1073876992
 669 0064 FFFFDFFF 		.word	-2097153
 670 0068 00040048 		.word	1207960576
 671 006c FFFFBFFF 		.word	-4194305
 672              		.cfi_endproc
 673              	.LFE41:
 675              		.text
ARM GAS  /tmp/cc3zdOTF.s 			page 21


 676              	.Letext0:
 677              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 678              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 679              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 680              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 681              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 682              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 683              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 684              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 685              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 686              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 687              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 688              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 689              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 690              		.file 15 "Inc/main.h"
 691              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 692              		.file 17 "<built-in>"
ARM GAS  /tmp/cc3zdOTF.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_msp.c
     /tmp/cc3zdOTF.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/cc3zdOTF.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/cc3zdOTF.s:75     .text.HAL_MspInit:0000000000000038 $d
     /tmp/cc3zdOTF.s:80     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/cc3zdOTF.s:87     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/cc3zdOTF.s:204    .text.HAL_ADC_MspInit:000000000000008c $d
     /tmp/cc3zdOTF.s:212    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/cc3zdOTF.s:219    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/cc3zdOTF.s:267    .text.HAL_ADC_MspDeInit:000000000000002c $d
     /tmp/cc3zdOTF.s:274    .text.HAL_I2C_MspInit:0000000000000000 $t
     /tmp/cc3zdOTF.s:281    .text.HAL_I2C_MspInit:0000000000000000 HAL_I2C_MspInit
     /tmp/cc3zdOTF.s:564    .text.HAL_I2C_MspInit:0000000000000164 $d
     /tmp/cc3zdOTF.s:580    .text.HAL_I2C_MspDeInit:0000000000000000 $t
     /tmp/cc3zdOTF.s:587    .text.HAL_I2C_MspDeInit:0000000000000000 HAL_I2C_MspDeInit
     /tmp/cc3zdOTF.s:666    .text.HAL_I2C_MspDeInit:0000000000000058 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
memset
HAL_GPIO_Init
HAL_DMA_Init
Error_Handler
hdma_adc
HAL_GPIO_DeInit
HAL_DMA_DeInit
hdma_i2c1_rx
hdma_i2c1_tx
hdma_i2c2_rx
hdma_i2c2_tx
